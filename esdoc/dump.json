[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/cameras/index.js",
    "content": "'use strict'\n\n/**\n * Module exports.\n */\n\nexport { OrthographicCamera } from './orthographic'\nexport { PerspectiveCamera } from './perspective'\n",
    "static": true,
    "longname": "src/cameras/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "file",
    "name": "src/cameras/orthographic.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { CameraContext, Camera } from '../core/camera'\nimport { radians } from '../utils'\n\nimport createBaseCameraController from 'orthographic-camera'\nimport coalesce from 'defined'\nimport vec4 from 'gl-vec4'\n\n/**\n * Default far plane value for a camera. Used as input for computing\n * a orthographic projection atrix.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kDefaultCameraFar = 1000.0\n\n/**\n * Default near plane value for a camera. Used as input for computing\n * a orthographic matrix.\n *\n * @public\n * @const\n * @type {Number}\n */\nexport const kDefaultCameraNear = 0.1\n\n/**\n * A OrthographicCamera class represents an abstraction around a camera\n * with an orthographic projection that is affected by viewport bounds.\n *\n * @public\n * @class OrthographicCamera\n * @extends Camera\n * @see {@link Camera}\n * @see {@link https://github.com/littlstar/orthographic-camera}\n */\n\nexport class OrthographicCamera extends Camera {\n\n  /**\n   * OrthographicCamera class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState) {\n\n    /**\n     * Camera regl context.\n     */\n\n    const context = new OrthographicCameraContext(ctx, {\n      ...initialState\n    })\n\n    super(ctx, {\n      ...initialState,\n      context\n    })\n  }\n}\n\n/**\n * OrthographicCameraContext class.\n *\n * @public\n * @class OrthographicCameraContext\n * @extends CameraContext\n * @see {@link https://github.com/Jam3/orthographic-camera}\n */\n\nexport class OrthographicCameraContext extends CameraContext {\n\n  /**\n   * OrthographicCameraContext class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   * @see {@link CameraContext#constructor}\n   */\n\n  constructor(ctx, initialState) {\n\n    /**\n     * Initial far plane value.\n     */\n\n    const initialFar = coalesce(\n      initialState.far,\n      kDefaultCameraFar)\n\n    /**\n     * Initial near plane value.\n     */\n\n    const initialNear = coalesce(\n      initialState.near,\n      kDefaultCameraNear)\n\n    /**\n     * Base orthographic camera controller.\n     */\n\n    const controller = createBaseCameraController({\n      position: [...(initialState.position || [0, 0, 0])],\n      near: initialNear,\n      far: initialFar,\n    })\n\n    super(ctx, {\n      ...initialState,\n      controller\n    })\n  }\n\n  /**\n   * Updates base camera controller viewport. If a viewport\n   * object is given, it will supersede other viewport* values\n   * given to this function.\n   *\n   * @protected\n   * @method\n   * @param {!Object} opts\n   * @param {Number} opts.viewportTop\n   * @param {Number} opts.viewportLeft\n   * @param {Number} opts.viewportWidth\n   * @param {Number} opts.viewportHeight\n   * @param {Number} opts.viewport\n   */\n\n  updateCameraViewport({\n    viewportWidth,\n    viewportHeight,\n    viewport: contextViewport = this.initialViewport\n  }, {\n    viewport = contextViewport\n  } = {}) {\n    // update controller viewport\n    Object.assign(this.controller.viewport, viewport || [\n      -viewportWidth,\n      -viewportHeight,\n      viewportWidth,\n      viewportHeight,\n    ])\n  }\n}\n",
    "static": true,
    "longname": "src/cameras/orthographic.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2,
    "kind": "variable",
    "name": "kDefaultCameraFar",
    "memberof": "src/cameras/orthographic.js",
    "static": true,
    "longname": "src/cameras/orthographic.js~kDefaultCameraFar",
    "access": "public",
    "export": true,
    "importPath": "axis3d/cameras/orthographic",
    "importStyle": "{kDefaultCameraFar}",
    "description": "Default far plane value for a camera. Used as input for computing\na orthographic projection atrix.",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "name": "kDefaultCameraNear",
    "memberof": "src/cameras/orthographic.js",
    "static": true,
    "longname": "src/cameras/orthographic.js~kDefaultCameraNear",
    "access": "public",
    "export": true,
    "importPath": "axis3d/cameras/orthographic",
    "importStyle": "{kDefaultCameraNear}",
    "description": "Default near plane value for a camera. Used as input for computing\na orthographic matrix.",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4,
    "kind": "class",
    "name": "OrthographicCamera",
    "memberof": "src/cameras/orthographic.js",
    "static": true,
    "longname": "src/cameras/orthographic.js~OrthographicCamera",
    "access": "public",
    "export": true,
    "importPath": "axis3d/cameras/orthographic",
    "importStyle": "{OrthographicCamera}",
    "description": "A OrthographicCamera class represents an abstraction around a camera\nwith an orthographic projection that is affected by viewport bounds.",
    "see": [
      "{@link Camera}",
      "{@link https://github.com/littlstar/orthographic-camera}"
    ],
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "OrthographicCamera"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 5,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cameras/orthographic.js~OrthographicCamera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cameras/orthographic.js~OrthographicCamera#constructor",
    "access": "public",
    "description": "OrthographicCamera class constructor.",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 6,
    "kind": "class",
    "name": "OrthographicCameraContext",
    "memberof": "src/cameras/orthographic.js",
    "static": true,
    "longname": "src/cameras/orthographic.js~OrthographicCameraContext",
    "access": "public",
    "export": true,
    "importPath": "axis3d/cameras/orthographic",
    "importStyle": "{OrthographicCameraContext}",
    "description": "OrthographicCameraContext class.",
    "see": [
      "{@link https://github.com/Jam3/orthographic-camera}"
    ],
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "OrthographicCameraContext"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 7,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cameras/orthographic.js~OrthographicCameraContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cameras/orthographic.js~OrthographicCameraContext#constructor",
    "access": "public",
    "description": "OrthographicCameraContext class constructor.",
    "see": [
      "{@link CameraContext#constructor}"
    ],
    "lineNumber": 95,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 8,
    "kind": "method",
    "name": "updateCameraViewport",
    "memberof": "src/cameras/orthographic.js~OrthographicCameraContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cameras/orthographic.js~OrthographicCameraContext#updateCameraViewport",
    "access": "protected",
    "description": "Updates base camera controller viewport. If a viewport\nobject is given, it will supersede other viewport* values\ngiven to this function.",
    "lineNumber": 144,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.viewportTop",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.viewportLeft",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.viewportWidth",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.viewportHeight",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.viewport",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 9,
    "kind": "file",
    "name": "src/cameras/perspective.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { CameraContext, Camera } from '../core/camera'\nimport { radians } from '../utils'\n\nimport createBaseCameraController from 'perspective-camera'\nimport coalesce from 'defined'\n\n/**\n * Default far plane value for a camera. Used as input for computing\n * a perspective projection matrix.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kDefaultCameraFar = 1000.0\n\n/**\n * Default near plane value for a camera. Used as input for computing\n * a perspective matrix.\n *\n * @public\n * @const\n * @type {Number}\n */\nexport const kDefaultCameraNear = 0.01\n\n/**\n * Default field of view (FOV) angle value, in radians, for a camera.\n * It is used as input for computing a perspective matrix.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kDefaultCameraFieldOfView = radians(60)\n\n/**\n * A PerspectiveCamera class represents an abstraction around a camera\n * with a perspective projection that is affected by a field of view.\n *\n * @public\n * @class PerspectiveCamera\n * @extends Camera\n * @see {@link Camera}\n * @see {@link https://github.com/Jam3/perspective-camera}\n */\n\nexport class PerspectiveCamera extends Camera {\n\n  /**\n   * PerspectiveCamera class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n\n    /**\n     * Camera regl context.\n     */\n\n    const context = new PerspectiveCameraContext(ctx, initialState)\n\n    super(ctx, { ...initialState, context })\n  }\n}\n\n/**\n * PerspectiveCameraContext class.\n *\n * @public\n * @class PerspectiveCameraContext\n * @extends CameraContext\n * @see {@link https://github.com/Jam3/perspective-camera}\n */\n\nexport class PerspectiveCameraContext extends CameraContext {\n\n  /**\n   * PerspectiveCameraContext class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   * @see {@link CameraContext#constructor}\n   */\n\n  constructor(ctx, initialState) {\n\n    /**\n     * Initial field of view value.\n     */\n\n    const initialFov = coalesce(\n      initialState.fov,\n      initialState.fieldOfView,\n      kDefaultCameraFieldOfView)\n\n    /**\n     * Initial far plane value.\n     */\n\n    const initialFar = coalesce(\n      initialState.far,\n      kDefaultCameraFar)\n\n    /**\n     * Initial near plane value.\n     */\n\n    const initialNear = coalesce(\n      initialState.near,\n      kDefaultCameraNear)\n\n    /**\n     * Base perspective camera controller.\n     */\n\n    const controller = createBaseCameraController({\n      direction: [...(initialState.direction || [0, 0, -1])],\n      position: [...(initialState.position || [0, 0, 0])],\n      near: initialNear,\n      fov: initialFov,\n      far: initialFar,\n    })\n\n    super(ctx, { ...initialState, controller })\n\n    /**\n     * The field of view (FOV) in radians for a camera.\n     *\n     * @public\n     * @type {Number}\n     */\n\n    this.fov = (...args) => {\n      this.updateCameraController(...args)\n      return this.controller.fov\n    }\n  }\n\n  /**\n   * Updates perspective camera controller state.\n   *\n   * @protected\n   * @method\n   * @param {{fov: Number}} opts\n   */\n\n  updateCameraController({\n    fov: contextFov = this.controller.fov\n  } = {}, {\n    fov = contextFov\n  } = {}) {\n    super.updateCameraController(...arguments)\n    if (fov && this.controller.fov != fov) {\n      this.controller.fov = fov\n    }\n    this.controller.update()\n  }\n}\n",
    "static": true,
    "longname": "src/cameras/perspective.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 10,
    "kind": "variable",
    "name": "kDefaultCameraFar",
    "memberof": "src/cameras/perspective.js",
    "static": true,
    "longname": "src/cameras/perspective.js~kDefaultCameraFar",
    "access": "public",
    "export": true,
    "importPath": "axis3d/cameras/perspective",
    "importStyle": "{kDefaultCameraFar}",
    "description": "Default far plane value for a camera. Used as input for computing\na perspective projection matrix.",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 11,
    "kind": "variable",
    "name": "kDefaultCameraNear",
    "memberof": "src/cameras/perspective.js",
    "static": true,
    "longname": "src/cameras/perspective.js~kDefaultCameraNear",
    "access": "public",
    "export": true,
    "importPath": "axis3d/cameras/perspective",
    "importStyle": "{kDefaultCameraNear}",
    "description": "Default near plane value for a camera. Used as input for computing\na perspective matrix.",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12,
    "kind": "variable",
    "name": "kDefaultCameraFieldOfView",
    "memberof": "src/cameras/perspective.js",
    "static": true,
    "longname": "src/cameras/perspective.js~kDefaultCameraFieldOfView",
    "access": "public",
    "export": true,
    "importPath": "axis3d/cameras/perspective",
    "importStyle": "{kDefaultCameraFieldOfView}",
    "description": "Default field of view (FOV) angle value, in radians, for a camera.\nIt is used as input for computing a perspective matrix.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 13,
    "kind": "class",
    "name": "PerspectiveCamera",
    "memberof": "src/cameras/perspective.js",
    "static": true,
    "longname": "src/cameras/perspective.js~PerspectiveCamera",
    "access": "public",
    "export": true,
    "importPath": "axis3d/cameras/perspective",
    "importStyle": "{PerspectiveCamera}",
    "description": "A PerspectiveCamera class represents an abstraction around a camera\nwith a perspective projection that is affected by a field of view.",
    "see": [
      "{@link Camera}",
      "{@link https://github.com/Jam3/perspective-camera}"
    ],
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PerspectiveCamera"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 14,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cameras/perspective.js~PerspectiveCamera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cameras/perspective.js~PerspectiveCamera#constructor",
    "access": "public",
    "description": "PerspectiveCamera class constructor.",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 15,
    "kind": "class",
    "name": "PerspectiveCameraContext",
    "memberof": "src/cameras/perspective.js",
    "static": true,
    "longname": "src/cameras/perspective.js~PerspectiveCameraContext",
    "access": "public",
    "export": true,
    "importPath": "axis3d/cameras/perspective",
    "importStyle": "{PerspectiveCameraContext}",
    "description": "PerspectiveCameraContext class.",
    "see": [
      "{@link https://github.com/Jam3/perspective-camera}"
    ],
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PerspectiveCameraContext"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 16,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cameras/perspective.js~PerspectiveCameraContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cameras/perspective.js~PerspectiveCameraContext#constructor",
    "access": "public",
    "description": "PerspectiveCameraContext class constructor.",
    "see": [
      "{@link CameraContext#constructor}"
    ],
    "lineNumber": 100,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 17,
    "kind": "member",
    "name": "fov",
    "memberof": "src/cameras/perspective.js~PerspectiveCameraContext",
    "static": false,
    "longname": "src/cameras/perspective.js~PerspectiveCameraContext#fov",
    "access": "public",
    "description": "The field of view (FOV) in radians for a camera.",
    "lineNumber": 148,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 18,
    "kind": "method",
    "name": "updateCameraController",
    "memberof": "src/cameras/perspective.js~PerspectiveCameraContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cameras/perspective.js~PerspectiveCameraContext#updateCameraController",
    "access": "protected",
    "description": "Updates perspective camera controller state.",
    "lineNumber": 162,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{fov: Number}"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 19,
    "kind": "file",
    "name": "src/core/camera.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { Object3D, Object3DContext } from '../core/object3d'\nimport { Quaternion, Vector3 } from '../math'\nimport { registerStat } from '../stats'\n\nimport computeEyeVector from 'eye-vector'\nimport coalesce from 'defined'\nimport mat4 from 'gl-mat4'\nimport vec3 from 'gl-vec3'\nimport quat from 'gl-quat'\n\nconst scratchQuaternion = new Quaternion()\nconst scratchMatrix = mat4.identity([])\n\n/**\n * The Camera class represents an abstraction around a view matrix. It\n * inherits from Object3D, so it has positional state input.\n *\n * @public\n * @abstract\n * @class Camera\n * @extends Object3D\n * @see {@link Object3D}\n * @see {@link PerspectiveCamera}\n * @see {@link OrthographicCamera}\n */\n\nexport class Camera extends Object3D {\n\n  /**\n   * Camera class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   * @throws TypeError\n   */\n\n  constructor(ctx, initialState = {}) {\n    registerStat('Camera')\n\n    /**\n     * The injected regl context.\n     */\n\n    const {context = new CameraContext(ctx, initialState)} = initialState\n\n    /**\n     * Regl shader uniforms\n     */\n\n    const {uniforms = new CameraUniforms(ctx, initialState)} = initialState\n\n    /**\n     * Regl context injection function.\n     */\n\n    const injectContext = ctx.regl({ context, uniforms })\n\n    super(ctx, {\n      ...initialState,\n\n      // all Object3D descendants must implement an update\n      // method to actually do something\n      update({}, state, block) {\n        injectContext(state, block)\n      }\n    })\n  }\n}\n\n/**\n * CameraContext class.\n *\n * @public\n * @class CameraContext\n * @extends Object3DContext\n */\n\nexport class CameraContext extends Object3DContext {\n\n  /**\n   * CameraContext class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   * @throws TypeError\n   */\n\n  constructor(ctx, initialState) {\n    super(ctx, {\n      ...initialState,\n      computeTransformMatrix: false,\n      computeLocalMatrix: false,\n    })\n\n    /**\n     * Initial, and default camera lookAt target.\n     */\n\n    const {initialTarget = new Vector3(0, 0, 0)} = initialState\n\n    /**\n     * Base camera controller.\n     */\n\n    const {controller} = initialState\n    if (null == controller) {\n      throw TypeError(\"CameraContext expects a controller.\")\n    }\n\n    /**\n     * Computed view matrix.\n     */\n\n    const viewMatrix = mat4.identity([])\n\n    /**\n     * Computed eye vector.\n     */\n\n    const eye = new Vector3(0, 0, 0)\n\n    // protected properties\n    Object.defineProperties(this, {\n      initialViewport: {\n        get() { return initialState.viewport },\n        enumerable: false,\n      },\n      initialTarget: { get() { return initialTarget }, enumerable: false },\n      viewMatrix: { get() { return viewMatrix }, enumerable: false },\n      controller: { get() { return controller }, enumerable: false, },\n    })\n\n    /**\n     * The copmuted viewport aspect ratio.\n     *\n     * @public\n     * @type {Number}\n     */\n\n    this.aspect = ({viewportWidth: width, viewportHeight: height}) => {\n      return width/height\n    }\n\n    /**\n     * The computed projection matrix for a camera.\n     *\n     * @public\n     * @type {Array<Number>}\n     */\n\n    this.projection = (...args) => {\n      this.updateCameraController(...args)\n      return controller.projection.slice()\n    }\n\n    /**\n     * The computed view matrix for a camera.\n     *\n     * @public\n     * @type {Array<Number>}\n     */\n\n    this.view = (...args) => {\n      return this.computeViewMatrix(...args)\n    }\n\n    /**\n     * The view direction for a camera.\n     *\n     * @public\n     * @type {Array<Number>}\n     */\n\n    this.direction = (...args) => {\n      this.updateCameraController(...args)\n      return controller.direction\n    }\n\n    /**\n     * The view target.\n     *\n     * @public\n     * @type {Array<Number>}\n     */\n\n    this.target = ({}, {target} = {}) => {\n      return coalesce(target, initialTarget)\n    }\n\n    /**\n     * The near plane for a camera.\n     *\n     * @public\n     * @type {Number}\n     */\n\n    this.near = (...args) => {\n      this.updateCameraController(...args)\n      return controller.near\n    }\n\n    /**\n     * The far plane for a camera.\n     *\n     * @public\n     * @type {Number}\n     */\n\n    this.far = (...args) => {\n      this.updateCameraController(...args)\n      return controller.far\n    }\n\n    /**\n     * The computed eye vector for a camera.\n     *\n     * @public\n     * @type {Array<Number>}\n     * @see {@link https://github.com/hughsk/eye-vector}\n     */\n\n    this.eye = (...args) => {\n      computeEyeVector(viewMatrix, eye)\n      return eye\n    }\n\n    /**\n     * The computed up vector for a camera.\n     *\n     * @public\n     * @type {Array<Number>}\n     */\n\n    this.up = (...args) => {\n      this.updateCameraController(...args)\n      return controller.up\n    }\n\n    /**\n     * Creates a picking ray from a mouse input\n     *\n     * @public\n     * @type {Function}\n     * @param {MouseInput|Function} mouse\n     * @return {Ray3D}\n     * @see {@link https://github.com/Jam3/ray-3d}\n     */\n\n    this.createPickingRay = ({viewportHeight: h}) => {\n      let mx = 0, my = 0\n      return (mouse) => {\n        mouse(({currentX: x, currentY: y}) => {\n          mx = x\n          my = h - y\n        })\n        return controller.createPickingRay([mx, my])\n      }\n    }\n\n    /**\n     *\n     * @public\n     * @type {Array<Number>}\n     */\n\n    this.viewport = ({}, args) => {\n      args = args || {}\n      return coalesce(args.viewport, initialState.viewport, null)\n    }\n  }\n\n  /**\n   * Computes the view matrix.\n   *\n   * @protected\n   * @method\n   * @return {Array}\n   */\n\n  // context properties are ignored\n  computeViewMatrix({}, {\n    position = this.initialPosition,\n    rotation = this.initialRotation,\n    target = this.initialTarget,\n    scale = this.initialScale,\n  } = {}) {\n    this.updateCameraController(...arguments)\n    this.updateCameraViewport(...arguments)\n\n    if (!position || !rotation || !scale) {\n      return\n    }\n\n    const {\n      localMatrix,\n      viewMatrix,\n      controller,\n    } = this\n\n    // update controller controller\n    controller.identity()\n    controller.translate(position)\n    controller.lookAt(vec3.multiply([], target, scale))\n    controller.update()\n\n    quat.normalize(scratchQuaternion, rotation)\n    mat4.copy(viewMatrix, controller.view)\n    mat4.fromQuat(scratchMatrix, scratchQuaternion)\n    mat4.multiply(viewMatrix, viewMatrix, scratchMatrix)\n    return viewMatrix\n  }\n\n  /**\n   * Updates controller camera controller, if needed.\n   *\n   * @protected\n   * @abstract\n   * @method\n   * @param {{far: Number, near: Number}} opts\n   */\n\n  updateCameraController({\n    near: contextNear = this.controller.near,\n    far: contextFar = this.controller.far,\n  }, {\n    near = contextNear,\n    far = contextFar,\n  } = {}) {\n    let needsUpdate = false\n    if (far && this.controller.far != far) {\n      this.controller.far = far\n      needsUpdate = true\n    }\n\n    if (near && this.controller.near != near) {\n      this.controller.near = near\n      needsUpdate = true\n    }\n\n    if (needsUpdate) {\n      this.controller.update()\n    }\n  }\n\n  /**\n   * Updates base camera controller viewport.\n   *\n   * @protected\n   * @abstract\n   * @method\n   * @param {!Object} opts\n   * @param {Number} opts.viewportTop\n   * @param {Number} opts.viewportLeft\n   * @param {Number} opts.viewportWidth\n   * @param {Number} opts.viewportHeight\n   */\n\n  updateCameraViewport({\n    viewportTop = -1,\n    viewportLeft = -1,\n    viewportWidth,\n    viewportHeight,\n    viewport: contextViewport = null\n  }, {\n    viewport = contextViewport\n  } = {}) {\n    // update controller viewport\n    Object.assign(this.controller.viewport, viewport || [\n      viewportLeft, viewportTop, viewportWidth, viewportHeight\n    ])\n  }\n}\n\n/**\n * CameraUniforms class.\n *\n * @public\n * @class CameraUniforms\n */\n\nexport class CameraUniforms {\n\n  /**\n   * CameraUniforms class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState) {\n\n    /**\n     * The computed projection matrix for a camera used\n     * as a uniform mat4 in a shader.\n     *\n     * @public\n     * @type {Array<Number>}\n     */\n\n    this['camera.projection'] = ({projection}) => {\n      return projection\n    }\n\n    /**\n     * The computed aspect ratio for a camera used\n     * as a uniform float in a shader.\n     *\n     * @public\n     * @type {Number}\n     */\n\n    this['camera.aspect'] = ({aspect}) => {\n      return aspect\n    }\n\n    /**\n     * The computed view matrix for a camera used\n     * as a uniform mat4 in a shader.\n     *\n     * @public\n     * @type {Array<Number>}\n     */\n\n    this['camera.view'] = ({view}) => {\n      return view\n    }\n\n    /**\n     * The computed eye vector  for a camera used\n     * as a uniform vec3 in a shader.\n     *\n     * @public\n     * @type {Array<Number>}\n     */\n\n    this['camera.eye'] = ({eye}) => {\n      return [...eye]\n    }\n  }\n}\n",
    "static": true,
    "longname": "src/core/camera.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 20,
    "kind": "variable",
    "name": "scratchQuaternion",
    "memberof": "src/core/camera.js",
    "static": true,
    "longname": "src/core/camera.js~scratchQuaternion",
    "access": null,
    "export": false,
    "importPath": "axis3d/core/camera",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "src/math.js~Quaternion"
      ]
    }
  },
  {
    "__docId__": 21,
    "kind": "variable",
    "name": "scratchMatrix",
    "memberof": "src/core/camera.js",
    "static": true,
    "longname": "src/core/camera.js~scratchMatrix",
    "access": null,
    "export": false,
    "importPath": "axis3d/core/camera",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 22,
    "kind": "class",
    "name": "Camera",
    "memberof": "src/core/camera.js",
    "static": true,
    "longname": "src/core/camera.js~Camera",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/camera",
    "importStyle": "{Camera}",
    "description": "The Camera class represents an abstraction around a view matrix. It\ninherits from Object3D, so it has positional state input.",
    "see": [
      "{@link Object3D}",
      "{@link PerspectiveCamera}",
      "{@link OrthographicCamera}"
    ],
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Camera"
      }
    ],
    "abstract": true,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 23,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/camera.js~Camera",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/camera.js~Camera#constructor",
    "access": "public",
    "description": "Camera class constructor.",
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "TypeError"
      }
    ]
  },
  {
    "__docId__": 24,
    "kind": "class",
    "name": "CameraContext",
    "memberof": "src/core/camera.js",
    "static": true,
    "longname": "src/core/camera.js~CameraContext",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/camera",
    "importStyle": "{CameraContext}",
    "description": "CameraContext class.",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CameraContext"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 25,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/camera.js~CameraContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/camera.js~CameraContext#constructor",
    "access": "public",
    "description": "CameraContext class constructor.",
    "lineNumber": 98,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "TypeError"
      }
    ]
  },
  {
    "__docId__": 26,
    "kind": "member",
    "name": "aspect",
    "memberof": "src/core/camera.js~CameraContext",
    "static": false,
    "longname": "src/core/camera.js~CameraContext#aspect",
    "access": "public",
    "description": "The copmuted viewport aspect ratio.",
    "lineNumber": 150,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 27,
    "kind": "member",
    "name": "projection",
    "memberof": "src/core/camera.js~CameraContext",
    "static": false,
    "longname": "src/core/camera.js~CameraContext#projection",
    "access": "public",
    "description": "The computed projection matrix for a camera.",
    "lineNumber": 161,
    "type": {
      "nullable": null,
      "types": [
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 28,
    "kind": "member",
    "name": "view",
    "memberof": "src/core/camera.js~CameraContext",
    "static": false,
    "longname": "src/core/camera.js~CameraContext#view",
    "access": "public",
    "description": "The computed view matrix for a camera.",
    "lineNumber": 173,
    "type": {
      "nullable": null,
      "types": [
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 29,
    "kind": "member",
    "name": "direction",
    "memberof": "src/core/camera.js~CameraContext",
    "static": false,
    "longname": "src/core/camera.js~CameraContext#direction",
    "access": "public",
    "description": "The view direction for a camera.",
    "lineNumber": 184,
    "type": {
      "nullable": null,
      "types": [
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 30,
    "kind": "member",
    "name": "target",
    "memberof": "src/core/camera.js~CameraContext",
    "static": false,
    "longname": "src/core/camera.js~CameraContext#target",
    "access": "public",
    "description": "The view target.",
    "lineNumber": 196,
    "type": {
      "nullable": null,
      "types": [
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 31,
    "kind": "member",
    "name": "near",
    "memberof": "src/core/camera.js~CameraContext",
    "static": false,
    "longname": "src/core/camera.js~CameraContext#near",
    "access": "public",
    "description": "The near plane for a camera.",
    "lineNumber": 207,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 32,
    "kind": "member",
    "name": "far",
    "memberof": "src/core/camera.js~CameraContext",
    "static": false,
    "longname": "src/core/camera.js~CameraContext#far",
    "access": "public",
    "description": "The far plane for a camera.",
    "lineNumber": 219,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 33,
    "kind": "member",
    "name": "eye",
    "memberof": "src/core/camera.js~CameraContext",
    "static": false,
    "longname": "src/core/camera.js~CameraContext#eye",
    "access": "public",
    "description": "The computed eye vector for a camera.",
    "see": [
      "{@link https://github.com/hughsk/eye-vector}"
    ],
    "lineNumber": 232,
    "type": {
      "nullable": null,
      "types": [
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 34,
    "kind": "member",
    "name": "up",
    "memberof": "src/core/camera.js~CameraContext",
    "static": false,
    "longname": "src/core/camera.js~CameraContext#up",
    "access": "public",
    "description": "The computed up vector for a camera.",
    "lineNumber": 244,
    "type": {
      "nullable": null,
      "types": [
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 35,
    "kind": "member",
    "name": "createPickingRay",
    "memberof": "src/core/camera.js~CameraContext",
    "static": false,
    "longname": "src/core/camera.js~CameraContext#createPickingRay",
    "access": "public",
    "description": "Creates a picking ray from a mouse input",
    "see": [
      "{@link https://github.com/Jam3/ray-3d}"
    ],
    "lineNumber": 259,
    "params": [
      {
        "nullable": null,
        "types": [
          "MouseInput",
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "mouse",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Ray3D"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 36,
    "kind": "member",
    "name": "viewport",
    "memberof": "src/core/camera.js~CameraContext",
    "static": false,
    "longname": "src/core/camera.js~CameraContext#viewport",
    "access": "public",
    "description": "",
    "lineNumber": 276,
    "type": {
      "nullable": null,
      "types": [
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 37,
    "kind": "method",
    "name": "computeViewMatrix",
    "memberof": "src/core/camera.js~CameraContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/camera.js~CameraContext#computeViewMatrix",
    "access": "protected",
    "description": "Computes the view matrix.",
    "lineNumber": 291,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "objectPattern1",
        "optional": true,
        "types": [
          "{\"position\": *, \"rotation\": *, \"target\": *, \"scale\": *}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 38,
    "kind": "method",
    "name": "updateCameraController",
    "memberof": "src/core/camera.js~CameraContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/camera.js~CameraContext#updateCameraController",
    "access": "protected",
    "description": "Updates controller camera controller, if needed.",
    "lineNumber": 332,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{far: Number, near: Number}"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "abstract": true
  },
  {
    "__docId__": 39,
    "kind": "method",
    "name": "updateCameraViewport",
    "memberof": "src/core/camera.js~CameraContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/camera.js~CameraContext#updateCameraViewport",
    "access": "protected",
    "description": "Updates base camera controller viewport.",
    "lineNumber": 368,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.viewportTop",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.viewportLeft",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.viewportWidth",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.viewportHeight",
        "description": ""
      }
    ],
    "abstract": true
  },
  {
    "__docId__": 40,
    "kind": "class",
    "name": "CameraUniforms",
    "memberof": "src/core/camera.js",
    "static": true,
    "longname": "src/core/camera.js~CameraUniforms",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/camera",
    "importStyle": "{CameraUniforms}",
    "description": "CameraUniforms class.",
    "lineNumber": 391,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CameraUniforms"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 41,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/camera.js~CameraUniforms",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/camera.js~CameraUniforms#constructor",
    "access": "public",
    "description": "CameraUniforms class constructor.",
    "lineNumber": 402,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 42,
    "kind": "member",
    "name": "['camera.projection']",
    "memberof": "src/core/camera.js~CameraUniforms",
    "static": false,
    "longname": "src/core/camera.js~CameraUniforms#['camera.projection']",
    "access": "public",
    "description": "The computed projection matrix for a camera used\nas a uniform mat4 in a shader.",
    "lineNumber": 412,
    "type": {
      "nullable": null,
      "types": [
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 43,
    "kind": "member",
    "name": "['camera.aspect']",
    "memberof": "src/core/camera.js~CameraUniforms",
    "static": false,
    "longname": "src/core/camera.js~CameraUniforms#['camera.aspect']",
    "access": "public",
    "description": "The computed aspect ratio for a camera used\nas a uniform float in a shader.",
    "lineNumber": 424,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 44,
    "kind": "member",
    "name": "['camera.view']",
    "memberof": "src/core/camera.js~CameraUniforms",
    "static": false,
    "longname": "src/core/camera.js~CameraUniforms#['camera.view']",
    "access": "public",
    "description": "The computed view matrix for a camera used\nas a uniform mat4 in a shader.",
    "lineNumber": 436,
    "type": {
      "nullable": null,
      "types": [
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 45,
    "kind": "member",
    "name": "['camera.eye']",
    "memberof": "src/core/camera.js~CameraUniforms",
    "static": false,
    "longname": "src/core/camera.js~CameraUniforms#['camera.eye']",
    "access": "public",
    "description": "The computed eye vector  for a camera used\nas a uniform vec3 in a shader.",
    "lineNumber": 448,
    "type": {
      "nullable": null,
      "types": [
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 46,
    "kind": "file",
    "name": "src/core/color.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport * as VectorSwizzleMap from '../math/vector_swizzle_map'\nimport { isArrayLike } from '../utils'\nimport { Command } from './command'\nimport { Vector4 } from '../math'\n\nimport ColorString from 'color-string'\nimport space from 'color-space'\nimport clamp from 'clamp'\n\n/**\n * The Color class represents an abstraction around a\n * RGBA color space. The class supports multiple types of\n * inputs including named colors, color space models,\n * RGB[A] variants, and more. This class implements the valueOf()\n * magic method which serializes the object into an integer that\n * represents the RGBA color value. This makes it possible to add,\n * multiply, subtract, and device color values. This module is compatiable\n * with various color module outputs such as\n * {@link https://www.npmjs.com/package/color-string}.\n *\n * Named colors are supported by the\n * {@link https://www.npmjs.com/package/color-name|color-name}\n * module which provide RGB color values defined by\n * {@link https://drafts.csswg.org/css-color/#named-colors|CSSWG#named-colors}.\n * They are exposed by the {@link TBD|color-string} module.\n *\n * Color space conversions to RGB are handled by the\n * {@link https://www.npmjs.com/package/color-space|color-space} module.\n *\n * @public\n * @class Color\n * @extends Vector4\n * @see {@link https://drafts.csswg.org/css-color/#named-colors}\n * @see {@link https://www.npmjs.com/package/color-string}\n * @see {@link https://www.npmjs.com/package/color-space}\n * @see {@link https://www.npmjs.com/package/color-name}\n */\n\nexport class Color extends Vector4 {\n\n  /**\n   * Color class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {...Number|String|Array|Object} input\n   */\n\n  constructor(...input) {\n    super(0, 0, 0, 0)\n    this.set(input)\n  }\n\n  /**\n   * Color swizzles.\n   *\n   * @public\n   * @static\n   * @method\n   * @return {Array<Array<String>>}\n   */\n\n  static swizzles() {\n    return VectorSwizzleMap.Color\n  }\n\n  /**\n   * Parses color input to derive a rgba color array\n   * that is not normalized.\n   *\n   * @public\n   * @static\n   * @method\n   * @param {Mixed} input\n   * @return {Array}\n   */\n\n  static parseInput(input) {\n    if (isArrayLike(input) && 1 == input.length) {\n      input = input[0]\n    }\n\n    if ('string' == typeof input) {\n      input = Color.parseString(input)\n    } else if ('number' == typeof input) {\n      input = Color.parseInt(input)\n    }\n\n    if (null == input) {\n      return null\n    }\n\n    let alpha = input[3] || 0\n    if (input && 'object' == typeof input) {\n      if ('rgb' == input.model) {\n        input = input.value\n        alpha = input[3]\n      } else {\n        alpha = input.value ? input.value[3] : input[3]\n        if (space[input.model]) {\n          try { input = space[input.model].rgb(input.value) }\n          catch (e) { console.warn(\"Color conversation failed\", e) }\n        }\n      }\n    }\n\n    return [...[...input].slice(0, 3), alpha || 1]\n  }\n\n  /**\n   * Parses input string to derive a color model\n   *\n   * @public\n   * @static\n   * @param {String} string\n   * @return {Object}\n   */\n\n  static parseString(string) {\n    if ('string' == typeof string) {\n      return ColorString.get(string.replace(/\\s+/g, '')) || null\n    }\n    return null\n  }\n\n  /**\n   * Parses input integer to derive a color model.\n   *\n   * @public\n   * @static\n   * @param {String} int\n   * @return {Object}\n   */\n\n  static parseInt(int) {\n    if ('number' == typeof int) {\n      let string = Color.parseString(`#${leftpad(0, 6, int.toString('16'))}`)\n      if (string) { return string }\n      string = Color.parseString(\n        `rgba(${clamp(int >> 24 & 0xff, 0, 255)},`+\n             `${clamp(int >> 16 & 0xff, 0, 255)},`+\n             `${clamp(int >> 8 & 0xff, 0, 255)},`+\n             `${clamp(int & 0xff, 0, 1)})`)\n      if (string) { return string }\n    }\n    return null\n  }\n\n  /**\n   * Vector onchange implementation that ensures\n   * values are normalized.\n   *\n   * @protected\n   * @param {Number} index\n   * @param {Number} value\n   */\n\n  onchange(index, value) {\n    const elements = this.elements\n    if (3 == index) { // alpha channel\n      elements[index] = clamp(value, 0, 1)\n    } else if (value > 255) {\n      elements[index] = 1\n    } else if (value > 1) {\n      elements[index] = value/255\n    } else if (value < 0) {\n      elements[index] = 0\n    }\n  }\n\n  /**\n   * Set color component values.\n   *\n   * @public\n   * @method\n   * @param {...Array|Color|Number} input\n   * @return {Color}\n   */\n\n  set(...input) {\n    if (1 == input.length) { input = input[0] }\n    input = Color.parseInput(input)\n    return input ? super.set(...input) : this\n  }\n\n  /**\n   * Converts color to a string.\n   *\n   * @public\n   * @method\n   * @param {String} which\n   * @return {String}\n   */\n\n  toString(which = 'hex', denormalize) {\n    if ('hex' == which) { denormalize = true }\n    const values = this.toArray(denormalize)\n    if ('name' == which) { which = 'keyword' }\n    return ColorString.to[which](values)\n  }\n\n  /**\n   * Converts the color to an array of values that are\n   * normalized.\n   *\n   * @public\n   * @method\n   * @param {Boolean} denormalize\n   * @return {Array}\n   */\n\n  toArray(denormalize = false) {\n    const values = super.toArray()\n    if (denormalize) {\n      for (let i = 0; i < 3; ++i) {\n        values[i] *= 255\n        values[i] |= 0\n      }\n    }\n    return [...values]\n  }\n\n  /**\n   * Returns the hex number value of this color.\n   *\n   * @public\n   * @method\n   * @return {Number}\n   */\n\n  valueOf() {\n    let string = this.toString('hex', true).replace('#', '')\n    string = leftpad(0, 6, string)\n    return Function(`return 0x${string}`)()\n  }\n}\n\n/**\n * Left pad string s with character c while\n * string s length is less than n.\n *\n * @private\n */\n\nfunction leftpad(c, n, s) {\n  while (s.length < n) {\n    s = `${c}${s}`\n  }\n  return s\n}\n",
    "static": true,
    "longname": "src/core/color.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 47,
    "kind": "class",
    "name": "Color",
    "memberof": "src/core/color.js",
    "static": true,
    "longname": "src/core/color.js~Color",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/color",
    "importStyle": "{Color}",
    "description": "The Color class represents an abstraction around a\nRGBA color space. The class supports multiple types of\ninputs including named colors, color space models,\nRGB[A] variants, and more. This class implements the valueOf()\nmagic method which serializes the object into an integer that\nrepresents the RGBA color value. This makes it possible to add,\nmultiply, subtract, and device color values. This module is compatiable\nwith various color module outputs such as\n{@link https://www.npmjs.com/package/color-string}.\n\nNamed colors are supported by the\n{@link https://www.npmjs.com/package/color-name|color-name}\nmodule which provide RGB color values defined by\n{@link https://drafts.csswg.org/css-color/#named-colors|CSSWG#named-colors}.\nThey are exposed by the {@link TBD|color-string} module.\n\nColor space conversions to RGB are handled by the\n{@link https://www.npmjs.com/package/color-space|color-space} module.",
    "see": [
      "{@link https://drafts.csswg.org/css-color/#named-colors}",
      "{@link https://www.npmjs.com/package/color-string}",
      "{@link https://www.npmjs.com/package/color-space}",
      "{@link https://www.npmjs.com/package/color-name}"
    ],
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Color"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 48,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/color.js~Color",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/color.js~Color#constructor",
    "access": "public",
    "description": "Color class constructor.",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "...Number",
          "String",
          "Array",
          "Object"
        ],
        "spread": true,
        "optional": false,
        "name": "input",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 49,
    "kind": "method",
    "name": "swizzles",
    "memberof": "src/core/color.js~Color",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/color.js~Color.swizzles",
    "access": "public",
    "description": "Color swizzles.",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array<Array<String>>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 50,
    "kind": "method",
    "name": "parseInput",
    "memberof": "src/core/color.js~Color",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/color.js~Color.parseInput",
    "access": "public",
    "description": "Parses color input to derive a rgba color array\nthat is not normalized.",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Mixed"
        ],
        "spread": false,
        "optional": false,
        "name": "input",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 51,
    "kind": "method",
    "name": "parseString",
    "memberof": "src/core/color.js~Color",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/color.js~Color.parseString",
    "access": "public",
    "description": "Parses input string to derive a color model",
    "lineNumber": 125,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 52,
    "kind": "method",
    "name": "parseInt",
    "memberof": "src/core/color.js~Color",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/color.js~Color.parseInt",
    "access": "public",
    "description": "Parses input integer to derive a color model.",
    "lineNumber": 141,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "int",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "onchange",
    "memberof": "src/core/color.js~Color",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/color.js~Color#onchange",
    "access": "protected",
    "description": "Vector onchange implementation that ensures\nvalues are normalized.",
    "lineNumber": 164,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 54,
    "kind": "method",
    "name": "set",
    "memberof": "src/core/color.js~Color",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/color.js~Color#set",
    "access": "public",
    "description": "Set color component values.",
    "lineNumber": 186,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "...Array",
          "Color",
          "Number"
        ],
        "spread": true,
        "optional": false,
        "name": "input",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Color"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "toString",
    "memberof": "src/core/color.js~Color",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/color.js~Color#toString",
    "access": "public",
    "description": "Converts color to a string.",
    "lineNumber": 201,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "which",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "toArray",
    "memberof": "src/core/color.js~Color",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/color.js~Color#toArray",
    "access": "public",
    "description": "Converts the color to an array of values that are\nnormalized.",
    "lineNumber": 218,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "denormalize",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "valueOf",
    "memberof": "src/core/color.js~Color",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/color.js~Color#valueOf",
    "access": "public",
    "description": "Returns the hex number value of this color.",
    "lineNumber": 237,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 58,
    "kind": "function",
    "name": "leftpad",
    "memberof": "src/core/color.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/color.js~leftpad",
    "access": "private",
    "export": false,
    "importPath": "axis3d/core/color",
    "importStyle": null,
    "description": "Left pad string s with character c while\nstring s length is less than n.",
    "lineNumber": 251,
    "params": [
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "n",
        "types": [
          "*"
        ]
      },
      {
        "name": "s",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "src/core/command.js",
    "content": "'use strict'\n\n/**\n * Next available Command ID represented\n * as an integer.\n */\n\nlet CORE_COMMAND_NEXT_ID = 0x0\n\n/**\n * The Command class is the base type for all functional units in Axis3D.\n * A Command is a direct descendant of the Function type.\n *\n * @public\n * @abstract\n * @class Command\n * @extends Function\n */\n\nexport class Command extends Function {\n\n  /**\n   * Returns the next Command ID\n   *\n   * @public\n   * @method\n   * @static\n   * @return {Number}\n   */\n\n  static id() {\n    return CORE_COMMAND_NEXT_ID ++\n  }\n\n  /**\n   * Returns the count of Commands created.\n   *\n   * @public\n   * @method\n   * @static\n   * @return {Number}\n   */\n\n  static count() {\n    return CORE_COMMAND_NEXT_ID\n  }\n\n  /**\n   * Returns a string suitable for execution as the body of\n   * a function passed to the Function contructor.\n   *\n   * @protected\n   * @static\n   * @method\n   * @param {Function} fn\n   * @return {String}\n   * @throws TypeError\n   */\n\n  static codegen(fn) {\n    if ('function' != typeof fn) {\n      throw new TypeError(\"Expecting a function.\")\n    }\n    return `return (${String(fn)}).apply(this, arguments);`\n  }\n\n  /**\n   * Command class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {Function} fn\n   * @throws TypeError\n   */\n\n  constructor(fn) {\n    if ('function' != typeof fn) {\n      throw new TypeError(\"Command constructor expects a function.\")\n    }\n    // initialize underlying function wrap\n    super(Command.codegen(function wrap(fn) {\n      return fn.apply(fn, Array.prototype.slice.call(arguments, 1))\n    }))\n    const exec = (...args) => this(fn, ...args)\n    const id = Command.id()\n    return Object.assign((...args) => exec.call(this, ...args), {\n      this, id\n    })\n  }\n}\n",
    "static": true,
    "longname": "src/core/command.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "CORE_COMMAND_NEXT_ID",
    "memberof": "src/core/command.js",
    "static": true,
    "longname": "src/core/command.js~CORE_COMMAND_NEXT_ID",
    "access": null,
    "export": false,
    "importPath": "axis3d/core/command",
    "importStyle": null,
    "description": "Next available Command ID represented\nas an integer.",
    "lineNumber": 8,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "class",
    "name": "Command",
    "memberof": "src/core/command.js",
    "static": true,
    "longname": "src/core/command.js~Command",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/command",
    "importStyle": "{Command}",
    "description": "The Command class is the base type for all functional units in Axis3D.\nA Command is a direct descendant of the Function type.",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Command"
      }
    ],
    "abstract": true,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "id",
    "memberof": "src/core/command.js~Command",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/command.js~Command.id",
    "access": "public",
    "description": "Returns the next Command ID",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "count",
    "memberof": "src/core/command.js~Command",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/command.js~Command.count",
    "access": "public",
    "description": "Returns the count of Commands created.",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "codegen",
    "memberof": "src/core/command.js~Command",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/command.js~Command.codegen",
    "access": "protected",
    "description": "Returns a string suitable for execution as the body of\na function passed to the Function contructor.",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "TypeError"
      }
    ]
  },
  {
    "__docId__": 65,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/command.js~Command",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/command.js~Command#constructor",
    "access": "public",
    "description": "Command class constructor.",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": ""
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "TypeError"
      }
    ]
  },
  {
    "__docId__": 66,
    "kind": "file",
    "name": "src/core/context.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { registerStat } from '../stats'\n\nimport { EventEmitter } from 'events'\nimport coalesce from 'defined'\nimport window from 'global/window'\nimport events from 'dom-events'\nimport glsl from 'glslify'\nimport regl from 'regl'\n\n/** @virtual {WebGLRenderingContext} https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext */\n/** @virtual {HTMLCanvasElement} https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement */\n/** @virtual {ReglInitializer} https://github.com/regl-project/regl/blob/gh-pages/API.md#all-initialization-options */\n/** @virtual {regl} https://github.com/regl-project/regl/blob/gh-pages/API.md */\n\n/**\n * The Context class represents an object that wraps\n * a WebGL context created by regl.\n *\n * @public\n * @class Context\n * @extends EventEmitter\n * @see {@link https://github.com/regl-project/regl}\n */\n\nexport class Context extends EventEmitter {\n\n  /**\n   * Context class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {?Object} opts\n   * @param {?ReglInitializer} createRegl\n   */\n\n  constructor(opts = {}, createRegl = regl) {\n    super() // EventEmitter()\n    registerStat('Context')\n    // shut up EventEmitter\n    this.setMaxListeners(Infinity)\n\n    /**\n     * Internal predicate to indicate that the context\n     * has focus. IE, the HTMLCanvasElement has focus.\n     * @private\n     */\n\n    this._hasFocus = false\n\n    /**\n     * The regl context wrapped by this context object.\n     * @private\n     */\n\n    this._reglContext = null\n\n    // coalesce regl options if given as `.gl`\n    opts.regl = coalesce(opts.regl, opts.gl || {})\n\n    // derive container element\n    if (opts.element && 'CANVAS' == opts.element.nodeName) {\n      opts.regl.canvas = opts.element\n    } else if (opts.element && opts.element.nodeName) {\n      opts.regl.container = opts.element\n    } else if ('string' == typeof opts.element) {\n      opts.regl.container = opts.element\n    }\n\n    // call regl initializer\n    createRegl({\n      ...opts.regl,\n\n      attributes: {\n        ...(opts.regl.attributes || {}),\n      },\n\n      extensions: [\n        ...(opts.regl.extensions || []),\n        'OES_texture_float',\n      ],\n\n      optionalExtensions: [\n        ...(opts.regl.optionalExtensions || []),\n      ],\n\n      onDone: (err, regl) => {\n        if (err) {\n          return this.emit('error', err)\n        }\n\n        this._regl = regl\n        this._domElement = this._regl._gl.canvas\n        this._isDestroyed = false\n      }\n    })\n\n    // context focus event handlers\n    const onblur = () => { this.blur() }\n    const onfocus = () => { this.focus() }\n    const onwindowblur = () => { this.blur() }\n    const onmousedown = (e) => {\n      if (e.target == this._domElement) {\n        this.focus()\n      } else {\n        this.blur()\n      }\n    }\n\n    // DOM events\n    events.on(this._domElement, 'focus', onfocus)\n    events.on(this._domElement, 'blur', onblur)\n    events.on(window, 'blur', () => onwindowblur)\n\n    // focus/blur context on mouse down\n    events.on(document, 'mousedown', onmousedown)\n    events.on(document, 'touchstart', onmousedown)\n\n    this.once('beforedestroy', () => {\n      events.off(this._domElement, 'focus', onfocus)\n      events.off(this._domElement, 'blur', onblur)\n      events.off(window, 'blur', onwindowblur)\n      events.off(document, 'mousedown', onmousedown)\n      events.off(document, 'touchstart', onmousedown)\n    })\n  }\n\n  /**\n   * The regl context wrapped by this context object.\n   *\n   * @public\n   * @accessor\n   * @type {Object|null}\n   * @name reglContext\n   * @TODO(werle) - Remove this?\n   */\n\n  get reglContext() { return this._reglContext || null }\n\n  /**\n   * The Canvas DOM element wrapped by this context object.\n   *\n   * @public\n   * @accessor\n   * @type {HTMLCanvasElement|null}\n   * @name domElement\n   */\n\n  get domElement() { return this._domElement || null }\n\n  /**\n   * Predicate to indicate that the context\n   * has focus. This is true if the HTMLCanvasElement has focus,\n   * or explicit focus has been given.\n   *\n   * @public\n   * @accessor\n   * @type {Boolean}\n   * @name hasFocus\n   * @see {@link Context#focus}\n   * @see {@link Context#blur}\n   */\n\n  get hasFocus() { return Boolean(this._hasFocus) }\n\n  /**\n   * An instance of the wrapped regl context\n   * command initializer.\n   *\n   * @public\n   * @accessor\n   * @type {regl|Function}\n   */\n\n  get regl() { return this._regl || null }\n\n  /**\n   * An instance of the wrapped WebGL context exposed\n   * by regl.\n   *\n   * @public\n   * @accessor\n   * @type {WebGLRenderingContext}\n   */\n\n  get gl() { return this._regl._gl || null  }\n\n  /**\n   * Focuses context.\n   *\n   * @return {Context}\n   */\n\n  focus() {\n    this._hasFocus = true\n    this.emit('focus')\n    return this\n  }\n\n  /**\n   * Blurs context.\n   *\n   * @return {Context}\n   */\n\n  blur() {\n    this._hasFocus = false\n    this.emit('blur')\n    return this\n  }\n\n  /**\n   * Destroys the context and the\n   * regl context associated with it.\n   *\n   * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#clean-up}\n   * @return {Context}\n   */\n\n  destroy() {\n    this.emit('beforedestroy')\n\n    if (this._regl && 'function' == typeof this._regl.destroy) {\n      this._regl.destroy()\n    }\n\n    this._hasFocus = false\n\n    // remove canvas from DOM tree\n    if (this._domElement && this._domElement.parentElement) {\n      this._domElement.parentElement.removeChild(this._domElement)\n    }\n\n    delete this._regl\n    delete this._domElement\n    delete this._reglContext\n    this.emit('destroy')\n    return this\n  }\n\n  /**\n   * Refreshes context. This is useful if you access the\n   * .gl property outside of this library.\n   *\n   * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#unsafe-escape-hatch}\n   * @return {Context}\n   */\n\n  refresh() {\n    if (this._regl) {\n      if ('function' == typeof this._regl._refresh)\n      this._regl.refresh()\n    }\n    return this\n  }\n}\n",
    "static": true,
    "longname": "src/core/context.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 67,
    "kind": "class",
    "name": "Context",
    "memberof": "src/core/context.js",
    "static": true,
    "longname": "src/core/context.js~Context",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/context",
    "importStyle": "{Context}",
    "description": "The Context class represents an object that wraps\na WebGL context created by regl.",
    "see": [
      "{@link https://github.com/regl-project/regl}"
    ],
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Context"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 68,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/context.js~Context#constructor",
    "access": "public",
    "description": "Context class constructor.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "ReglInitializer"
        ],
        "spread": false,
        "optional": false,
        "name": "createRegl",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "_hasFocus",
    "memberof": "src/core/context.js~Context",
    "static": false,
    "longname": "src/core/context.js~Context#_hasFocus",
    "access": "private",
    "description": "Internal predicate to indicate that the context\nhas focus. IE, the HTMLCanvasElement has focus.",
    "lineNumber": 54,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "member",
    "name": "_reglContext",
    "memberof": "src/core/context.js~Context",
    "static": false,
    "longname": "src/core/context.js~Context#_reglContext",
    "access": "private",
    "description": "The regl context wrapped by this context object.",
    "lineNumber": 61,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "_regl",
    "memberof": "src/core/context.js~Context",
    "static": false,
    "longname": "src/core/context.js~Context#_regl",
    "access": null,
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "_domElement",
    "memberof": "src/core/context.js~Context",
    "static": false,
    "longname": "src/core/context.js~Context#_domElement",
    "access": null,
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "member",
    "name": "_isDestroyed",
    "memberof": "src/core/context.js~Context",
    "static": false,
    "longname": "src/core/context.js~Context#_isDestroyed",
    "access": null,
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "get",
    "name": "reglContext",
    "memberof": "src/core/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/context.js~Context#reglContext",
    "access": "public",
    "description": "The regl context wrapped by this context object.",
    "lineNumber": 143,
    "unknown": [
      {
        "tagName": "@accessor",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object",
        "null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 75,
    "kind": "get",
    "name": "domElement",
    "memberof": "src/core/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/context.js~Context#domElement",
    "access": "public",
    "description": "The Canvas DOM element wrapped by this context object.",
    "lineNumber": 154,
    "unknown": [
      {
        "tagName": "@accessor",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLCanvasElement",
        "null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 76,
    "kind": "get",
    "name": "hasFocus",
    "memberof": "src/core/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/context.js~Context#hasFocus",
    "access": "public",
    "description": "Predicate to indicate that the context\nhas focus. This is true if the HTMLCanvasElement has focus,\nor explicit focus has been given.",
    "see": [
      "{@link Context#focus}",
      "{@link Context#blur}"
    ],
    "lineNumber": 169,
    "unknown": [
      {
        "tagName": "@accessor",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 77,
    "kind": "get",
    "name": "regl",
    "memberof": "src/core/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/context.js~Context#regl",
    "access": "public",
    "description": "An instance of the wrapped regl context\ncommand initializer.",
    "lineNumber": 180,
    "unknown": [
      {
        "tagName": "@accessor",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "regl",
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 78,
    "kind": "get",
    "name": "gl",
    "memberof": "src/core/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/context.js~Context#gl",
    "access": "public",
    "description": "An instance of the wrapped WebGL context exposed\nby regl.",
    "lineNumber": 191,
    "unknown": [
      {
        "tagName": "@accessor",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "WebGLRenderingContext"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "focus",
    "memberof": "src/core/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/context.js~Context#focus",
    "access": null,
    "description": "Focuses context.",
    "lineNumber": 199,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Context"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 80,
    "kind": "member",
    "name": "_hasFocus",
    "memberof": "src/core/context.js~Context",
    "static": false,
    "longname": "src/core/context.js~Context#_hasFocus",
    "access": null,
    "description": null,
    "lineNumber": 200,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "blur",
    "memberof": "src/core/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/context.js~Context#blur",
    "access": null,
    "description": "Blurs context.",
    "lineNumber": 211,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Context"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 82,
    "kind": "member",
    "name": "_hasFocus",
    "memberof": "src/core/context.js~Context",
    "static": false,
    "longname": "src/core/context.js~Context#_hasFocus",
    "access": null,
    "description": null,
    "lineNumber": 212,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/core/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/context.js~Context#destroy",
    "access": null,
    "description": "Destroys the context and the\nregl context associated with it.",
    "see": [
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#clean-up}"
    ],
    "lineNumber": 225,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Context"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 84,
    "kind": "member",
    "name": "_hasFocus",
    "memberof": "src/core/context.js~Context",
    "static": false,
    "longname": "src/core/context.js~Context#_hasFocus",
    "access": null,
    "description": null,
    "lineNumber": 232,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "refresh",
    "memberof": "src/core/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/context.js~Context#refresh",
    "access": null,
    "description": "Refreshes context. This is useful if you access the\n.gl property outside of this library.",
    "see": [
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#unsafe-escape-hatch}"
    ],
    "lineNumber": 254,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Context"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 86,
    "kind": "file",
    "name": "src/core/cube_texture.js",
    "content": "",
    "static": true,
    "longname": "src/core/cube_texture.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 87,
    "kind": "file",
    "name": "src/core/extrude_geometry.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { isArrayLike } from '../utils'\nimport { Geometry } from './geometry'\n\nimport extrudeByShape from 'extrude'\nimport extrudeByPath from 'extrude-by-path'\nimport extrudeEdges from 'extrude-edges'\nimport cleanPSLG from 'clean-pslg'\nimport coalesce from 'defined'\nimport cdt2d from 'cdt2d'\n\nexport const kDefaultExtrudeGeometryPathZCoefficient = 0.001\nexport const kDefaultExtrudeGeometryPathSteps = 10\n\n/**\n * The ExtrudeGeometry class represents 2D geometry\n */\n\nexport class ExtrudeGeometry extends Geometry {\n\n  /**\n   * ExtrudeGeometry class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Object} opts Geometry extrusion options.\n   * @param {!Array<Array<Number>>} opts.positions\n   * @param {?Array<Array<Number>>} opts.edges\n   * @param {?Array<Array<Number>>} opts.cells\n   * @param {?Array<Array<Number>>} opts.path\n   * @param {?Boolean} opts.closed\n   * @throws TypeError\n   */\n\n  constructor({\n    positions,\n    edges,\n    cells,\n    path,\n    closed = true,\n  } = {}) {\n    let complex = null\n\n    if (false == isArrayLike(positions)) {\n      throw new TypeError(\"Expecting positions to be an array.\")\n    } else if (0 == positions.length) {\n      throw new TypeError(\"Empty positions array given.\")\n    }\n\n    if (null == path) {\n      complex = extrudeByShape(positions, {bottom: -1, top: 1})\n    } else {\n      closed = Boolean(closed)\n\n      if (false == isArrayLike(path)) {\n        throw new TypeError(\"Expecting path to be an array.\")\n      } else if (0 == path.length) {\n        throw new TypeError(\"Empty path array given.\")\n      }\n\n      // extrude edges, if not given\n      if (null == edges) {\n        let tmp = [...extrudeEdges.faces(positions)]\n        edges = []\n        for (let i = 0; i < tmp.length; i += 2) {\n          edges.push([tmp[i], tmp[i + 1]])\n        }\n      } else if (false == isArrayLike(edges)) {\n        throw new TypeError(\"Expecting edges to be an array.\")\n      } else if (0 == edges.length) {\n        throw new TypeError(\"Empty edges array given.\")\n      }\n\n      // triangluate cells if cells aren't given and edges are\n      if (null == cells) {\n        cells = cdt2d(positions)\n      } else if (cells && false == isArrayLike(cells)) {\n        throw new TypeError(\"Expecting cells to be an array.\")\n      } else if (0 == cells.length) {\n        throw new TypeError(\"Empty cells array given.\")\n      }\n\n      cleanPSLG(positions, edges)\n      complex = extrudeByPath({\n        positions,\n        closed,\n        edges,\n        cells,\n        path\n      })\n    }\n\n    super({complex})\n  }\n}\n",
    "static": true,
    "longname": "src/core/extrude_geometry.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 88,
    "kind": "variable",
    "name": "kDefaultExtrudeGeometryPathZCoefficient",
    "memberof": "src/core/extrude_geometry.js",
    "static": true,
    "longname": "src/core/extrude_geometry.js~kDefaultExtrudeGeometryPathZCoefficient",
    "access": null,
    "export": true,
    "importPath": "axis3d/core/extrude_geometry",
    "importStyle": "{kDefaultExtrudeGeometryPathZCoefficient}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "variable",
    "name": "kDefaultExtrudeGeometryPathSteps",
    "memberof": "src/core/extrude_geometry.js",
    "static": true,
    "longname": "src/core/extrude_geometry.js~kDefaultExtrudeGeometryPathSteps",
    "access": null,
    "export": true,
    "importPath": "axis3d/core/extrude_geometry",
    "importStyle": "{kDefaultExtrudeGeometryPathSteps}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "class",
    "name": "ExtrudeGeometry",
    "memberof": "src/core/extrude_geometry.js",
    "static": true,
    "longname": "src/core/extrude_geometry.js~ExtrudeGeometry",
    "access": null,
    "export": true,
    "importPath": "axis3d/core/extrude_geometry",
    "importStyle": "{ExtrudeGeometry}",
    "description": "The ExtrudeGeometry class represents 2D geometry",
    "lineNumber": 24,
    "interface": false,
    "extends": [
      "src/core/geometry.js~Geometry"
    ]
  },
  {
    "__docId__": 91,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/extrude_geometry.js~ExtrudeGeometry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/extrude_geometry.js~ExtrudeGeometry#constructor",
    "access": "public",
    "description": "ExtrudeGeometry class constructor.",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": "Geometry extrusion options."
      },
      {
        "nullable": false,
        "types": [
          "Array<Array<Number>>"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.positions",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Array<Array<Number>>"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.edges",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Array<Array<Number>>"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.cells",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Array<Array<Number>>"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.path",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.closed",
        "description": ""
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "TypeError"
      }
    ]
  },
  {
    "__docId__": 92,
    "kind": "file",
    "name": "src/core/fog.js",
    "content": "",
    "static": true,
    "longname": "src/core/fog.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "src/core/frame.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { kDefaultMaterialFragmentShader } from './material'\nimport { incrementStat, registerStat } from '../stats'\nimport { Command } from './command'\nimport { define } from '../utils'\nimport { Color } from './color'\n\nimport coalesce from 'defined'\n\n/**\n * The default WebGL blending state for every frame.\n *\n * @public\n * @const\n * @type {Object}\n * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#blending}\n */\n\nexport const kDefaultFrameBlendingState = Object.seal({\n  equation: 'add',\n  enable: true,\n  color: [0, 0, 0, 1],\n  func: {\n    src: 'src alpha',\n    dst: 'one minus src alpha'\n  },\n})\n\n/**\n * The default WebGL culling state for every frame.\n *\n * @public\n * @const\n * @type {Object}\n * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#culling}\n */\n\nexport const kDefaultFrameCullingState = Object.seal({\n  enable: true,\n  face: 'back',\n})\n\n/**\n * The default WebGL depth buffer state for every frame.\n *\n * @public\n * @const\n * @type {Object}\n * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#depth-buffer}\n */\n\nexport const kDefaultFrameDepthState = Object.seal({\n  enable: true,\n  range: [0, 1],\n  func: 'less',\n  mask: true,\n})\n\n/**\n * The default WebGL clear buffer state for every frame.\n *\n * @public\n * @const\n * @type {Object}\n * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#clear-the-draw-buffer}\n */\n\nexport const kDefaultFrameClearState = Object.seal({\n  color: [17/255, 17/255, 17/255, 1],\n  depth: 1,\n})\n\n/**\n * The Frame class represents a command that abstracts a render\n * loop.\n *\n * @public\n * @class Frame\n * @extends Command\n */\n\nexport class Frame extends Command {\n\n  /**\n   * Frame class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    incrementStat('Frame')\n    super(update)\n\n    const uniforms = new FrameUniforms(ctx, initialState.uniforms || {})\n    const context = new FrameContext(ctx, initialState.context || {})\n    const state = new FrameState(ctx, initialState.state || {})\n\n    const injectContext = ctx.regl({\n      uniforms,\n      context,\n      ...state\n    })\n\n    function update(refresh) {\n      context.init(injectContext).enqueue(refresh)\n      return () => {\n        context.cancelFrame()\n      }\n    }\n  }\n}\n\n/**\n * FrameContext class.\n *\n * @public\n * @class FrameContext\n * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#context}\n */\n\nexport class FrameContext {\n\n  /**\n   * FrameContext class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D render context.\n   * @param {Object} initialState\n   */\n\n  constructor(ctx, initialState = {}) {\n    Object.assign(this, initialState)\n\n    /**\n     * The default WebGL clear buffer state for every frame.\n     */\n\n    const clearState = {\n      ...kDefaultFrameClearState,\n      ...initialState.clear\n    }\n\n    /**\n     * Known lights in a frame context.\n     */\n\n    const lights = []\n\n    /**\n     * Known refresh functions.\n     */\n\n    const queue = []\n\n    // protected properties\n    Object.defineProperties(this, {\n      reglContext: {\n        enumerable: false,\n        writable: true,\n        value: null,\n      },\n\n      isCancelled: {\n        enumerable: false,\n        writable: true,\n        value: false,\n      },\n\n      clearState: {\n        get() { return clearState },\n        enumerable: false,\n      },\n\n      queue: {\n        get() { return queue },\n        enumerable: false,\n      },\n\n      loop: {\n        enumerable: false,\n        writable: true,\n        value: null,\n      },\n\n      ctx: {\n        get() { return ctx },\n        enumerable: false,\n      },\n    })\n\n    /**\n     * Known lights in a frame context\n     *\n     * @public\n     * @type {Array<Light>}\n     */\n\n    this.lights = () => {\n      return lights\n    }\n\n    /**\n     * Cancels the frame loop.\n     *\n     * @public\n     * @type {Function}\n     */\n\n    this.cancel = () => {\n      return (...args) => {\n        this.cancelFrame(...args)\n      }\n    }\n\n    /**\n     * Clears drawing buffers.\n     *\n     * @public\n     * @type {Function}\n     */\n\n    this.clear = () => {\n      return (...args) => {\n        this.clearBuffers(...args)\n      }\n    }\n\n    /**\n     * A reference to the underlying regl instance.\n     *\n     * @public\n     * @type {regl}\n     */\n\n    this.regl = () => {\n      return ctx.regl\n    }\n\n    /**\n     * A reference to the underlying WebGl instance.\n     *\n     * @public\n     * @type {WebGLRenderingContext}\n     */\n\n    this.gl = () => {\n      return ctx.gl\n    }\n  }\n\n  /**\n   * Enqueues a refresh function that is called\n   * for every frame refresh loop.\n   *\n   * @public\n   * @method\n   * @param {Function} refresh\n   * @return {FrameContext}\n   */\n\n  enqueue(refresh) {\n    this.queue.push(refresh)\n    return this\n  }\n\n  /**\n   * Dequeues all enqueued frame refresh functions.\n   *\n   * @public\n   * @method\n   * @param {...Mixed} args\n   * @return {FrameContext}\n   */\n\n  dequeue(...args) {\n    for (const refresh of this.queue) {\n      if ('function' == typeof refresh) {\n        refresh(this.reglContext, ...args)\n      }\n    }\n    return this\n  }\n\n  /**\n   * Initializes frame context with a function\n   * that injects a regl context.\n   *\n   * @public\n   * @method\n   * @param {Function} inject\n   * @return {FrameContext}\n   */\n\n  init(inject) {\n    if (this.isCancelled || null == this.loop) {\n      this.isCancelled = false\n      this.loop = this.ctx.regl.frame(() => {\n        inject((...args) => {\n          registerStat('Frame refresh')\n          try { this.onrefresh(...args) }\n          catch (err) {\n            this.cancelFrame()\n            this.ctx.emit('error', err)\n          }\n        })\n      })\n    }\n    return this\n  }\n\n  /**\n   * Cancels the frame loop. This function will remove\n   * all enqueued refresh functions.\n   *\n   * @public\n   * @method\n   */\n\n  cancelFrame() {\n    if (this.loop) {\n      this.queue.splice(0, -1)\n      this.loop.cancel()\n      this.ctx._reglContext =\n      this.reglContext =\n      this.loop = null\n    }\n  }\n\n  /**\n   * Clears WebGL clear and depth buffers.\n   *\n   * @public\n   * @method\n   */\n\n  clearBuffers(state) {\n    this.ctx.regl.clear({ ...this.clearState, ...state})\n  }\n\n  /**\n   * Internal refresh callback.\n   *\n   * @private\n   */\n\n  onrefresh(reglContext, ...args) {\n    this.reglContext = reglContext\n    this.ctx._reglContext = reglContext\n    this.clearBuffers()\n    reglContext.lights.splice(0, reglContext.lights.length)\n    this.dequeue(...args)\n  }\n}\n\n/**\n * The FrameUniforms class represents an object of\n * all injected uniforms for a frame render loop.\n *\n * @public\n * @class FrameUniforms\n */\n\nexport class FrameUniforms {\n\n  /**\n   * FrameUniforms class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    Object.assign(this, initialState)\n\n    /**\n     * Total time ellapsed in seconds since the frame\n     * was initialized.\n     *\n     * @public\n     * @type {Number}\n     */\n\n    this.time = ({time}) => {\n      return time\n    }\n\n    /**\n     * The number of times/loops a frame has\n     * been refreshed/rendered.\n     *\n     * @public\n     * @type {Number}\n     */\n\n    this.tick = ({tick}) => {\n      return tick\n    }\n  }\n}\n\n/**\n * The FrameState class represents WebGL state that is injected\n * each frame refresh.\n *\n * @public\n * @class FrameState\n * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md}\n */\n\nexport class FrameState {\n\n  /**\n   * FrameState class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    Object.assign(this, {\n      ...initialState,\n    })\n\n    // remove alias properties this object\n    delete this.blending\n    delete this.culling\n\n    /**\n     * Default fragment applied to the frame context scope.\n     *\n     * @public\n     * @type {String}\n     * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#shaders}\n     */\n\n    this.frag = coalesce(\n      initialState.frag,\n      initialState.fragmentShader,\n      kDefaultMaterialFragmentShader)\n\n    /**\n     * Blending state for every frame loop.\n     *\n     * @public\n     * @type {Object}\n     * @see {@link kDefaultFrameBlendingState}\n     * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#blending}\n     */\n\n    this.blend = {\n      ...kDefaultFrameBlendingState,\n      ...(initialState.blend || initialState.blending)\n    }\n\n    /**\n     * Culling state for every frame loop.\n     *\n     * @public\n     * @type {Object}\n     * @see {@link kDefaultFrameCullingState}\n     * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#culling}\n     */\n\n    this.cull = {\n      ...kDefaultFrameCullingState,\n      ...(initialState.cull|| initialState.culling)\n    }\n\n    /**\n     * Depth buffer state for every frame loop.\n     *\n     * @public\n     * @type {Object}\n     * @see {@link kDefaultFrameDepthState}\n     * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#depth-buffer}\n     */\n\n    this.depth = {\n      ...kDefaultFrameDepthState,\n      ...initialState.depth\n    }\n\n    // remove undefined/null values\n    for (const key in this) {\n      if (null == this[key]) {\n        delete this[key]\n      }\n    }\n  }\n}\n",
    "static": true,
    "longname": "src/core/frame.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "kDefaultFrameBlendingState",
    "memberof": "src/core/frame.js",
    "static": true,
    "longname": "src/core/frame.js~kDefaultFrameBlendingState",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/frame",
    "importStyle": "{kDefaultFrameBlendingState}",
    "description": "The default WebGL blending state for every frame.",
    "see": [
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#blending}"
    ],
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "kDefaultFrameCullingState",
    "memberof": "src/core/frame.js",
    "static": true,
    "longname": "src/core/frame.js~kDefaultFrameCullingState",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/frame",
    "importStyle": "{kDefaultFrameCullingState}",
    "description": "The default WebGL culling state for every frame.",
    "see": [
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#culling}"
    ],
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "kDefaultFrameDepthState",
    "memberof": "src/core/frame.js",
    "static": true,
    "longname": "src/core/frame.js~kDefaultFrameDepthState",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/frame",
    "importStyle": "{kDefaultFrameDepthState}",
    "description": "The default WebGL depth buffer state for every frame.",
    "see": [
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#depth-buffer}"
    ],
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 97,
    "kind": "variable",
    "name": "kDefaultFrameClearState",
    "memberof": "src/core/frame.js",
    "static": true,
    "longname": "src/core/frame.js~kDefaultFrameClearState",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/frame",
    "importStyle": "{kDefaultFrameClearState}",
    "description": "The default WebGL clear buffer state for every frame.",
    "see": [
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#clear-the-draw-buffer}"
    ],
    "lineNumber": 73,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 98,
    "kind": "class",
    "name": "Frame",
    "memberof": "src/core/frame.js",
    "static": true,
    "longname": "src/core/frame.js~Frame",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/frame",
    "importStyle": "{Frame}",
    "description": "The Frame class represents a command that abstracts a render\nloop.",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Frame"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 99,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/frame.js~Frame#constructor",
    "access": "public",
    "description": "Frame class constructor.",
    "lineNumber": 98,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 100,
    "kind": "class",
    "name": "FrameContext",
    "memberof": "src/core/frame.js",
    "static": true,
    "longname": "src/core/frame.js~FrameContext",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/frame",
    "importStyle": "{FrameContext}",
    "description": "FrameContext class.",
    "see": [
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#context}"
    ],
    "lineNumber": 129,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "FrameContext"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 101,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/frame.js~FrameContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/frame.js~FrameContext#constructor",
    "access": "public",
    "description": "FrameContext class constructor.",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D render context."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 102,
    "kind": "member",
    "name": "lights",
    "memberof": "src/core/frame.js~FrameContext",
    "static": false,
    "longname": "src/core/frame.js~FrameContext#lights",
    "access": "public",
    "description": "Known lights in a frame context",
    "lineNumber": 207,
    "type": {
      "nullable": null,
      "types": [
        "Array<Light>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 103,
    "kind": "member",
    "name": "cancel",
    "memberof": "src/core/frame.js~FrameContext",
    "static": false,
    "longname": "src/core/frame.js~FrameContext#cancel",
    "access": "public",
    "description": "Cancels the frame loop.",
    "lineNumber": 218,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 104,
    "kind": "member",
    "name": "clear",
    "memberof": "src/core/frame.js~FrameContext",
    "static": false,
    "longname": "src/core/frame.js~FrameContext#clear",
    "access": "public",
    "description": "Clears drawing buffers.",
    "lineNumber": 231,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 105,
    "kind": "member",
    "name": "regl",
    "memberof": "src/core/frame.js~FrameContext",
    "static": false,
    "longname": "src/core/frame.js~FrameContext#regl",
    "access": "public",
    "description": "A reference to the underlying regl instance.",
    "lineNumber": 244,
    "type": {
      "nullable": null,
      "types": [
        "regl"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 106,
    "kind": "member",
    "name": "gl",
    "memberof": "src/core/frame.js~FrameContext",
    "static": false,
    "longname": "src/core/frame.js~FrameContext#gl",
    "access": "public",
    "description": "A reference to the underlying WebGl instance.",
    "lineNumber": 255,
    "type": {
      "nullable": null,
      "types": [
        "WebGLRenderingContext"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "enqueue",
    "memberof": "src/core/frame.js~FrameContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/frame.js~FrameContext#enqueue",
    "access": "public",
    "description": "Enqueues a refresh function that is called\nfor every frame refresh loop.",
    "lineNumber": 270,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "refresh",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FrameContext"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "dequeue",
    "memberof": "src/core/frame.js~FrameContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/frame.js~FrameContext#dequeue",
    "access": "public",
    "description": "Dequeues all enqueued frame refresh functions.",
    "lineNumber": 284,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "...Mixed"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FrameContext"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "init",
    "memberof": "src/core/frame.js~FrameContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/frame.js~FrameContext#init",
    "access": "public",
    "description": "Initializes frame context with a function\nthat injects a regl context.",
    "lineNumber": 303,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "inject",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FrameContext"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 110,
    "kind": "member",
    "name": "isCancelled",
    "memberof": "src/core/frame.js~FrameContext",
    "static": false,
    "longname": "src/core/frame.js~FrameContext#isCancelled",
    "access": null,
    "description": null,
    "lineNumber": 305,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "member",
    "name": "loop",
    "memberof": "src/core/frame.js~FrameContext",
    "static": false,
    "longname": "src/core/frame.js~FrameContext#loop",
    "access": null,
    "description": null,
    "lineNumber": 306,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "cancelFrame",
    "memberof": "src/core/frame.js~FrameContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/frame.js~FrameContext#cancelFrame",
    "access": "public",
    "description": "Cancels the frame loop. This function will remove\nall enqueued refresh functions.",
    "lineNumber": 328,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "clearBuffers",
    "memberof": "src/core/frame.js~FrameContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/frame.js~FrameContext#clearBuffers",
    "access": "public",
    "description": "Clears WebGL clear and depth buffers.",
    "lineNumber": 345,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "onrefresh",
    "memberof": "src/core/frame.js~FrameContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/frame.js~FrameContext#onrefresh",
    "access": "private",
    "description": "Internal refresh callback.",
    "lineNumber": 355,
    "params": [
      {
        "name": "reglContext",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 115,
    "kind": "member",
    "name": "reglContext",
    "memberof": "src/core/frame.js~FrameContext",
    "static": false,
    "longname": "src/core/frame.js~FrameContext#reglContext",
    "access": null,
    "description": null,
    "lineNumber": 356,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "class",
    "name": "FrameUniforms",
    "memberof": "src/core/frame.js",
    "static": true,
    "longname": "src/core/frame.js~FrameUniforms",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/frame",
    "importStyle": "{FrameUniforms}",
    "description": "The FrameUniforms class represents an object of\nall injected uniforms for a frame render loop.",
    "lineNumber": 372,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "FrameUniforms"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 117,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/frame.js~FrameUniforms",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/frame.js~FrameUniforms#constructor",
    "access": "public",
    "description": "FrameUniforms class constructor.",
    "lineNumber": 383,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 118,
    "kind": "member",
    "name": "time",
    "memberof": "src/core/frame.js~FrameUniforms",
    "static": false,
    "longname": "src/core/frame.js~FrameUniforms#time",
    "access": "public",
    "description": "Total time ellapsed in seconds since the frame\nwas initialized.",
    "lineNumber": 394,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 119,
    "kind": "member",
    "name": "tick",
    "memberof": "src/core/frame.js~FrameUniforms",
    "static": false,
    "longname": "src/core/frame.js~FrameUniforms#tick",
    "access": "public",
    "description": "The number of times/loops a frame has\nbeen refreshed/rendered.",
    "lineNumber": 406,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 120,
    "kind": "class",
    "name": "FrameState",
    "memberof": "src/core/frame.js",
    "static": true,
    "longname": "src/core/frame.js~FrameState",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/frame",
    "importStyle": "{FrameState}",
    "description": "The FrameState class represents WebGL state that is injected\neach frame refresh.",
    "see": [
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md}"
    ],
    "lineNumber": 421,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "FrameState"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 121,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/frame.js~FrameState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/frame.js~FrameState#constructor",
    "access": "public",
    "description": "FrameState class constructor.",
    "lineNumber": 432,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 122,
    "kind": "member",
    "name": "frag",
    "memberof": "src/core/frame.js~FrameState",
    "static": false,
    "longname": "src/core/frame.js~FrameState#frag",
    "access": "public",
    "description": "Default fragment applied to the frame context scope.",
    "see": [
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#shaders}"
    ],
    "lineNumber": 449,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 123,
    "kind": "member",
    "name": "blend",
    "memberof": "src/core/frame.js~FrameState",
    "static": false,
    "longname": "src/core/frame.js~FrameState#blend",
    "access": "public",
    "description": "Blending state for every frame loop.",
    "see": [
      "{@link kDefaultFrameBlendingState}",
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#blending}"
    ],
    "lineNumber": 463,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 124,
    "kind": "member",
    "name": "cull",
    "memberof": "src/core/frame.js~FrameState",
    "static": false,
    "longname": "src/core/frame.js~FrameState#cull",
    "access": "public",
    "description": "Culling state for every frame loop.",
    "see": [
      "{@link kDefaultFrameCullingState}",
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#culling}"
    ],
    "lineNumber": 477,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 125,
    "kind": "member",
    "name": "depth",
    "memberof": "src/core/frame.js~FrameState",
    "static": false,
    "longname": "src/core/frame.js~FrameState#depth",
    "access": "public",
    "description": "Depth buffer state for every frame loop.",
    "see": [
      "{@link kDefaultFrameDepthState}",
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#depth-buffer}"
    ],
    "lineNumber": 491,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 126,
    "kind": "file",
    "name": "src/core/geometry.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { Vector3, Vector2 } from '../math/vector'\n\nimport getBoundingBox from 'bound-points'\nimport Wireframe from 'screen-projected-lines'\nimport reindex from 'mesh-reindex'\nimport unindex from 'unindex-mesh'\nimport normals from 'normals'\n\n/** @virtual {SimplicialComplex} https://github.com/mikolalysenko/simplicial-complex */\n\n/**\n * The Geometry class represents a base class for primitive geometries.\n *\n * @public\n * @class Geometry\n * @see {@link https://en.wikipedia.org/wiki/Abstract_simplicial_complex}\n * @see {@link https://github.com/mikolalysenko/simplicial-complex}\n */\n\nexport class Geometry {\n\n  /**\n   * Geometry class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {?Object} opts Class constructor options.\n   * @param {?SimplicialComplex} opts.complex\n   * @param {?Boolean} opts.flatten\n   */\n\n  constructor({complex = null, flatten = false} = {}) {\n\n    /**\n     * Internal simplicial complex value.\n     * @private\n     */\n\n    Object.defineProperty(this, '_complex', {\n      enumerable: false,\n      writable: false,\n      value: {},\n    })\n\n    /**\n     * Property indicating whether a geometry simplicial complex\n     * should be flattened.\n     *\n     * @public\n     * @type {Boolean}\n     */\n\n    this.flatten = flatten\n\n    /** @ignore */\n    this.complex = complex || null\n  }\n\n  /**\n   * Simplicial complex setter. Complex is flattened\n   * if `.flatten` is set to `true`.\n   *\n   * @public\n   * @accessor\n   * @type {SimplicialComplex}\n   * @see {@link Geometry#flatten}\n   */\n\n  set complex(complex) {\n    if (complex instanceof Geometry) {\n      complex = complex.complex\n    }\n\n    if (complex) {\n      if (this.flatten && complex.cells) {\n        const cells = complex.cells.map((cell) => cell.slice())\n        const flattened = reindex(unindex(complex.positions, cells))\n        try {\n          complex.normals = normals.vertexNormals(\n            flattened.cells,\n            flattened.positions)\n        } catch (e) { console.warn(\"Unable to compute vertex normals.\") }\n        Object.assign(complex, flattened)\n      }\n\n      if (null == complex.normals && complex.positions && complex.cells) {\n        try {\n          complex.normals = normals.vertexNormals(\n            complex.cells,\n            complex.positions)\n        } catch (e) { console.warn(\"Unable to compute vertex normals.\") }\n      }\n    }\n\n    Object.assign(this._complex, complex)\n    return complex\n  }\n\n  /**\n   * SimplicialComplex complex getter.\n   *\n   * @public\n   * @accessor\n   * @type {SimplicialComplex|null}\n   */\n\n  get complex() {\n    return this._complex || null\n  }\n\n  /**\n   * Simplicial complex position vectors.\n   *\n   * @public\n   * @accessor\n   * @type {Array<Number|Array>|null}\n   */\n\n  get positions() {\n    return this.complex ? this.complex.positions : null\n  }\n\n  /**\n   * Simplicial complex normal vectors.\n   *\n   * @public\n   * @accessor\n   * @type {Array<Number|Array>|null}\n   */\n\n  get normals() {\n    return this.complex ? this.complex.normals : null\n  }\n\n  /**\n   * Simplicial complex uv vectors.\n   *\n   * @public\n   * @accessor\n   * @type {Array<Number|Array>|null}\n   */\n\n  get uvs() {\n    return this.complex ? this.complex.uvs : null\n  }\n\n  /**\n   * Simplicial complex position cells. The faces of\n   * the geometry.\n   *\n   * @public\n   * @accessor\n   * @type {Array<Number|Array>|null}\n   */\n\n  get cells() {\n    return this.complex ? this.complex.cells : null\n  }\n\n  /**\n   * Computes and returns a bounding box for the geometry.\n   *\n   * @return {Array<Vector3|Vector2>}\n   */\n\n  computeBoundingBox() {\n    return getBoundingBox(this.positions)\n      .map((p) => {\n        switch (p.length) {\n          case 3: return new Vector3(...p)\n          case 2: return new Vector2(...p)\n        }\n      })\n  }\n}\n",
    "static": true,
    "longname": "src/core/geometry.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 127,
    "kind": "class",
    "name": "Geometry",
    "memberof": "src/core/geometry.js",
    "static": true,
    "longname": "src/core/geometry.js~Geometry",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/geometry",
    "importStyle": "{Geometry}",
    "description": "The Geometry class represents a base class for primitive geometries.",
    "see": [
      "{@link https://en.wikipedia.org/wiki/Abstract_simplicial_complex}",
      "{@link https://github.com/mikolalysenko/simplicial-complex}"
    ],
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Geometry"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 128,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/geometry.js~Geometry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/geometry.js~Geometry#constructor",
    "access": "public",
    "description": "Geometry class constructor.",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": "Class constructor options."
      },
      {
        "nullable": true,
        "types": [
          "SimplicialComplex"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.complex",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.flatten",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "flatten",
    "memberof": "src/core/geometry.js~Geometry",
    "static": false,
    "longname": "src/core/geometry.js~Geometry#flatten",
    "access": "public",
    "description": "Property indicating whether a geometry simplicial complex\nshould be flattened.",
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 130,
    "kind": "member",
    "name": "complex",
    "memberof": "src/core/geometry.js~Geometry",
    "static": false,
    "longname": "src/core/geometry.js~Geometry#complex",
    "access": null,
    "description": null,
    "lineNumber": 62,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "set",
    "name": "complex",
    "memberof": "src/core/geometry.js~Geometry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/geometry.js~Geometry#complex",
    "access": "public",
    "description": "Simplicial complex setter. Complex is flattened\nif `.flatten` is set to `true`.",
    "see": [
      "{@link Geometry#flatten}"
    ],
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@accessor",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "SimplicialComplex"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 132,
    "kind": "get",
    "name": "complex",
    "memberof": "src/core/geometry.js~Geometry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/geometry.js~Geometry#complex",
    "access": "public",
    "description": "SimplicialComplex complex getter.",
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@accessor",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "SimplicialComplex",
        "null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 133,
    "kind": "get",
    "name": "positions",
    "memberof": "src/core/geometry.js~Geometry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/geometry.js~Geometry#positions",
    "access": "public",
    "description": "Simplicial complex position vectors.",
    "lineNumber": 125,
    "unknown": [
      {
        "tagName": "@accessor",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<Number|Array>|null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 134,
    "kind": "get",
    "name": "normals",
    "memberof": "src/core/geometry.js~Geometry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/geometry.js~Geometry#normals",
    "access": "public",
    "description": "Simplicial complex normal vectors.",
    "lineNumber": 137,
    "unknown": [
      {
        "tagName": "@accessor",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<Number|Array>|null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 135,
    "kind": "get",
    "name": "uvs",
    "memberof": "src/core/geometry.js~Geometry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/geometry.js~Geometry#uvs",
    "access": "public",
    "description": "Simplicial complex uv vectors.",
    "lineNumber": 149,
    "unknown": [
      {
        "tagName": "@accessor",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<Number|Array>|null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 136,
    "kind": "get",
    "name": "cells",
    "memberof": "src/core/geometry.js~Geometry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/geometry.js~Geometry#cells",
    "access": "public",
    "description": "Simplicial complex position cells. The faces of\nthe geometry.",
    "lineNumber": 162,
    "unknown": [
      {
        "tagName": "@accessor",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<Number|Array>|null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "computeBoundingBox",
    "memberof": "src/core/geometry.js~Geometry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/geometry.js~Geometry#computeBoundingBox",
    "access": null,
    "description": "Computes and returns a bounding box for the geometry.",
    "lineNumber": 172,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array<Vector3|Vector2>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 138,
    "kind": "file",
    "name": "src/core/geometry_buffer.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { incrementStat } from '../stats'\nimport { Command } from './command'\n\nimport injectDefines from 'glsl-inject-defines'\nimport glslify from 'glslify'\n\n/** @virtual {REGLFrameBuffer} https://github.com/regl-project/regl/blob/gh-pages/API.md#framebuffers */\n\n/**\n * The default geometry buffer fragment shader.\n *\n * @public\n * @const\n * @type {String}\n * @see {@link https://www.npmjs.com/package/glslify}\n * @see {@link http://stack.gl}\n */\n\nexport const kDefaultGeometryBufferFragmentShader =\n  glslify(__dirname + '/../glsl/geometry_buffer/frag.glsl')\n\n/**\n *\n * @public\n * @class GeometryBuffer\n * @extends Command\n */\n\nexport class GeometryBuffer extends Command {\n\n  /**\n   * GeometryBuffer class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   * @throws Error\n   */\n\n  constructor(ctx, {fbo = null} = {}) {\n    if (!ctx.regl.hasExtension('webgl_draw_buffers')) {\n      throw new Error(\"GeometryBuffer needs the 'webgl_draw_buffers' extension.\")\n    }\n\n    incrementStat('GeometryBuffer')\n    super(update)\n\n    /**\n     * GeometryBuffer state\n     */\n\n    const {state = new GeometryBufferState(ctx, initialState)} = initialState\n\n    /**\n     * Regl command to capture geometry state into a framebuffer.\n     */\n\n    const captureGeometryBuffer = ctx.regl({ ...state })\n\n    /**\n     * Injects a regl context so that viewport information can be\n     * read and stored.\n     */\n\n    const injectContext = ctx.regl()\n\n    /**\n     * Current viewport dimensions.\n     */\n\n    let currentViewportHeight = 0\n    let currentViewportWidth = 0\n\n    /**\n     * GeometryBuffer update function.\n     */\n\n    function update(state, block) {\n      let needsResize = false\n\n      if ('function' == typeof state) {\n        block = state\n        state = {}\n      }\n\n      state = state || {}\n      block = block || (() => void 0)\n\n      injectContext(({viewportWidth, viewportHeight, clear}) => {\n        if (viewportWidth != currentViewportWidth) {\n          currentViewportWidth = viewportWidth\n          needsResize = true\n        }\n\n        if (viewportHeight != currentViewportHeight) {\n          currentViewportHeight = viewportHeight\n          needsResize = true\n        }\n\n        if (needsResize) {\n          try { fbo.resize(currentViewportWidth, currentViewportHeight) }\n          catch(err) { ctx.emit('error', err) }\n        }\n\n        captureGeometryBuffer((...args) => {\n          clear()\n          block(...args)\n        })\n      })\n\n      return this\n    }\n  }\n}\n\n/**\n * GeometryBufferState class.\n *\n * @public\n * @class GeometryBufferState\n */\n\nexport class GeometryBufferState {\n\n  /**\n   * GeometryBufferState class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    const {\n      fbo = null,\n      fragmentShader = kDefaultGeometryBufferFragmentShader,\n      framebuffer = fbo || ctx.regl.framebuffer({\n        color: [\n          ctx.regl.texture({type: 'float'}), // albedo\n          ctx.regl.texture({type: 'float'}), // normal\n          ctx.regl.texture({type: 'float'}) // position\n        ]\n      })\n    } = initialState\n\n    const shaderDefines = {}\n\n    if (framebuffer.color && framebuffer.color[0]) {\n      shaderDefines.HAS_ALBEDO = 1\n    }\n\n    if (framebuffer.color && framebuffer.color[1]) {\n      shaderDefines.HAS_NORMALS = 1\n    }\n\n    if (framebuffer.color && framebuffer.color[2]) {\n      shaderDefines.HAS_POSITIONS = 1\n    }\n\n    /**\n     * Internal GeometryBuffer framebuffer\n     *\n     * @public\n     * @type {REGLFrameBuffer}\n     * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#framebuffers}\n     */\n\n    this.framebuffer = framebuffer\n\n    /**\n     * GeometryBuffer fragment shader source string that\n     * describes a program that writes pixels to the internal\n     * framebuffer.\n     *\n     * @public\n     * @type {String}\n     */\n\n    this.frag = injectDefines(fragmentShader, shaderDefines)\n  }\n}\n",
    "static": true,
    "longname": "src/core/geometry_buffer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 139,
    "kind": "variable",
    "name": "kDefaultGeometryBufferFragmentShader",
    "memberof": "src/core/geometry_buffer.js",
    "static": true,
    "longname": "src/core/geometry_buffer.js~kDefaultGeometryBufferFragmentShader",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/geometry_buffer",
    "importStyle": "{kDefaultGeometryBufferFragmentShader}",
    "description": "The default geometry buffer fragment shader.",
    "see": [
      "{@link https://www.npmjs.com/package/glslify}",
      "{@link http://stack.gl}"
    ],
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 140,
    "kind": "class",
    "name": "GeometryBuffer",
    "memberof": "src/core/geometry_buffer.js",
    "static": true,
    "longname": "src/core/geometry_buffer.js~GeometryBuffer",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/geometry_buffer",
    "importStyle": "{GeometryBuffer}",
    "description": "",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "GeometryBuffer"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 141,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/geometry_buffer.js~GeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/geometry_buffer.js~GeometryBuffer#constructor",
    "access": "public",
    "description": "GeometryBuffer class constructor.",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "Error"
      }
    ]
  },
  {
    "__docId__": 142,
    "kind": "class",
    "name": "GeometryBufferState",
    "memberof": "src/core/geometry_buffer.js",
    "static": true,
    "longname": "src/core/geometry_buffer.js~GeometryBufferState",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/geometry_buffer",
    "importStyle": "{GeometryBufferState}",
    "description": "GeometryBufferState class.",
    "lineNumber": 130,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "GeometryBufferState"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 143,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/geometry_buffer.js~GeometryBufferState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/geometry_buffer.js~GeometryBufferState#constructor",
    "access": "public",
    "description": "GeometryBufferState class constructor.",
    "lineNumber": 141,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 144,
    "kind": "member",
    "name": "framebuffer",
    "memberof": "src/core/geometry_buffer.js~GeometryBufferState",
    "static": false,
    "longname": "src/core/geometry_buffer.js~GeometryBufferState#framebuffer",
    "access": "public",
    "description": "Internal GeometryBuffer framebuffer",
    "see": [
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#framebuffers}"
    ],
    "lineNumber": 176,
    "type": {
      "nullable": null,
      "types": [
        "REGLFrameBuffer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 145,
    "kind": "member",
    "name": "frag",
    "memberof": "src/core/geometry_buffer.js~GeometryBufferState",
    "static": false,
    "longname": "src/core/geometry_buffer.js~GeometryBufferState#frag",
    "access": "public",
    "description": "GeometryBuffer fragment shader source string that\ndescribes a program that writes pixels to the internal\nframebuffer.",
    "lineNumber": 187,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 146,
    "kind": "file",
    "name": "src/core/index.js",
    "content": "'use strict'\n\n/**\n * Module exports.\n */\n\nexport * from './extrude_geometry'\nexport * from './geometry_buffer'\nexport * from './geometry'\nexport * from './object3d'\nexport * from './command'\nexport * from './texture'\nexport * from './context'\nexport * from './material'\nexport * from './camera'\nexport * from './stream'\nexport * from './frame'\nexport * from './light'\nexport * from './color'\nexport * from './input'\nexport * from './mesh'\nexport * from './text'\n",
    "static": true,
    "longname": "src/core/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 147,
    "kind": "file",
    "name": "src/core/input.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { StreamContext, Stream } from './stream'\nimport coalesce from 'defined'\n\n/**\n * The Input class represents an interface to inquiring input information\n * as it is emitted from a stream. This class serves as the base class for\n * various inputs such as keyboard and mouse.\n *\n * @public\n * @class Input\n * @extends Stream\n */\n\nexport class Input extends Stream {\n\n  /**\n   * Input class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context object.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n\n    /**\n     * Injected regl context\n     */\n\n    const {context = new InputContext(ctx, initialState)} = initialState\n\n    /**\n     * Input initialization function.\n     */\n\n    const {init} = initialState\n\n    super(ctx, {context, ...initialState})\n\n    if ('function' == typeof init) {\n      init(ctx, {\n        ...initialState,\n        context,\n        stream: context.stream,\n      })\n    }\n  }\n}\n\n/**\n * InputContext class.\n *\n * @public\n * @class InputContext\n * @extends StreamContext\n */\n\nexport class InputContext extends StreamContext {\n\n  /**\n   * InputContext class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context object.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    super(ctx, {transform, ...initialState})\n\n    /**\n     * Input properties to pluck from the update function\n     * returned by the init function.\n     */\n\n    const {props = []} = initialState\n\n    /**\n     * Reference to last transformed input data.\n     */\n\n    let data = null\n\n    /**\n     * Input stream transform function.\n     */\n\n    function transform(chunk) {\n      data = null == chunk ? null : props.reduce((d, prop) => {\n        return {...d, [prop]: chunk[prop]}\n      }, {})\n      return data\n    }\n\n    // dynamically set input context properties\n    for (const prop of props) {\n      this[prop] = () => {\n        return data ? coalesce(data[prop], undefined) : undefined\n      }\n    }\n  }\n}\n",
    "static": true,
    "longname": "src/core/input.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 148,
    "kind": "class",
    "name": "Input",
    "memberof": "src/core/input.js",
    "static": true,
    "longname": "src/core/input.js~Input",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/input",
    "importStyle": "{Input}",
    "description": "The Input class represents an interface to inquiring input information\nas it is emitted from a stream. This class serves as the base class for\nvarious inputs such as keyboard and mouse.",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Input"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 149,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/input.js~Input",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/input.js~Input#constructor",
    "access": "public",
    "description": "Input class constructor.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context object."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 150,
    "kind": "class",
    "name": "InputContext",
    "memberof": "src/core/input.js",
    "static": true,
    "longname": "src/core/input.js~InputContext",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/input",
    "importStyle": "{InputContext}",
    "description": "InputContext class.",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "InputContext"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 151,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/input.js~InputContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/input.js~InputContext#constructor",
    "access": "public",
    "description": "InputContext class constructor.",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context object."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 152,
    "kind": "member",
    "name": "[prop]",
    "memberof": "src/core/input.js~InputContext",
    "static": false,
    "longname": "src/core/input.js~InputContext#[prop]",
    "access": null,
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "file",
    "name": "src/core/light.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { Quaternion, Vector3 } from '../math'\nimport { incrementStat } from '../stats'\nimport { FlatMaterial } from '../material/flat'\nimport * as types from '../light/types'\nimport { Color } from './color'\nimport { Mesh } from './mesh'\n\nimport {\n  Object3DContext,\n  Object3D,\n} from './object3d'\n\nimport {\n  DirectionalLightType,\n  PointLightType,\n  BasicLightType,\n} from '../light/types'\n\nimport coalesce from 'defined'\nimport vec3 from 'gl-vec3'\nimport mat4 from 'gl-mat4'\n\nconst kMat4Identity = mat4.identity([])\n\n/**\n * Next available Light ID represented\n * as an integer.\n *\n * @private\n */\n\nlet LIGHT_COMMAND_NEXT_ID = 0\n\n/**\n * Default light intensity, if applicable.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kDefaultLightIntensity = 10\n\n\n/**\n * Default light position, if applicable.\n *\n * @public\n * @const\n * @type {Vector3}\n */\n\nexport const kDefaultLightPosition = new Vector3(0, 0, 0)\n\n/**\n * Default light rotation, if applicable.\n *\n * @public\n * @const\n * @type {Quaternion}\n */\n\nexport const kDefaultLightRotation = new Quaternion()\n\n/**\n * Default light ambient, if applicable.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kDefaultLightAmbient = 0.1\n\n/**\n * Default light radius, if applicable.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kDefaultLightRadius = 50\n\n/**\n * Default light color, if applicable.\n *\n * @public\n * @const\n * @type {Color}\n */\n\nexport const kDefaultLightColor = new Color('white')\n\n/**\n * Default light type, if applicable.\n *\n * @public\n * @const\n * @type {LightType}\n */\n\nexport const kDefaultLighType = BasicLightType\n\n/**\n * The Light class represents the base type for all lights.\n *\n * @public\n * @class Light\n * @extends Object3D\n * @see {@link Object3D}\n */\n\nexport class Light extends Object3D {\n\n  /**\n   * Light class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {Context} ctx Axis3D render context.\n   * @param {?Object} initialState Initial state\n   */\n\n  constructor(ctx, initialState = {}) {\n    incrementStat('Light')\n\n    // init update method\n    const {regl} = ctx\n\n    const {\n      intensity: initialIntensity = kDefaultLightIntensity,\n      position: initialPosition = kDefaultLightPosition,\n      rotation: initialRotation = kDefaultLightRotation,\n      ambient: initialAmbient = kDefaultLightAmbient,\n      visible: initialVisible = true,\n      radius: initialRadius = kDefaultLightRadius,\n      color: initialColor = kDefaultLightColor,\n      type: initialType = kDefaultLighType,\n      id = Light.id(),\n    } = initialState\n\n    const updateLight = initialState.update || (({} = {}, f) => f())\n\n    const {context = new LightContext()} = initialState\n    const material = new FlatMaterial(ctx)\n    const injectContext = regl({ context })\n\n    super(ctx, {\n      ...initialState,\n\n      // all Object3D descendants must implement an update\n      // method to actually do something\n      update\n    })\n\n    /**\n     * Calls current target render function\n     */\n\n    function update({\n      transform: contextTransform = kMat4Identity,\n      position: contextPosition = initialPosition,\n      lights: contextLights,\n    }, {\n      intensity = initialIntensity,\n      rotation = initialRotation,\n      ambient = initialAmbient,\n      visible = initialVisible,\n      radius = initialRadius,\n      color = initialColor,\n      type = initialType,\n\n      transform = contextTransform,\n      position = contextPosition,\n      lights = contextLights,\n    }, block) {\n      const light = {}\n      let w = 0\n      switch (type || initialType) {\n        case DirectionalLightType: w = 1; break\n        case PointLightType: w = 0; break\n      }\n      Object.assign(light, {\n        typeName: Light.typeName(type),\n        intensity: coalesce(intensity, initialIntensity),\n        position: [...coalesce(position, initialPosition), w],\n        ambient: coalesce(ambient, initialAmbient),\n        visible: coalesce(visible, initialVisible),\n        radius: coalesce(radius, initialRadius),\n        color: coalesce(color, [...initialColor]),\n        type: coalesce(type, initialType),\n      })\n\n      // transform light position\n      vec3.transformMat4(light.position, light.position, transform)\n      // push to scoped lights in frame context\n      lights.push(light)\n      injectContext(arguments[1] || {}, ({}, args) => {\n        material(args || {}, ({}, args) => {\n          updateLight(args || {}, (...args) => {\n            block(...args)\n          })\n        })\n      })\n    }\n  }\n\n  /**\n   * Returns the next light ID\n   *\n   * @public\n   * @method\n   * @static\n   * @return {Number}\n   */\n\n  static id() {\n    return LIGHT_COMMAND_NEXT_ID ++\n  }\n\n  /**\n   * Returns a string representation of a light type\n   * from a given type identifier.\n   *\n   * @public\n   * @static\n   * @method\n   * @param {LightType|Number} type\n   * @return {String}\n   */\n\n  static typeName(type) {\n    return coalesce(Object.keys(types).find((k) => type == types[k]), type)\n  }\n}\n\n/**\n * LightContext class.\n *\n * @public\n * @class CameraContext\n * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#context}\n */\n\nexport class LightContext extends Object3DContext {\n\n  /**\n   * LightContext class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState) {\n    super(ctx, initialState)\n  }\n}\n",
    "static": true,
    "longname": "src/core/light.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 154,
    "kind": "variable",
    "name": "kMat4Identity",
    "memberof": "src/core/light.js",
    "static": true,
    "longname": "src/core/light.js~kMat4Identity",
    "access": null,
    "export": false,
    "importPath": "axis3d/core/light",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "variable",
    "name": "LIGHT_COMMAND_NEXT_ID",
    "memberof": "src/core/light.js",
    "static": true,
    "longname": "src/core/light.js~LIGHT_COMMAND_NEXT_ID",
    "access": "private",
    "export": false,
    "importPath": "axis3d/core/light",
    "importStyle": null,
    "description": "Next available Light ID represented\nas an integer.",
    "lineNumber": 38,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "variable",
    "name": "kDefaultLightIntensity",
    "memberof": "src/core/light.js",
    "static": true,
    "longname": "src/core/light.js~kDefaultLightIntensity",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/light",
    "importStyle": "{kDefaultLightIntensity}",
    "description": "Default light intensity, if applicable.",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 157,
    "kind": "variable",
    "name": "kDefaultLightPosition",
    "memberof": "src/core/light.js",
    "static": true,
    "longname": "src/core/light.js~kDefaultLightPosition",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/light",
    "importStyle": "{kDefaultLightPosition}",
    "description": "Default light position, if applicable.",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 158,
    "kind": "variable",
    "name": "kDefaultLightRotation",
    "memberof": "src/core/light.js",
    "static": true,
    "longname": "src/core/light.js~kDefaultLightRotation",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/light",
    "importStyle": "{kDefaultLightRotation}",
    "description": "Default light rotation, if applicable.",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Quaternion"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 159,
    "kind": "variable",
    "name": "kDefaultLightAmbient",
    "memberof": "src/core/light.js",
    "static": true,
    "longname": "src/core/light.js~kDefaultLightAmbient",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/light",
    "importStyle": "{kDefaultLightAmbient}",
    "description": "Default light ambient, if applicable.",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 160,
    "kind": "variable",
    "name": "kDefaultLightRadius",
    "memberof": "src/core/light.js",
    "static": true,
    "longname": "src/core/light.js~kDefaultLightRadius",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/light",
    "importStyle": "{kDefaultLightRadius}",
    "description": "Default light radius, if applicable.",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 161,
    "kind": "variable",
    "name": "kDefaultLightColor",
    "memberof": "src/core/light.js",
    "static": true,
    "longname": "src/core/light.js~kDefaultLightColor",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/light",
    "importStyle": "{kDefaultLightColor}",
    "description": "Default light color, if applicable.",
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Color"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 162,
    "kind": "variable",
    "name": "kDefaultLighType",
    "memberof": "src/core/light.js",
    "static": true,
    "longname": "src/core/light.js~kDefaultLighType",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/light",
    "importStyle": "{kDefaultLighType}",
    "description": "Default light type, if applicable.",
    "lineNumber": 109,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "LightType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 163,
    "kind": "class",
    "name": "Light",
    "memberof": "src/core/light.js",
    "static": true,
    "longname": "src/core/light.js~Light",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/light",
    "importStyle": "{Light}",
    "description": "The Light class represents the base type for all lights.",
    "see": [
      "{@link Object3D}"
    ],
    "lineNumber": 120,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Light"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 164,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/light.js~Light",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/light.js~Light#constructor",
    "access": "public",
    "description": "Light class constructor.",
    "lineNumber": 131,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D render context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Initial state"
      }
    ]
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "id",
    "memberof": "src/core/light.js~Light",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/light.js~Light.id",
    "access": "public",
    "description": "Returns the next light ID",
    "lineNumber": 224,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "typeName",
    "memberof": "src/core/light.js~Light",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/light.js~Light.typeName",
    "access": "public",
    "description": "Returns a string representation of a light type\nfrom a given type identifier.",
    "lineNumber": 239,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "LightType",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 167,
    "kind": "class",
    "name": "LightContext",
    "memberof": "src/core/light.js",
    "static": true,
    "longname": "src/core/light.js~LightContext",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/light",
    "importStyle": "{LightContext}",
    "description": "LightContext class.",
    "see": [
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#context}"
    ],
    "lineNumber": 252,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CameraContext"
      }
    ],
    "interface": false,
    "extends": [
      "src/core/object3d.js~Object3DContext"
    ]
  },
  {
    "__docId__": 168,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/light.js~LightContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/light.js~LightContext#constructor",
    "access": "public",
    "description": "LightContext class constructor.",
    "lineNumber": 263,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 169,
    "kind": "file",
    "name": "src/core/material.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { ensureRGBA, isArrayLike } from '../utils'\nimport { incrementStat } from '../stats'\nimport { Command } from './command'\nimport { Texture } from './texture'\nimport { Color } from './color'\nimport * as types from '../material/types'\n\nimport {\n  kMaxDirectionalLights,\n  kMaxAmbientLights,\n  kMaxPointLights,\n} from '../light/limits'\n\nimport injectDefines from 'glsl-inject-defines'\nimport coalesce from 'defined'\nimport glslify from 'glslify'\nimport vec4 from 'gl-vec4'\n\n/**\n * Next available Material ID represented\n * as an integer.\n * @private\n */\n\nlet MATERIAL_COMMAND_NEXT_ID = 0x6d\n\n/**\n * The default material fragment shader.\n *\n * @public\n * @const\n * @type {String}\n * @see {@link https://www.npmjs.com/package/glslify}\n * @see {@link http://stack.gl}\n */\n\nexport const kDefaultMaterialFragmentShader =\n  glslify(__dirname + '/../glsl/material/fragments/main.glsl', {\n    transform: ['glslify-fancy-imports']\n  })\n\n/**\n * The default material opacity value.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kDefaultMaterialOpacity = 1\n\n/**\n * The default material color.\n *\n * @public\n * @const\n * @type {Color}\n */\n\nexport const kDefaultMaterialColor = new Color(\n  100/255, 110/255, 255/255\n)\n\n/**\n * The default material type.\n *\n * @public\n * @const\n * @type {MaterialType}\n */\n\nexport const kDefaultMaterialType = types.Material\n\n/**\n * The default WebGL blending state for a material.\n *\n * @public\n * @const\n * @type {Object}\n * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#blending}\n */\n\nexport const kDefaultMaterialBlendingState = {\n  equation: 'add',\n  enable: true,\n  color: [0, 0, 0, 1],\n  func: {\n    src: 'src alpha',\n    dst: 'one minus src alpha'\n  },\n}\n\n/**\n * The default WebGL culling state for a material.\n *\n * @public\n * @const\n * @type {Object}\n * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#culling}\n */\n\nexport const kDefaultMaterialCullingState = {\n  enable: true,\n  face: 'back',\n}\n\n/**\n * The default WebGL depth buffer state for a material.\n *\n * @public\n * @const\n * @type {Object}\n * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#depth-buffer}\n */\n\nexport const kDefaultMaterialDepthState = {\n  enable: true,\n  range: [0, 1],\n  func: 'less',\n  mask: true,\n}\n\n/**\n * The Material class represents the base type for\n * all materials.\n *\n * @public\n * @abstract\n * @class Material\n * @extends Command\n */\n\nexport class Material extends Command {\n\n  /**\n   * Returns the next material ID\n   *\n   * @public\n   * @method\n   * @static\n   * @return {Number}\n   */\n\n  static id() {\n    return MATERIAL_COMMAND_NEXT_ID ++\n  }\n\n  /**\n   * Returns a string representation of a material type\n   * from a given type identifier.\n   *\n   * @public\n   * @static\n   * @method\n   * @param {MaterialType|Number} type\n   * @return {String}\n   */\n\n  static typeName(type) {\n    return coalesce(\n      Object.keys(types).find((k) => type == types[k]),\n      type)\n      .replace(/Type$/, '')\n  }\n\n  /**\n   * Material class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    incrementStat('Material')\n    super(update)\n\n    /**\n     * Material map.\n     */\n\n    const {materialMap = new MaterialMap(ctx, initialState)} = initialState\n\n    /**\n     * Injected material uniforms.\n     */\n\n    const {uniforms = new MaterialUniforms(ctx, initialState)} = initialState\n\n    /**\n     * Injected material context.\n     */\n\n    const {context = new MaterialContext(ctx, initialState)} = initialState\n\n    /**\n     * Material state.\n     */\n\n    const {state = new MaterialState(ctx, initialState)} = initialState\n\n    /**\n     * Regl context injection function.\n     */\n\n    const injectContext = ctx.regl({\n      ...state,\n      uniforms,\n      context,\n    })\n\n    /**\n     * Material update function.\n     */\n\n    function update(state, block) {\n      if ('function' == typeof state) {\n        block = state\n        state = {}\n      }\n\n      if (isArrayLike(state)) {\n        state = [ ...state ]\n      } else {\n        state = { ...(state || {}) }\n      }\n\n      block = block || function() {}\n\n      const mapState = isArrayLike(state) ? {} : state.map\n      materialMap.injectContext(mapState || {}, ({map} = {}) => {\n        if ('function' == typeof map) {\n          map((c) => {\n            injectContext(state, block)\n          })\n        } else {\n          injectContext(state, block)\n        }\n      })\n\n      return this\n    }\n  }\n}\n\n/**\n * MaterialState class.\n *\n * @public\n * @class MaterialState\n */\n\nexport class MaterialState {\n\n  /**\n   * MaterialState class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    if (initialState.blending) {\n      initialState.blend = initialState.blending\n      delete initialState.blending\n    }\n\n    if (initialState.culling) {\n      initialState.cull = initialState.culling\n      delete initialState.culling\n    }\n\n    if (null == initialState.blend) {\n      initialState.blend = {}\n    }\n\n    if (null == initialState.cull) {\n      initialState.cull = {}\n    }\n\n    if (null == initialState.depth) {\n      initialState.depth = {}\n    }\n\n    /**\n     * Material fragment shader source.\n     */\n\n    let {fragmentShader = kDefaultMaterialFragmentShader} = initialState\n\n    /**\n     * Material type.\n     */\n    const {type = types.Material} = initialState\n\n    /**\n     * Material type string.\n     */\n\n    const typeName = Material.typeName(type)\n\n    /**\n     * Injected fragment shader defines.\n     */\n\n    const shaderDefines = {\n      [`use${typeName}`]: 1, // `useLambertMaterial', etc\n      MATERIAL_TYPE: typeName,\n\n      ...initialState.shaderDefines\n    }\n\n    if (null != initialState.map) {\n      shaderDefines.HAS_MAP = 1\n    }\n\n    for (let key in types) {\n      shaderDefines[`${key}`] = types[key]\n    }\n\n    //shaderDefines['MAX_SPOT_LIGHTS'] = kMaxSpotLights\n    shaderDefines['MAX_POINT_LIGHTS'] = kMaxPointLights\n    shaderDefines['MAX_AMBIENT_LIGHTS'] = kMaxAmbientLights\n    shaderDefines['MAX_DIRECTIONAL_LIGHTS'] = kMaxDirectionalLights\n\n    for (let key in shaderDefines) {\n      fragmentShader = `#define ${key} ${shaderDefines[key]}\\n`+fragmentShader\n    }\n\n    /**\n     * Material fragment shader source string.\n     *\n     * @public\n     * @type {String}\n     * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#shaders}\n     */\n\n    this.frag = fragmentShader\n\n    /**\n     * Blending state for a material.\n     *\n     * @public\n     * @type {Object}\n     * @see {@link kDefaultMaterialBlendingState}\n     * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#blending}\n     */\n\n    this.blend = {\n\n      /**\n       * Blending equation.\n       *\n       * @public\n       * @property\n       * @type {String}\n       * @name blend.equation\n       */\n\n      equation() {\n        return coalesce(\n          initialState.blend.equation,\n          kDefaultMaterialBlendingState.equation)\n      },\n\n      /**\n       * Indicates if blending is enabled.\n       *\n       * @public\n       * @property\n       * @type {Boolean}\n       * @name blend.enabled\n       */\n\n      enable({}, {\n        blend = undefined,\n        opacity = coalesce(initialState.opacity, 1),\n        transparent = coalesce(initialState.transparent, false),\n\n        blending = coalesce(\n          blend,\n          initialState.blend.enable,\n          kDefaultMaterialBlendingState.enable),\n      } = {}) {\n        if (opacity < 1.0 || transparent) {\n          return true\n        } else if ('boolean' == typeof blending) {\n          return blending\n        } else {\n          return transparent\n        }\n      },\n\n      /**\n       * Blending color\n       *\n       * @public\n       * @property\n       * @type {Array<Number>|Color|Vector4}\n       * @name blend.color\n       */\n\n      color() {\n       return ensureRGBA(coalesce(\n          initialState.blend.color,\n          kDefaultMaterialBlendingState.color))\n      },\n\n      /**\n       * Blending function\n       *\n       * @public\n       * @property\n       * @type {Object}\n       * @name blend.func\n       */\n\n      func({}, {\n        opacity = coalesce(initialState.opacity, 1),\n        transparent = coalesce(initialState.transparent, false),\n      } = {}) {\n        if (opacity < 1.0 || transparent) {\n          return {src: 'src alpha', dst: 'one'}\n        } else {\n          return coalesce(\n            initialState.blend.func,\n            kDefaultMaterialBlendingState.func)\n        }\n      },\n    }\n\n    /**\n     * Culling state for a material.\n     *\n     * @public\n     * @type {Object}\n     * @see {@link kDefaultMaterialCullingState}\n     * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#culling}\n     */\n\n    this.cull = {\n      enable({}, {cull = initialState.cull.enable} = {}) {\n        return Boolean(coalesce(cull, kDefaultMaterialCullingState.enable))\n      },\n\n      face({}, {cullFace = initialState.cull.face}) {\n        return coalesce(cullFace, kDefaultMaterialCullingState.face)\n      },\n    }\n\n    /**\n     * Depth buffer state for a material.\n     *\n     * @public\n     * @type {Object}\n     * @see {@link kDefaultMaterialDepthState}\n     * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#depth-buffer}\n     */\n\n    this.depth = {\n      enable() {\n        return coalesce(initialState.depth.enable, kDefaultMaterialDepthState.enable)\n      },\n\n      range() {\n        return coalesce(initialState.depth.range, kDefaultMaterialDepthState.range)\n      },\n\n      func() {\n        return coalesce(initialState.depth.func, kDefaultMaterialDepthState.func)\n      },\n\n      mask({}, {\n        opacity = coalesce(initialState.opacity, 1),\n        transparent = coalesce(\n          initialState.transparent,\n          initialState.blend.enable,\n          kDefaultMaterialDepthState.enable,\n          false),\n      } = {}) {\n        if (opacity < 1.0 || transparent) {\n          return true\n        } else {\n          return coalesce(initialState.depth.mask, kDefaultMaterialDepthState.mask)\n        }\n      }\n    }\n  }\n}\n\n/**\n * MaterialContext class.\n *\n * @public\n * @class MaterialContext\n * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#context}\n */\n\nexport class MaterialContext {\n\n  /**\n   * MaterialContext class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D render context.\n   * @param {Object} initialState\n   */\n\n  constructor(ctx, initialState = {}) {\n    const {\n      type = types.Material,\n      id = Material.id(),\n    } = initialState\n\n    /**\n     * Material opacity.\n     *\n     * @public\n     * @type {Number}\n     */\n\n    this.opacity = ({}, {opacity = initialState.opacity} = {}) => {\n      return coalesce(opacity, kDefaultMaterialOpacity)\n    }\n\n    /**\n     * Material type.\n     *\n     * @public\n     * @type {Number}\n     */\n\n    this.type = () => {\n      return coalesce(type, types.Material)\n    }\n\n    /**\n     * Material color value.\n     *\n     * @public\n     * @type {Color|Vector4|Array}\n     * @name material.color\n     */\n\n    this.color = ({}, {color = initialState.color} = {}) => {\n      return ensureRGBA(coalesce(color, kDefaultMaterialColor))\n    }\n  }\n}\n\n/**\n * The MaterialUniforms class represents an object of\n * all injected uniforms for a material.\n *\n * @public\n * @class MaterialUniforms\n */\n\nexport class MaterialUniforms {\n\n  /**\n   * MaterialUniforms class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    const emptyTexture = ctx.regl.texture()\n\n    /**\n     * Material opacity value.\n     *\n     * @public\n     * @type {Number}\n     * @name material.opacity\n     */\n\n    this['material.opacity'] = ({opacity = initialState.opacity}) => {\n      return coalesce(opacity, kDefaultMaterialOpacity)\n    }\n\n    /**\n     * Material color value.\n     *\n     * @public\n     * @type {Color|Vector4|Array}\n     * @name material.color\n     */\n\n    this['material.color'] = ({color = initialState.color}) => {\n      return coalesce(color, kDefaultMaterialColor)\n    }\n\n    /**\n     * Material type identifier.\n     *\n     * @public\n     * @type {Number}\n     * @name material.type\n     * @see {@link material/types}\n     */\n\n    this['material.type'] = ({type = initialState.type}) => {\n      return coalesce(type, kDefaultMaterialType)\n    }\n\n    /**\n     * Texture map resolution if available.\n     *\n     * @public\n     * @type {Array<Number>|Vector2}\n     */\n\n    this['map.resolution'] = ({textureResolution}) => {\n      return coalesce(textureResolution, [0, 0])\n    }\n\n    /**\n     * Texture map data if available.\n     *\n     * @public\n     * @type {Texture}\n     */\n\n    this['map.data'] = ({texture, textureData}) => {\n      return coalesce(texture, emptyTexture)\n    }\n  }\n}\n\n/**\n * The MaterialMap class represents an abstraction around a texture map\n * given to a material.\n *\n * @public\n * @class MaterialMap\n */\n\nexport class MaterialMap {\n\n  /**\n   * MaterialMap class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n\n    /**\n     * Injects a map into a context for a material.\n     *\n     * @public\n     * @type {Function}\n     */\n\n    this.injectContext = ctx.regl({\n      context: {\n        map: ({}, {map = initialState.map}) => {\n          return map\n        }\n      }\n    })\n  }\n}\n",
    "static": true,
    "longname": "src/core/material.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 170,
    "kind": "variable",
    "name": "MATERIAL_COMMAND_NEXT_ID",
    "memberof": "src/core/material.js",
    "static": true,
    "longname": "src/core/material.js~MATERIAL_COMMAND_NEXT_ID",
    "access": "private",
    "export": false,
    "importPath": "axis3d/core/material",
    "importStyle": null,
    "description": "Next available Material ID represented\nas an integer.",
    "lineNumber": 31,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 171,
    "kind": "variable",
    "name": "kDefaultMaterialFragmentShader",
    "memberof": "src/core/material.js",
    "static": true,
    "longname": "src/core/material.js~kDefaultMaterialFragmentShader",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/material",
    "importStyle": "{kDefaultMaterialFragmentShader}",
    "description": "The default material fragment shader.",
    "see": [
      "{@link https://www.npmjs.com/package/glslify}",
      "{@link http://stack.gl}"
    ],
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 172,
    "kind": "variable",
    "name": "kDefaultMaterialOpacity",
    "memberof": "src/core/material.js",
    "static": true,
    "longname": "src/core/material.js~kDefaultMaterialOpacity",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/material",
    "importStyle": "{kDefaultMaterialOpacity}",
    "description": "The default material opacity value.",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 173,
    "kind": "variable",
    "name": "kDefaultMaterialColor",
    "memberof": "src/core/material.js",
    "static": true,
    "longname": "src/core/material.js~kDefaultMaterialColor",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/material",
    "importStyle": "{kDefaultMaterialColor}",
    "description": "The default material color.",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Color"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 174,
    "kind": "variable",
    "name": "kDefaultMaterialType",
    "memberof": "src/core/material.js",
    "static": true,
    "longname": "src/core/material.js~kDefaultMaterialType",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/material",
    "importStyle": "{kDefaultMaterialType}",
    "description": "The default material type.",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "MaterialType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 175,
    "kind": "variable",
    "name": "kDefaultMaterialBlendingState",
    "memberof": "src/core/material.js",
    "static": true,
    "longname": "src/core/material.js~kDefaultMaterialBlendingState",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/material",
    "importStyle": "{kDefaultMaterialBlendingState}",
    "description": "The default WebGL blending state for a material.",
    "see": [
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#blending}"
    ],
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 176,
    "kind": "variable",
    "name": "kDefaultMaterialCullingState",
    "memberof": "src/core/material.js",
    "static": true,
    "longname": "src/core/material.js~kDefaultMaterialCullingState",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/material",
    "importStyle": "{kDefaultMaterialCullingState}",
    "description": "The default WebGL culling state for a material.",
    "see": [
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#culling}"
    ],
    "lineNumber": 108,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 177,
    "kind": "variable",
    "name": "kDefaultMaterialDepthState",
    "memberof": "src/core/material.js",
    "static": true,
    "longname": "src/core/material.js~kDefaultMaterialDepthState",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/material",
    "importStyle": "{kDefaultMaterialDepthState}",
    "description": "The default WebGL depth buffer state for a material.",
    "see": [
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#depth-buffer}"
    ],
    "lineNumber": 122,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 178,
    "kind": "class",
    "name": "Material",
    "memberof": "src/core/material.js",
    "static": true,
    "longname": "src/core/material.js~Material",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/material",
    "importStyle": "{Material}",
    "description": "The Material class represents the base type for\nall materials.",
    "lineNumber": 139,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Material"
      }
    ],
    "abstract": true,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "id",
    "memberof": "src/core/material.js~Material",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/material.js~Material.id",
    "access": "public",
    "description": "Returns the next material ID",
    "lineNumber": 150,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "typeName",
    "memberof": "src/core/material.js~Material",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/material.js~Material.typeName",
    "access": "public",
    "description": "Returns a string representation of a material type\nfrom a given type identifier.",
    "lineNumber": 165,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "MaterialType",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 181,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/material.js~Material",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/material.js~Material#constructor",
    "access": "public",
    "description": "Material class constructor.",
    "lineNumber": 181,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 182,
    "kind": "class",
    "name": "MaterialState",
    "memberof": "src/core/material.js",
    "static": true,
    "longname": "src/core/material.js~MaterialState",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/material",
    "importStyle": "{MaterialState}",
    "description": "MaterialState class.",
    "lineNumber": 260,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MaterialState"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 183,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/material.js~MaterialState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/material.js~MaterialState#constructor",
    "access": "public",
    "description": "MaterialState class constructor.",
    "lineNumber": 271,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 184,
    "kind": "member",
    "name": "frag",
    "memberof": "src/core/material.js~MaterialState",
    "static": false,
    "longname": "src/core/material.js~MaterialState#frag",
    "access": "public",
    "description": "Material fragment shader source string.",
    "see": [
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#shaders}"
    ],
    "lineNumber": 347,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 185,
    "kind": "member",
    "name": "blend",
    "memberof": "src/core/material.js~MaterialState",
    "static": false,
    "longname": "src/core/material.js~MaterialState#blend",
    "access": "public",
    "description": "Blending state for a material.",
    "see": [
      "{@link kDefaultMaterialBlendingState}",
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#blending}"
    ],
    "lineNumber": 358,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 186,
    "kind": "member",
    "name": "cull",
    "memberof": "src/core/material.js~MaterialState",
    "static": false,
    "longname": "src/core/material.js~MaterialState#cull",
    "access": "public",
    "description": "Culling state for a material.",
    "see": [
      "{@link kDefaultMaterialCullingState}",
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#culling}"
    ],
    "lineNumber": 450,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 187,
    "kind": "member",
    "name": "depth",
    "memberof": "src/core/material.js~MaterialState",
    "static": false,
    "longname": "src/core/material.js~MaterialState#depth",
    "access": "public",
    "description": "Depth buffer state for a material.",
    "see": [
      "{@link kDefaultMaterialDepthState}",
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#depth-buffer}"
    ],
    "lineNumber": 469,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 188,
    "kind": "class",
    "name": "MaterialContext",
    "memberof": "src/core/material.js",
    "static": true,
    "longname": "src/core/material.js~MaterialContext",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/material",
    "importStyle": "{MaterialContext}",
    "description": "MaterialContext class.",
    "see": [
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#context}"
    ],
    "lineNumber": 508,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MaterialContext"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 189,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/material.js~MaterialContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/material.js~MaterialContext#constructor",
    "access": "public",
    "description": "MaterialContext class constructor.",
    "lineNumber": 519,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D render context."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 190,
    "kind": "member",
    "name": "opacity",
    "memberof": "src/core/material.js~MaterialContext",
    "static": false,
    "longname": "src/core/material.js~MaterialContext#opacity",
    "access": "public",
    "description": "Material opacity.",
    "lineNumber": 532,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 191,
    "kind": "member",
    "name": "type",
    "memberof": "src/core/material.js~MaterialContext",
    "static": false,
    "longname": "src/core/material.js~MaterialContext#type",
    "access": "public",
    "description": "Material type.",
    "lineNumber": 543,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 192,
    "kind": "member",
    "name": "color",
    "memberof": "src/core/material.js~MaterialContext",
    "static": false,
    "longname": "src/core/material.js~MaterialContext#color",
    "access": "public",
    "description": "Material color value.",
    "lineNumber": 555,
    "type": {
      "nullable": null,
      "types": [
        "Color",
        "Vector4",
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 193,
    "kind": "class",
    "name": "MaterialUniforms",
    "memberof": "src/core/material.js",
    "static": true,
    "longname": "src/core/material.js~MaterialUniforms",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/material",
    "importStyle": "{MaterialUniforms}",
    "description": "The MaterialUniforms class represents an object of\nall injected uniforms for a material.",
    "lineNumber": 569,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MaterialUniforms"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 194,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/material.js~MaterialUniforms",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/material.js~MaterialUniforms#constructor",
    "access": "public",
    "description": "MaterialUniforms class constructor.",
    "lineNumber": 580,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 195,
    "kind": "member",
    "name": "['material.opacity']",
    "memberof": "src/core/material.js~MaterialUniforms",
    "static": false,
    "longname": "src/core/material.js~MaterialUniforms#['material.opacity']",
    "access": "public",
    "description": "Material opacity value.",
    "lineNumber": 591,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 196,
    "kind": "member",
    "name": "['material.color']",
    "memberof": "src/core/material.js~MaterialUniforms",
    "static": false,
    "longname": "src/core/material.js~MaterialUniforms#['material.color']",
    "access": "public",
    "description": "Material color value.",
    "lineNumber": 603,
    "type": {
      "nullable": null,
      "types": [
        "Color",
        "Vector4",
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 197,
    "kind": "member",
    "name": "['material.type']",
    "memberof": "src/core/material.js~MaterialUniforms",
    "static": false,
    "longname": "src/core/material.js~MaterialUniforms#['material.type']",
    "access": "public",
    "description": "Material type identifier.",
    "see": [
      "{@link material/types}"
    ],
    "lineNumber": 616,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 198,
    "kind": "member",
    "name": "['map.resolution']",
    "memberof": "src/core/material.js~MaterialUniforms",
    "static": false,
    "longname": "src/core/material.js~MaterialUniforms#['map.resolution']",
    "access": "public",
    "description": "Texture map resolution if available.",
    "lineNumber": 627,
    "type": {
      "nullable": null,
      "types": [
        "Array<Number>",
        "Vector2"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 199,
    "kind": "member",
    "name": "['map.data']",
    "memberof": "src/core/material.js~MaterialUniforms",
    "static": false,
    "longname": "src/core/material.js~MaterialUniforms#['map.data']",
    "access": "public",
    "description": "Texture map data if available.",
    "lineNumber": 638,
    "type": {
      "nullable": null,
      "types": [
        "Texture"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 200,
    "kind": "class",
    "name": "MaterialMap",
    "memberof": "src/core/material.js",
    "static": true,
    "longname": "src/core/material.js~MaterialMap",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/material",
    "importStyle": "{MaterialMap}",
    "description": "The MaterialMap class represents an abstraction around a texture map\ngiven to a material.",
    "lineNumber": 652,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MaterialMap"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 201,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/material.js~MaterialMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/material.js~MaterialMap#constructor",
    "access": "public",
    "description": "MaterialMap class constructor.",
    "lineNumber": 663,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 202,
    "kind": "member",
    "name": "injectContext",
    "memberof": "src/core/material.js~MaterialMap",
    "static": false,
    "longname": "src/core/material.js~MaterialMap#injectContext",
    "access": "public",
    "description": "Injects a map into a context for a material.",
    "lineNumber": 672,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 203,
    "kind": "file",
    "name": "src/core/mesh.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { ensureRGBA, define, isArrayLike } from '../utils'\nimport { Object3D, Object3DContext} from './object3d'\nimport { Vector3, Vector2 } from '../math'\nimport { incrementStat } from '../stats'\nimport { Geometry } from './geometry'\n\nimport injectDefines from 'glsl-inject-defines'\nimport coalesce from 'defined'\nimport glslify from 'glslify'\nimport clamp from 'clamp'\nimport mat4 from 'gl-mat4'\nimport mat3 from 'gl-mat3'\nimport vec4 from 'gl-vec4'\nimport vec3 from 'gl-vec3'\nimport vec2 from 'gl-vec2'\n\nconst kMat4Identity = mat4.identity([])\nconst kMat3Identity = mat3.identity([])\n\n/**\n * The default wireframe drawing primitive.\n *\n * @public\n * @const\n * @type {String}\n */\n\nexport const kDefaultMeshWireframePrimitive = 'line strip'\n\n/**\n * The default wireframe line thickness value.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kDefaultMeshWireframeThickness = 1\n\n/**\n * The default mesh drawing primitive.\n *\n * @public\n * @const\n * @type {String}\n */\n\nexport const kDefaultMeshPrimitive = 'triangles'\n\n/**\n * The default vertex shader shource string.\n *\n * @public\n * @const\n * @type {String}\n */\n\nexport const kDefaultMeshVertexShader = glslify(__dirname + '/../glsl/mesh/vert.glsl')\n\n/**\n * The Mesh class represents an abstraction around something drawable\n * to the screen. This class consumes a {@link Geometry} that provides\n * simplicial complex data such as positions, normals, and uv coordinates.\n * This class provides a default vertex shader and expects a fragment shader\n * to be injected into the context before drawing. This class extends\n * {@link Object3D] which gives it a 3D positional interface.\n *\n * @public\n * @class Mesh\n * @extends Object3D\n */\n\nexport class Mesh extends Object3D {\n\n  /**\n   * Mesh class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {!Object} initialState Required initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    incrementStat('Mesh')\n\n    if (false == initialState.geometry instanceof Geometry) {\n      initialState.geometry = new Geometry({complex: initialState.geometry})\n    }\n\n    /**\n     * Mesh shader attributes.\n     */\n\n    const {attributes = new MeshAttributes(ctx, initialState)} = initialState\n\n    /**\n     * Mesh shader uniforms.\n     */\n\n    const {uniforms = new MeshUniforms(ctx, initialState)} = initialState\n\n    /**\n     * Mesh context.\n     */\n\n    const {context = new MeshContext(ctx, initialState)} = initialState\n\n    /**\n     * Mesh state.\n     */\n\n    const {state = new MeshState(ctx, initialState)} = initialState\n\n    /**\n     * Optional update function.\n     */\n\n    const {update: updateMesh = ({}, f) => f()} = initialState\n\n    /**\n     * Regl contest.\n     */\n\n    const injectContext = ctx.regl({context})\n\n    /**\n     * Mesh draw command.\n     */\n\n    const draw = ctx.regl({\n      ...state,\n      attributes,\n      uniforms,\n    })\n\n    super(ctx, { ...initialState, context, update })\n\n    /**\n     * Draws mesh and with given state and\n     * then calling an optional given block\n     */\n\n    function update({}, state, block) {\n      injectContext(state, (...args) => {\n        const {visible} = args[0]\n        updateMesh(state, () => {\n          if (false === state.visible) {\n            draw(state, block)\n          } else if (false != state.draw) {\n            draw(state)\n            block(...args)\n          } else {\n            draw(state, block)\n          }\n        })\n      })\n    }\n  }\n}\n\n/**\n * Object3DContext class that represents an injected regl context.\n *\n * @public\n * @class MeshContext\n * @see {@link Object3DContext}\n */\n\nexport class MeshContext extends Object3DContext {\n\n  /**\n   * MeshContext class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D render context.\n   * @param {Object} initialState\n   */\n\n  constructor(ctx, initialState = {}) {\n    super(ctx, initialState)\n\n    const {geometry} = initialState\n\n    // protected properties\n    Object.defineProperties(this, {\n      computedBoundingBox: {\n        enumerable: false,\n        writable: true,\n        value: null\n      },\n\n      computedSize: {\n        enumerable: false,\n        writable: true,\n        value: null\n      },\n\n      computedSize: {\n        enumerable: false,\n        writable: true,\n        value: null\n      },\n    })\n\n    /**\n     * The underlying geometry that wraps a simplicial complex\n     * that is given as shader attribute input.\n     *\n     * @public\n     * @type {Geometry}\n     */\n\n    this.geometry = geometry\n\n    /**\n     * A computed bounding box for a mesh.\n     *\n     * @public\n     * @type {Array<Vector>}\n     */\n\n    this.boundingBox = (...args) => {\n      return this.computeBoundingBox(...args)\n    }\n\n    /**\n     * A computed size represented for a mesh.\n     *\n     * @public\n     * @type {Vector}\n     */\n\n    this.size = (...args) => {\n      return this.computeSize(...args)\n    }\n\n    /**\n     * Visibility boolean\n     *\n     * @public\n     * @type {Boolean}\n     */\n\n    this.visible = ({}, {visible} = {}) => {\n      return coalesce(visible, initialState.visible, true)\n    }\n  }\n\n  /**\n   * Function to compute the bounding box of the internal\n   * geometry. The bounding box is computed once and cached.\n   *\n   * @public\n   * @method\n   * @param {Boolean} force\n   */\n\n  computeBoundingBox(force = false) {\n    if (null == this.geometry) { return null }\n    if (true == force || null == this.computedBoundingBox) {\n      this.computedBoundingBox = this.geometry.computeBoundingBox()\n    }\n    return this.computedBoundingBox\n  }\n\n  /**\n   * Function to compute the size of the geometry with\n   * respect to scaling and dimension.\n   *\n   * @public\n   * @method\n<<<<<<< Updated upstream\n   * @param {?Object} opts\n   * @param {?Number} opts.scale - default is 1\n=======\n   * @param {?{scale: Number}} opts\n>>>>>>> Stashed changes\n   *\n   */\n\n  computeSize({scale = 1} = {}) {\n    if (null == this.geometry) {\n      return null\n    } else if (this.computedSize) {\n      return this.computedSize\n    }\n\n    this.computeBoundingBox()\n\n    const boundingBox = this.computedBoundingBox\n    const dimension = boundingBox[0].length\n    const min = boundingBox[0]\n    const max = boundingBox[1]\n    let size = null\n\n    switch (dimension) {\n      case 3: size = vec3.subtract(new Vector3(), max, min); break\n      case 2: size = vec2.subtract(new Vector2(), max, min); break\n      default: return null\n    }\n\n    switch (dimension) {\n      case 3: vec3.multiply(size, size, scale); break\n      case 2: vec2.multiply(size, size, scale); break\n    }\n\n    this.computedSize = size\n  }\n}\n\n/**\n * MeshState class.\n *\n * @public\n * @class MeshState\n*/\n\nexport class MeshState {\n  /**\n   * MeshState class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D render context.\n   * @param {Object} initialState\n   */\n\n  constructor(ctx, initialState) {\n    const {\n      frag: fragmentShader = null,\n      vert: vertexShader = kDefaultMeshVertexShader,\n      geometry = null,\n    } = initialState\n\n    // shader defines injected into vertex shader\n    const shaderDefines = {\n      ...initialState.shaderDefines\n    }\n\n    if (geometry.positions) {\n      shaderDefines['HAS_POSITIONS'] = 1\n    }\n\n    if (geometry.normals) {\n      shaderDefines['HAS_NORMALS'] = 1\n    }\n\n    if (geometry.uvs) {\n      shaderDefines['HAS_UVS'] = 1\n    }\n\n    /**\n     * Mesh vertex shader source.\n     *\n     * @public\n     * @type {String}\n     */\n\n    this.vert =\n      'string' == typeof vertexShader\n      ? injectDefines(vertexShader, shaderDefines)\n      : null\n\n    /**\n     * Optional mesh fragment shader source.\n     *\n     * @public\n     * @type {String|undefined}\n     */\n\n    this.frag =\n      'string' == typeof fragmentShader\n      ? injectDefines(fragmentShader, shaderDefines)\n      : null\n\n    /**\n     * The line width value used for wireframe meshes.\n     *\n     * @public\n     * @type {Number}\n     */\n\n    this.lineWidth = ({}, {\n      wireframeThickness = initialState.wireframeThickness,\n      lineWidth = 1,\n    } = {}) => {\n      return Math.max(1, coalesce(\n        wireframeThickness,\n        lineWidth,\n        kDefaultMeshWireframeThickness))\n    }\n\n    /**\n     * The mesh drawing primitive.\n     *\n     * @public\n     * @type {String}\n     */\n\n    this.primitive = ({}, {\n      primitive = null,\n      wireframe = false,\n    } = {}) => {\n      if ('string' == typeof primitive) {\n        return primitive\n      } else if (wireframe) {\n        return coalesce(\n          initialState.wireframePrimitive,\n          kDefaultMeshWireframePrimitive)\n      } else if ('string' == typeof initialState.primitive) {\n        return initialState.primitive\n      } else {\n        return kDefaultMeshPrimitive\n      }\n    }\n\n    /**\n     * Mesh elements array if geometry provides cells.\n     *\n     * @public\n     * @type {Array|null}\n     */\n\n    this.elements = !geometry || !geometry.cells ? null : (({}, {\n      wireframe = initialState.wireframe,\n      count = initialState.count,\n    } = {}) => {\n      let cells = geometry.cells\n      if (cells && 'number' == typeof count) {\n        count = clamp(Math.floor(count), 0, cells.length)\n        cells = cells.slice(0, count)\n      }\n      return cells\n    })\n\n    /**\n     * Mesh triangle count if geometry does not provide cells.\n     *\n     * @public\n     * @type {Number|null}\n     */\n\n    this.count = !geometry || geometry.cells ? null : (({}, {\n      count = geometry.positions.length\n    } = {}) => {\n      if (null != count) { return count }\n      else if (initialState.count) { return initialState.count }\n      else if (geometry && geometry.complex) {\n        return geometry.positions.length\n      } else {\n        return null\n      }\n    })\n\n    // remove null or undefined values\n    for (const key in this) {\n      if (null == this[key]) {\n        delete this[key]\n      }\n    }\n  }\n}\n\n/**\n * MeshUniforms class.\n *\n * @public\n * @class MeshUniforms\n */\n\nexport class MeshUniforms {\n\n  /**\n   * MeshUniforms class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D render context.\n   * @param {Object} initialState\n   */\n\n  constructor(ctx, initialState) {\n\n    /**\n     * Mesh model matrix uniform.\n     *\n     * @public\n     * @type {Array<Number>}\n     */\n\n    this['mesh.model'] = ({transform}) => {\n      return transform || kMat4Identity\n    }\n\n    /**\n     * Mesh model normal matrix uniform.\n     *\n     * @public\n     * @type {Array<Number>}\n     */\n\n    this['mesh.modelNormal'] = ({transform}) => {\n      if (isArrayLike(transform)) {\n        return mat3.normalFromMat4([], transform) || kMat3Identity\n      } else {\n        return kMat3Identity\n      }\n    }\n\n    /**\n     * Mesh fallback opacity uniform value.\n     *\n     * @public\n     * @type {Number}\n     * @TODO - figure out a better fallback here and in the shader.\n     */\n\n    // at least enough for flat shading incase a material isn't given\n    this['material.opacity'] =\n      ({opacity: contextOpacity}, {opacity = contextOpacity} = {}) => {\n        return coalesce(opacity, 1)\n      }\n\n    /**\n     * Mesh fallback color uniform value.\n     *\n     * @public\n     * @type {Array<Number>}\n     * @TODO - figure out a better fallback here and in the shader.\n     */\n\n    this['material.color'] =\n      ({color: contextColor}, {color = contextColor} = {}) => {\n        return ensureRGBA(color)\n      }\n\n    // remove null or undefined values\n    for (const key in this) {\n      if (null == this[key]) {\n        delete this[key]\n      }\n    }\n  }\n}\n\n/**\n * MeshAttributes class.\n *\n * @public\n * @class MeshAttributes\n*/\n\nexport class MeshAttributes {\n\n  /**\n   * MeshAttributes class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D render context.\n   * @param {!Object} initialState\n  */\n\n  constructor(ctx, initialState) {\n    const {geometry} = initialState\n\n    /**\n     * 'position' vertex attributes value.\n     *\n     * @public\n     * @type {Array<Array<Number>>|Array<Vector3>|null}\n     */\n\n    this.position = coalesce(geometry.positions, null)\n\n    /**\n     * 'position' vertex attributes value.\n     *\n     * @public\n     * @type {Array<Array<Number>>|Array<Vector3>|null}\n     */\n\n    this.normal = coalesce(geometry.normals, null)\n\n    /**\n     * 'position' vertex attributes value.\n     *\n     * @public\n     * @type {Array<Array<Number>>|Array<Vector2>|null}\n     */\n\n    this.uv = coalesce(geometry.uvs, null)\n\n    // remove null or undefined values\n    for (const key in this) {\n      if (null == this[key]) {\n        delete this[key]\n      }\n    }\n  }\n}\n",
    "static": true,
    "longname": "src/core/mesh.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 204,
    "kind": "variable",
    "name": "kMat4Identity",
    "memberof": "src/core/mesh.js",
    "static": true,
    "longname": "src/core/mesh.js~kMat4Identity",
    "access": null,
    "export": false,
    "importPath": "axis3d/core/mesh",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 205,
    "kind": "variable",
    "name": "kMat3Identity",
    "memberof": "src/core/mesh.js",
    "static": true,
    "longname": "src/core/mesh.js~kMat3Identity",
    "access": null,
    "export": false,
    "importPath": "axis3d/core/mesh",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "variable",
    "name": "kDefaultMeshWireframePrimitive",
    "memberof": "src/core/mesh.js",
    "static": true,
    "longname": "src/core/mesh.js~kDefaultMeshWireframePrimitive",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/mesh",
    "importStyle": "{kDefaultMeshWireframePrimitive}",
    "description": "The default wireframe drawing primitive.",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 207,
    "kind": "variable",
    "name": "kDefaultMeshWireframeThickness",
    "memberof": "src/core/mesh.js",
    "static": true,
    "longname": "src/core/mesh.js~kDefaultMeshWireframeThickness",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/mesh",
    "importStyle": "{kDefaultMeshWireframeThickness}",
    "description": "The default wireframe line thickness value.",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 208,
    "kind": "variable",
    "name": "kDefaultMeshPrimitive",
    "memberof": "src/core/mesh.js",
    "static": true,
    "longname": "src/core/mesh.js~kDefaultMeshPrimitive",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/mesh",
    "importStyle": "{kDefaultMeshPrimitive}",
    "description": "The default mesh drawing primitive.",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 209,
    "kind": "variable",
    "name": "kDefaultMeshVertexShader",
    "memberof": "src/core/mesh.js",
    "static": true,
    "longname": "src/core/mesh.js~kDefaultMeshVertexShader",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/mesh",
    "importStyle": "{kDefaultMeshVertexShader}",
    "description": "The default vertex shader shource string.",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 210,
    "kind": "class",
    "name": "Mesh",
    "memberof": "src/core/mesh.js",
    "static": true,
    "longname": "src/core/mesh.js~Mesh",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/mesh",
    "importStyle": "{Mesh}",
    "description": "The Mesh class represents an abstraction around something drawable\nto the screen. This class consumes a {@link Geometry} that provides\nsimplicial complex data such as positions, normals, and uv coordinates.\nThis class provides a default vertex shader and expects a fragment shader\nto be injected into the context before drawing. This class extends\n{@link Object3D] which gives it a 3D positional interface.",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Mesh"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 211,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/mesh.js~Mesh",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/mesh.js~Mesh#constructor",
    "access": "public",
    "description": "Mesh class constructor.",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Required initial state."
      }
    ]
  },
  {
    "__docId__": 212,
    "kind": "class",
    "name": "MeshContext",
    "memberof": "src/core/mesh.js",
    "static": true,
    "longname": "src/core/mesh.js~MeshContext",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/mesh",
    "importStyle": "{MeshContext}",
    "description": "Object3DContext class that represents an injected regl context.",
    "see": [
      "{@link Object3DContext}"
    ],
    "lineNumber": 176,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MeshContext"
      }
    ],
    "interface": false,
    "extends": [
      "src/core/object3d.js~Object3DContext"
    ]
  },
  {
    "__docId__": 213,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/mesh.js~MeshContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/mesh.js~MeshContext#constructor",
    "access": "public",
    "description": "MeshContext class constructor.",
    "lineNumber": 187,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D render context."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 214,
    "kind": "member",
    "name": "geometry",
    "memberof": "src/core/mesh.js~MeshContext",
    "static": false,
    "longname": "src/core/mesh.js~MeshContext#geometry",
    "access": "public",
    "description": "The underlying geometry that wraps a simplicial complex\nthat is given as shader attribute input.",
    "lineNumber": 221,
    "type": {
      "nullable": null,
      "types": [
        "Geometry"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 215,
    "kind": "member",
    "name": "boundingBox",
    "memberof": "src/core/mesh.js~MeshContext",
    "static": false,
    "longname": "src/core/mesh.js~MeshContext#boundingBox",
    "access": "public",
    "description": "A computed bounding box for a mesh.",
    "lineNumber": 230,
    "type": {
      "nullable": null,
      "types": [
        "Array<Vector>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 216,
    "kind": "member",
    "name": "size",
    "memberof": "src/core/mesh.js~MeshContext",
    "static": false,
    "longname": "src/core/mesh.js~MeshContext#size",
    "access": "public",
    "description": "A computed size represented for a mesh.",
    "lineNumber": 241,
    "type": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 217,
    "kind": "member",
    "name": "visible",
    "memberof": "src/core/mesh.js~MeshContext",
    "static": false,
    "longname": "src/core/mesh.js~MeshContext#visible",
    "access": "public",
    "description": "Visibility boolean",
    "lineNumber": 252,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "computeBoundingBox",
    "memberof": "src/core/mesh.js~MeshContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/mesh.js~MeshContext#computeBoundingBox",
    "access": "public",
    "description": "Function to compute the bounding box of the internal\ngeometry. The bounding box is computed once and cached.",
    "lineNumber": 266,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "force",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 219,
    "kind": "member",
    "name": "computedBoundingBox",
    "memberof": "src/core/mesh.js~MeshContext",
    "static": false,
    "longname": "src/core/mesh.js~MeshContext#computedBoundingBox",
    "access": null,
    "description": null,
    "lineNumber": 269,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "computeSize",
    "memberof": "src/core/mesh.js~MeshContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/mesh.js~MeshContext#computeSize",
    "access": "public",
    "description": "Function to compute the size of the geometry with\nrespect to scaling and dimension.",
    "lineNumber": 289,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "<<<<<<< Updated upstream"
      }
    ],
    "params": [
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.scale",
        "description": "default is 1\n======="
      },
      {
        "nullable": true,
        "types": [
          "{scale: Number}"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ">>>>>>> Stashed changes"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 221,
    "kind": "member",
    "name": "computedSize",
    "memberof": "src/core/mesh.js~MeshContext",
    "static": false,
    "longname": "src/core/mesh.js~MeshContext#computedSize",
    "access": null,
    "description": null,
    "lineNumber": 315,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 222,
    "kind": "class",
    "name": "MeshState",
    "memberof": "src/core/mesh.js",
    "static": true,
    "longname": "src/core/mesh.js~MeshState",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/mesh",
    "importStyle": "{MeshState}",
    "description": "MeshState class.",
    "lineNumber": 326,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MeshState"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 223,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/mesh.js~MeshState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/mesh.js~MeshState#constructor",
    "access": "public",
    "description": "MeshState class constructor.",
    "lineNumber": 336,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D render context."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 224,
    "kind": "member",
    "name": "vert",
    "memberof": "src/core/mesh.js~MeshState",
    "static": false,
    "longname": "src/core/mesh.js~MeshState#vert",
    "access": "public",
    "description": "Mesh vertex shader source.",
    "lineNumber": 367,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 225,
    "kind": "member",
    "name": "frag",
    "memberof": "src/core/mesh.js~MeshState",
    "static": false,
    "longname": "src/core/mesh.js~MeshState#frag",
    "access": "public",
    "description": "Optional mesh fragment shader source.",
    "lineNumber": 379,
    "type": {
      "nullable": null,
      "types": [
        "String",
        "undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 226,
    "kind": "member",
    "name": "lineWidth",
    "memberof": "src/core/mesh.js~MeshState",
    "static": false,
    "longname": "src/core/mesh.js~MeshState#lineWidth",
    "access": "public",
    "description": "The line width value used for wireframe meshes.",
    "lineNumber": 391,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 227,
    "kind": "member",
    "name": "primitive",
    "memberof": "src/core/mesh.js~MeshState",
    "static": false,
    "longname": "src/core/mesh.js~MeshState#primitive",
    "access": "public",
    "description": "The mesh drawing primitive.",
    "lineNumber": 408,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 228,
    "kind": "member",
    "name": "elements",
    "memberof": "src/core/mesh.js~MeshState",
    "static": false,
    "longname": "src/core/mesh.js~MeshState#elements",
    "access": "public",
    "description": "Mesh elements array if geometry provides cells.",
    "lineNumber": 432,
    "type": {
      "nullable": null,
      "types": [
        "Array",
        "null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 229,
    "kind": "member",
    "name": "count",
    "memberof": "src/core/mesh.js~MeshState",
    "static": false,
    "longname": "src/core/mesh.js~MeshState#count",
    "access": "public",
    "description": "Mesh triangle count if geometry does not provide cells.",
    "lineNumber": 451,
    "type": {
      "nullable": null,
      "types": [
        "Number",
        "null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 230,
    "kind": "class",
    "name": "MeshUniforms",
    "memberof": "src/core/mesh.js",
    "static": true,
    "longname": "src/core/mesh.js~MeshUniforms",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/mesh",
    "importStyle": "{MeshUniforms}",
    "description": "MeshUniforms class.",
    "lineNumber": 479,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MeshUniforms"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 231,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/mesh.js~MeshUniforms",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/mesh.js~MeshUniforms#constructor",
    "access": "public",
    "description": "MeshUniforms class constructor.",
    "lineNumber": 490,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D render context."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 232,
    "kind": "member",
    "name": "['mesh.model']",
    "memberof": "src/core/mesh.js~MeshUniforms",
    "static": false,
    "longname": "src/core/mesh.js~MeshUniforms#['mesh.model']",
    "access": "public",
    "description": "Mesh model matrix uniform.",
    "lineNumber": 499,
    "type": {
      "nullable": null,
      "types": [
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 233,
    "kind": "member",
    "name": "['mesh.modelNormal']",
    "memberof": "src/core/mesh.js~MeshUniforms",
    "static": false,
    "longname": "src/core/mesh.js~MeshUniforms#['mesh.modelNormal']",
    "access": "public",
    "description": "Mesh model normal matrix uniform.",
    "lineNumber": 510,
    "type": {
      "nullable": null,
      "types": [
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 234,
    "kind": "member",
    "name": "['material.opacity']",
    "memberof": "src/core/mesh.js~MeshUniforms",
    "static": false,
    "longname": "src/core/mesh.js~MeshUniforms#['material.opacity']",
    "access": "public",
    "description": "Mesh fallback opacity uniform value.",
    "lineNumber": 527,
    "unknown": [
      {
        "tagName": "@TODO",
        "tagValue": "- figure out a better fallback here and in the shader."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 235,
    "kind": "member",
    "name": "['material.color']",
    "memberof": "src/core/mesh.js~MeshUniforms",
    "static": false,
    "longname": "src/core/mesh.js~MeshUniforms#['material.color']",
    "access": "public",
    "description": "Mesh fallback color uniform value.",
    "lineNumber": 540,
    "unknown": [
      {
        "tagName": "@TODO",
        "tagValue": "- figure out a better fallback here and in the shader."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 236,
    "kind": "class",
    "name": "MeshAttributes",
    "memberof": "src/core/mesh.js",
    "static": true,
    "longname": "src/core/mesh.js~MeshAttributes",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/mesh",
    "importStyle": "{MeshAttributes}",
    "description": "MeshAttributes class.",
    "lineNumber": 561,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MeshAttributes"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 237,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/mesh.js~MeshAttributes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/mesh.js~MeshAttributes#constructor",
    "access": "public",
    "description": "MeshAttributes class constructor.",
    "lineNumber": 572,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D render context."
      },
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 238,
    "kind": "member",
    "name": "position",
    "memberof": "src/core/mesh.js~MeshAttributes",
    "static": false,
    "longname": "src/core/mesh.js~MeshAttributes#position",
    "access": "public",
    "description": "'position' vertex attributes value.",
    "lineNumber": 582,
    "type": {
      "nullable": null,
      "types": [
        "Array<Array<Number>>|Array<Vector3>|null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 239,
    "kind": "member",
    "name": "normal",
    "memberof": "src/core/mesh.js~MeshAttributes",
    "static": false,
    "longname": "src/core/mesh.js~MeshAttributes#normal",
    "access": "public",
    "description": "'position' vertex attributes value.",
    "lineNumber": 591,
    "type": {
      "nullable": null,
      "types": [
        "Array<Array<Number>>|Array<Vector3>|null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 240,
    "kind": "member",
    "name": "uv",
    "memberof": "src/core/mesh.js~MeshAttributes",
    "static": false,
    "longname": "src/core/mesh.js~MeshAttributes#uv",
    "access": "public",
    "description": "'position' vertex attributes value.",
    "lineNumber": 600,
    "type": {
      "nullable": null,
      "types": [
        "Array<Array<Number>>|Array<Vector2>|null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 241,
    "kind": "file",
    "name": "src/core/object3d.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { incrementStat, getStats } from '../stats'\nimport { Quaternion, Vector } from '../math'\nimport { Command } from './command'\nimport { define } from '../utils'\n\nimport coalesce from 'defined'\nimport mat4 from 'gl-mat4'\nimport vec4 from 'gl-vec4'\nimport vec3 from 'gl-vec3'\nimport vec2 from 'gl-vec2'\nimport quat from 'gl-quat'\n\n/**\n * Next available Object3D ID represented\n * as an integer.\n * @private\n */\n\nlet OBJECT_COMMAND_NEXT_ID = 0x6f\n\n/**\n * Mat4 identity matrix.\n * @private\n */\n\nconst kMat4Identity = mat4.identity([])\n\n/**\n * Object3D is the base command type that most types in\n * Axis3D inherits from that need positional data.\n *\n * @public\n * @class Object3D\n * @extends Command\n */\n\nexport class Object3D extends Command {\n\n  /**\n   * Returns the next object ID\n   *\n   * @public\n   * @static\n   * @method\n   * @return {Number}\n   */\n\n  static id() {\n    return OBJECT_COMMAND_NEXT_ID ++\n  }\n\n  /**\n   * Returns a count of all Object3D instances.\n   *\n   * @public\n   * @static\n   * @method\n   * @return {Number}\n   */\n\n  static count() {\n    const stats = getStats('Object3D')\n    return stats ? stats.length : 0\n  }\n\n  /**\n   * Object3D class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D render context.\n   * @param {?Object} initialState Initial state\n   * @see {@link Object3DContext}\n   */\n\n  constructor(ctx, initialState = {}) {\n    incrementStat('Object3D')\n    super(update)\n\n    /**\n     * Optional update function.\n     */\n\n    const {update: updateObject = null} = initialState\n\n    if (null != updateObject && 'function' != typeof updateObject) {\n      throw new TypeError(\n      `Expecting update function to be a function. Got ${typeof updateObject}.`)\n    }\n\n    /**\n     * The injected regl context.\n     */\n\n    const {context = new Object3DContext(ctx, initialState)} = initialState\n\n    // ensure context is a descendant of Object3DContext\n    if (false == context instanceof Object3DContext) {\n      throw new TypeError(\"Expecting instance of Object3DContext given.\")\n    }\n\n    /**\n     * Regl context injection function.\n     */\n\n    const injectContext = ctx.regl({context})\n\n    /**\n     * Calls current target render function\n     */\n\n    function update(state, block) {\n      // ensure correct values\n      if ('function' == typeof state) {\n        block = state\n        state = {}\n      }\n\n      // ensure object\n      state = 'object' == typeof state && state ? state : {}\n\n      // ensure function\n      block = 'function' == typeof block ? block : function() {}\n\n      // inject Object3D context and call\n      // extending update function\n      injectContext(state, (ctx, args, id) => {\n        if ('function' == typeof updateObject) {\n          updateObject(ctx, args || {}, block)\n        } else if ('function' == typeof block) {\n          block(ctx, args || {})\n        }\n      })\n\n      return this\n    }\n  }\n}\n\n/**\n * Object3DContext class that represents an injected regl context.\n *\n * @public\n * @class Object3DContext\n * @see {@link Object3D}\n * @see {@link https://github.com/regl-project/regl}\n * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#context}\n */\n\nexport class Object3DContext {\n\n  /**\n   * Object3DContext class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D render context.\n   * @param {Object} initialState\n   */\n\n  constructor(ctx, initialState = {}) {\n    const {\n      computeTransformMatrix = true,\n      computeLocalMatrix = true,\n\n      rotation: initialRotation = [0, 0, 0, 1],\n      position: initialPosition = [0, 0, 0],\n      scale: initialScale = [1, 1, 1],\n\n      id = Object3D.id(),\n    } = initialState\n\n    /**\n     * World transform matrix.\n     */\n\n    const transformMatrix = mat4.identity([])\n\n    /**\n     * Local model matrix.\n     */\n\n    const localMatrix = mat4.identity([])\n\n    // protected properties\n    Object.defineProperties(this, {\n      shouldComputeTransformMatrix: {\n        enumerable: false,\n        value: computeTransformMatrix,\n      },\n\n      shouldComputeLocalMatrix: {\n        enumerable: false,\n        value: computeLocalMatrix,\n      },\n\n      // initial state\n      initialRotation: { get() { return initialRotation }, enumerable: false },\n      initialPosition: { get() { return initialPosition }, enumerable: false },\n      initialScale: { get() { return initialScale }, enumerable: false },\n\n      // object matrices\n      transformMatrix: { get() { return transformMatrix }, enumerable: false},\n      localMatrix: { get() { return localMatrix }, enumerable: false},\n    })\n\n    /**\n     * Object3D instance ID.\n     *\n     * @public\n     * @type {Number}\n     */\n\n    this.id = ({}, args = {}) => {\n      args = args || {}\n      return coalesce(args.id, id)\n    }\n\n    /**\n     * Object3D scale vector applied to local matrix.\n     *\n     * @public\n     * @type {Array<Number>}\n     */\n\n    this.scale = ({}, args = {}) => {\n      args = args || {}\n      let scale = coalesce(args.scale, initialScale)\n      if ('number' == typeof scale) {\n        scale = [scale, scale, scale]\n      }\n      return scale\n    }\n\n    /**\n     * Object3D position vector that translates the\n     * local matrix.\n     *\n     * @public\n     * @type {Array<Number>}\n     */\n\n    this.position = ({}, args = {}) => {\n      args = args || {}\n      return coalesce(args.position, initialPosition)\n    }\n\n    /**\n     * Object3D rotation quaternion.\n     *\n     * @public\n     * @type {Array<Number>}\n     */\n\n    this.rotation = ({}, args = {}) => {\n      args = args || {}\n      return coalesce(args.rotation, initialRotation)\n    }\n\n    /**\n     * Object3D tranform matrix that is computed from positional\n     * context data such as position, rotation, and scale. If a\n     * transform is given as an argument to the command then it is\n     * applied to the computed transform last.\n     *\n     * @public\n     * @type {Array<Number>}\n     */\n\n    this.transform = (...args) => {\n      return this.computeTransformMatrix(...args)\n    }\n  }\n\n  /**\n   * Computes the transform matrix for the injected Object3D\n   * context derived from rotation, position, and scale data.\n   *\n   * @protected\n   * @method\n   * @param {{transform: Array}} ctx\n   * @param {{transform: Array}} opts\n   * @return {Array}\n   */\n\n  computeTransformMatrix({\n    transform: parentTransformMatrix\n  } = {}, {\n    transform: externalTransformMatrix\n  } = {}) {\n    // reset transform matrix and recompute local matrix\n    // before computing transform matrix\n    this.computeLocalMatrix(...arguments)\n    if (false === this.shouldComputeTransformMatrix) {\n      return this.transformMatrix\n    }\n\n    if (parentTransformMatrix) {\n      // M' = Mp * M\n      mat4.multiply(\n        this.transformMatrix,\n        parentTransformMatrix,\n        this.localMatrix)\n    }\n\n    // apply external transform from arguments to computed transform\n    if (externalTransformMatrix) {\n      mat4.multiply(\n        this.transformMatrix,\n        externalTransformMatrix,\n        this.transformMatrix)\n    }\n    return this.transformMatrix\n  }\n\n  /**\n   * Computes the local matrix for the injected Object3D\n   * context derived from rotation, position, and scale data.\n   *\n   * @protected\n   * @method\n   * @param {{transform: Array}} ctx\n   * @param {{transform: Array}} opts\n   * @return {Array}\n   */\n\n  computeLocalMatrix({}, {\n    rotation = this.initialRotation,\n    position = this.initialPosition,\n    scale = this.initialScale,\n  } = {}) {\n    if (false === this.shouldComputeLocalMatrix) {\n      return this.localMatrix\n    }\n    if ('number' == typeof scale) {\n      scale = [scale, scale, scale]\n    }\n    // M = T * R * S\n    mat4.fromRotationTranslation(this.localMatrix, rotation, position)\n    mat4.scale(this.localMatrix, this.localMatrix, scale)\n    return this.localMatrix\n  }\n}\n",
    "static": true,
    "longname": "src/core/object3d.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 242,
    "kind": "variable",
    "name": "OBJECT_COMMAND_NEXT_ID",
    "memberof": "src/core/object3d.js",
    "static": true,
    "longname": "src/core/object3d.js~OBJECT_COMMAND_NEXT_ID",
    "access": "private",
    "export": false,
    "importPath": "axis3d/core/object3d",
    "importStyle": null,
    "description": "Next available Object3D ID represented\nas an integer.",
    "lineNumber": 25,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 243,
    "kind": "variable",
    "name": "kMat4Identity",
    "memberof": "src/core/object3d.js",
    "static": true,
    "longname": "src/core/object3d.js~kMat4Identity",
    "access": "private",
    "export": false,
    "importPath": "axis3d/core/object3d",
    "importStyle": null,
    "description": "Mat4 identity matrix.",
    "lineNumber": 32,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 244,
    "kind": "class",
    "name": "Object3D",
    "memberof": "src/core/object3d.js",
    "static": true,
    "longname": "src/core/object3d.js~Object3D",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/object3d",
    "importStyle": "{Object3D}",
    "description": "Object3D is the base command type that most types in\nAxis3D inherits from that need positional data.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Object3D"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 245,
    "kind": "method",
    "name": "id",
    "memberof": "src/core/object3d.js~Object3D",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/object3d.js~Object3D.id",
    "access": "public",
    "description": "Returns the next object ID",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 246,
    "kind": "method",
    "name": "count",
    "memberof": "src/core/object3d.js~Object3D",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/object3d.js~Object3D.count",
    "access": "public",
    "description": "Returns a count of all Object3D instances.",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 247,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/object3d.js~Object3D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/object3d.js~Object3D#constructor",
    "access": "public",
    "description": "Object3D class constructor.",
    "see": [
      "{@link Object3DContext}"
    ],
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D render context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Initial state"
      }
    ]
  },
  {
    "__docId__": 248,
    "kind": "class",
    "name": "Object3DContext",
    "memberof": "src/core/object3d.js",
    "static": true,
    "longname": "src/core/object3d.js~Object3DContext",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/object3d",
    "importStyle": "{Object3DContext}",
    "description": "Object3DContext class that represents an injected regl context.",
    "see": [
      "{@link Object3D}",
      "{@link https://github.com/regl-project/regl}",
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#context}"
    ],
    "lineNumber": 156,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Object3DContext"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 249,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/object3d.js~Object3DContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/object3d.js~Object3DContext#constructor",
    "access": "public",
    "description": "Object3DContext class constructor.",
    "lineNumber": 167,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D render context."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 250,
    "kind": "member",
    "name": "id",
    "memberof": "src/core/object3d.js~Object3DContext",
    "static": false,
    "longname": "src/core/object3d.js~Object3DContext#id",
    "access": "public",
    "description": "Object3D instance ID.",
    "lineNumber": 220,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 251,
    "kind": "member",
    "name": "scale",
    "memberof": "src/core/object3d.js~Object3DContext",
    "static": false,
    "longname": "src/core/object3d.js~Object3DContext#scale",
    "access": "public",
    "description": "Object3D scale vector applied to local matrix.",
    "lineNumber": 232,
    "type": {
      "nullable": null,
      "types": [
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 252,
    "kind": "member",
    "name": "position",
    "memberof": "src/core/object3d.js~Object3DContext",
    "static": false,
    "longname": "src/core/object3d.js~Object3DContext#position",
    "access": "public",
    "description": "Object3D position vector that translates the\nlocal matrix.",
    "lineNumber": 249,
    "type": {
      "nullable": null,
      "types": [
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 253,
    "kind": "member",
    "name": "rotation",
    "memberof": "src/core/object3d.js~Object3DContext",
    "static": false,
    "longname": "src/core/object3d.js~Object3DContext#rotation",
    "access": "public",
    "description": "Object3D rotation quaternion.",
    "lineNumber": 261,
    "type": {
      "nullable": null,
      "types": [
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 254,
    "kind": "member",
    "name": "transform",
    "memberof": "src/core/object3d.js~Object3DContext",
    "static": false,
    "longname": "src/core/object3d.js~Object3DContext#transform",
    "access": "public",
    "description": "Object3D tranform matrix that is computed from positional\ncontext data such as position, rotation, and scale. If a\ntransform is given as an argument to the command then it is\napplied to the computed transform last.",
    "lineNumber": 276,
    "type": {
      "nullable": null,
      "types": [
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 255,
    "kind": "method",
    "name": "computeTransformMatrix",
    "memberof": "src/core/object3d.js~Object3DContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/object3d.js~Object3DContext#computeTransformMatrix",
    "access": "protected",
    "description": "Computes the transform matrix for the injected Object3D\ncontext derived from rotation, position, and scale data.",
    "lineNumber": 292,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{transform: Array}"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{transform: Array}"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 256,
    "kind": "method",
    "name": "computeLocalMatrix",
    "memberof": "src/core/object3d.js~Object3DContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/object3d.js~Object3DContext#computeLocalMatrix",
    "access": "protected",
    "description": "Computes the local matrix for the injected Object3D\ncontext derived from rotation, position, and scale data.",
    "lineNumber": 333,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{transform: Array}"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{transform: Array}"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 257,
    "kind": "file",
    "name": "src/core/stream.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { Command } from './command'\n\nimport { obj as through } from 'through2'\nimport coalesce from 'defined'\n\n/**\n * The Stream class represents a stateless transform stream.\n *\n * @public\n * @class Stream\n * @extends Command\n * @see {@link https://github.com/rvagg/through2}\n */\n\nexport class Stream extends Command {\n\n  /**\n   * Stream class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context object.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    super(update)\n\n    /**\n     * Stream regl context.\n     */\n\n    const {context = new StreamContext(ctx, initialState)} = initialState\n\n    /**\n     * Injects a stream regl context.\n     */\n\n    const injectContext = ctx.regl({context})\n\n    /**\n     * Command update function.\n     */\n\n    function update(state = {}, block) {\n      if (null != state.data && context && context.stream) {\n        context.stream.write(state.data, () => {\n          injectContext(state, block)\n        })\n      } else {\n        injectContext(state, block)\n      }\n\n      return this\n    }\n  }\n}\n\n/**\n * StreamContext class.\n *\n * @public\n * @class StreamContext\n */\n\nexport class StreamContext {\n\n  /**\n   * StreamContext class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context object.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n\n    /**\n     * Internal transform through stream.\n     */\n\n    const {stream = through(transform)} = initialState\n\n    /**\n     * Optional transform function.\n     */\n\n    const {transform: transformData} = initialState\n\n    /**\n     * Reference to last emitted data.\n     */\n\n    let data = null\n\n    stream.on('error', (err) => { ctx.emit('error', err) })\n\n    /**\n     * Internal stream context reference.\n     *\n     * @public\n     * @type {TransformStream}\n     */\n\n    this.stream = stream\n\n    /**\n     * Reference to the latest data emitted.\n     *\n     * @public\n     * @type {Mixed}\n     */\n\n    this.data = () => {\n      return {...data}\n    }\n\n    /**\n     * Transform stream callback\n     */\n\n    function transform(chunk, {}, done) {\n      if ('function' == typeof transformData) {\n        chunk = coalesce(transformData(chunk), chunk)\n      }\n\n      if (null != chunk) {\n        data = chunk\n        this.push(data)\n      }\n      done()\n    }\n  }\n}\n",
    "static": true,
    "longname": "src/core/stream.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 258,
    "kind": "class",
    "name": "Stream",
    "memberof": "src/core/stream.js",
    "static": true,
    "longname": "src/core/stream.js~Stream",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/stream",
    "importStyle": "{Stream}",
    "description": "The Stream class represents a stateless transform stream.",
    "see": [
      "{@link https://github.com/rvagg/through2}"
    ],
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Stream"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 259,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream.js~Stream#constructor",
    "access": "public",
    "description": "Stream class constructor.",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context object."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 260,
    "kind": "class",
    "name": "StreamContext",
    "memberof": "src/core/stream.js",
    "static": true,
    "longname": "src/core/stream.js~StreamContext",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/stream",
    "importStyle": "{StreamContext}",
    "description": "StreamContext class.",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "StreamContext"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 261,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/stream.js~StreamContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/stream.js~StreamContext#constructor",
    "access": "public",
    "description": "StreamContext class constructor.",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context object."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 262,
    "kind": "member",
    "name": "stream",
    "memberof": "src/core/stream.js~StreamContext",
    "static": false,
    "longname": "src/core/stream.js~StreamContext#stream",
    "access": "public",
    "description": "Internal stream context reference.",
    "lineNumber": 112,
    "type": {
      "nullable": null,
      "types": [
        "TransformStream"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 263,
    "kind": "member",
    "name": "data",
    "memberof": "src/core/stream.js~StreamContext",
    "static": false,
    "longname": "src/core/stream.js~StreamContext#data",
    "access": "public",
    "description": "Reference to the latest data emitted.",
    "lineNumber": 121,
    "type": {
      "nullable": null,
      "types": [
        "Mixed"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 264,
    "kind": "file",
    "name": "src/core/text.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { ExtrudeGeometry } from './extrude_geometry'\nimport { Object3D } from './object3d'\nimport { Command } from './command'\nimport { Mesh } from './mesh'\n\nimport vectorize from 'vectorize-text'\nimport coalesce from 'defined'\nimport unindex from 'unindex-mesh'\n\nconst kGeometryCache = {}\nconst kComplexCache = {}\nconst kMeshCache = {}\n\n/**\n * The Text class represents an interface for triangulating text strings\n * into a simplicial complex.\n *\n * @public\n * @class Text\n * @extends Command\n */\n\nexport class Text extends Command {\n\n  /**\n   * Text class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context object.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    super(update)\n\n    /**\n     * Injected regl context.\n     */\n\n    const {context = new TextContext(ctx, initialState)} = initialState\n\n    /**\n     * Injects a text regl context.\n     */\n\n    const injectContext = ctx.regl({context})\n\n    const object = new Object3D(ctx, {scale: [1, -1, 1]})\n\n    /**\n     * Command update function.\n     */\n\n    function update(state = {}, block) {\n      const mesh = getMesh(state)\n      object(() => {\n        injectContext(state || {}, (...args) => {\n          if ('function' == typeof mesh) {\n            mesh(state, block)\n          } else {\n            block(...args)\n          }\n        })\n      })\n\n      return this\n    }\n\n    /**\n     * Gets a cached mesh from input state.\n     */\n\n    function getMesh(state) {\n      if ('string' == typeof state) {\n        state = {text: state}\n      }\n\n      const {text} = state\n      const ID = 'object' == typeof state ? JSON.stringify(state) : null\n\n      let geometry = null\n      let complex = null\n      let mesh = null\n\n      if (\n        'string' == typeof text &&\n        'string' == typeof ID &&\n        'function' == typeof kMeshCache[ID]\n      ) {\n        mesh = kMeshCache[ID]\n      } else if ('string' == typeof ID) {\n        complex = vectorize(text, {\n          textBaseline: coalesce(state.baseline, 'hanging'),\n          orientation: 'ccw',\n          textAlign: coalesce(state.align, 'center'),\n          width: 1,\n          ...state,\n        })\n\n        const path = Array(10).fill([]).map((p, i) => [0, 0, 0.001*i])\n\n        geometry = new ExtrudeGeometry({...complex, path})\n        mesh = new Mesh(ctx, {geometry})\n\n        kComplexCache[ID] = complex\n        kGeometryCache[ID] = geometry\n        kMeshCache[ID] = mesh\n      }\n\n      return mesh\n    }\n  }\n}\n\n/**\n * TextContext class.\n *\n * @public\n * @class TextContext\n */\n\nexport class TextContext {\n\n  /**\n   * TextContext class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context object.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    this.text = ({}, args) => {\n      args = args || {}\n      return coalesce(args.text, initialState.text, null)\n    }\n  }\n}\n",
    "static": true,
    "longname": "src/core/text.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 265,
    "kind": "variable",
    "name": "kGeometryCache",
    "memberof": "src/core/text.js",
    "static": true,
    "longname": "src/core/text.js~kGeometryCache",
    "access": null,
    "export": false,
    "importPath": "axis3d/core/text",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 266,
    "kind": "variable",
    "name": "kComplexCache",
    "memberof": "src/core/text.js",
    "static": true,
    "longname": "src/core/text.js~kComplexCache",
    "access": null,
    "export": false,
    "importPath": "axis3d/core/text",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 267,
    "kind": "variable",
    "name": "kMeshCache",
    "memberof": "src/core/text.js",
    "static": true,
    "longname": "src/core/text.js~kMeshCache",
    "access": null,
    "export": false,
    "importPath": "axis3d/core/text",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 268,
    "kind": "class",
    "name": "Text",
    "memberof": "src/core/text.js",
    "static": true,
    "longname": "src/core/text.js~Text",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/text",
    "importStyle": "{Text}",
    "description": "The Text class represents an interface for triangulating text strings\ninto a simplicial complex.",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Text"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 269,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/text.js~Text",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/text.js~Text#constructor",
    "access": "public",
    "description": "Text class constructor.",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context object."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 270,
    "kind": "class",
    "name": "TextContext",
    "memberof": "src/core/text.js",
    "static": true,
    "longname": "src/core/text.js~TextContext",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/text",
    "importStyle": "{TextContext}",
    "description": "TextContext class.",
    "lineNumber": 129,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TextContext"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 271,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/text.js~TextContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/text.js~TextContext#constructor",
    "access": "public",
    "description": "TextContext class constructor.",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context object."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 272,
    "kind": "member",
    "name": "text",
    "memberof": "src/core/text.js~TextContext",
    "static": false,
    "longname": "src/core/text.js~TextContext#text",
    "access": null,
    "description": null,
    "lineNumber": 141,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 273,
    "kind": "file",
    "name": "src/core/texture.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { incrementStat } from '../stats'\nimport { Command } from './command'\nimport window from 'global/window'\n\n/**\n  * @virtual {HTMLVideoElement} https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement\n  */\n\nconst {HTMLVideoElement} = window\n\n/**\n  * @virtual {HTMLCanvasElement} https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement\n  */\n\nconst {HTMLCanvasElement} = window\n\n/**\n  * @virtual {HTMLImageElement} https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement\n  */\n\nconst {HTMLImageElement} = window\n\n// predicate helpers\nconst isCanvas = (d) => d instanceof HTMLCanvasElement\nconst isVideo = (d) => d instanceof HTMLVideoElement\nconst isImage = (d) => d instanceof HTMLImageElement\n\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/readyState\nconst {\n  HAVE_NOTHING = 0,\n  HAVE_METADATA = 1,\n  HAVE_CURRENT_DATA = 2,\n  HAVE_FUTURE_DATA = 3,\n  HAVE_ENOUGH_DATA = 4,\n} = HTMLVideoElement\n\n/**\n * Default underlying texture state.\n *\n * @public\n * @const\n * @type {Object}\n * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#textures}\n */\n\nexport const kDefaultTextureState = Object.seal({\n  min: 'linear',\n  mag: 'linear',\n})\n\n/**\n * A Texture class represents an interface wrapping, uploading,\n * data.\n * and manipulating 2D texture data such as image, video, and canvas\n *\n * @public\n * @class Texture\n * @extends Command\n * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#textures}\n */\n\nexport class Texture extends Command {\n\n  /**\n   * Texture class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    incrementStat('Texture')\n    super(update)\n\n    // texture state used for in place regl\n    // texture reinitialization\n    const textureState = new TextureState(ctx, initialState || {})\n\n    // injected texture context\n    const {\n      context = new TextureContext(ctx, textureState, initialState)\n    } = initialState\n\n    // regl context\n    const injectContext = ctx.regl({context})\n\n    // texture update function\n    function update(state, block) {\n      if ('function' == typeof state) {\n        block = state\n        state = {}\n      }\n\n      state = state || {}\n      block = block || function() {}\n\n      textureState.update({\n        ...initialState,\n        ...state,\n      })\n\n      // inject texture context exposing useful\n      // texture state variables\n      injectContext(block)\n\n      return this\n    }\n  }\n\n  /**\n   * A predicate helper function to determine if\n   * given data is ready for upload\n   *\n   * @public\n   * @static\n   * @method\n   * @param {Mixed} data\n   * @return {Boolean}\n   */\n\n  static isTextureDataReady(data) {\n    if (data && isVideo(data) && data.readyState >= HAVE_ENOUGH_DATA) {\n      return true\n    } else if (data && isImage(data) || isCanvas(data)) {\n      if (data.width && data.height) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * Helper function to return a 2d vector\n   * representing the texture data resolution.\n   *\n   * @public\n   * @static\n   * @method\n   * @param {TextureState} state\n   * @param {Mixed} data\n   * @return {Array<Number>|Vector2}\n   */\n\n  static getTextureDataResolution(state, data) {\n    if (isImage(data) || isCanvas(data)) {\n      return [data.width, data.height]\n    } else if (isVideo(data)) {\n      return [data.videoWidth || 0, data.videoHeight || 0]\n    } else if (data && data.shape) {\n      return data.shape\n    } else if (state.shape) {\n      return state.shape\n    } else if (state.width && state.height) {\n      return [state.width, state.height]\n    } else {\n      return [0, 0]\n    }\n  }\n}\n\n/**\n * TextureContext class.\n *\n * @public\n * @class TextureContext\n */\n\nexport class TextureContext {\n\n  /**\n   * TextureContext class constructor.\n   *\n   * @public\n   * @param {!Context} ctx Axis3D context.\n   * @param {!TextureState} textureState Required texture state.\n   * @param {?Object} initialState Optional initial context state.\n   */\n\n  constructor(ctx, textureState, initialState = {}) {\n    // protected properties\n    Object.defineProperties(this, {\n      data: {\n        enumerable: false,\n        get() { return textureState.data },\n      },\n\n      textureState: {\n        enumerable: false,\n        get() { return textureState }\n      },\n    })\n\n    /**\n     * Underlying resolution of the texture data.\n     *\n     * @public\n     * @type {Vector2|Array<Number>}\n     */\n\n    this.textureResolution = () => {\n      return Texture.getTextureDataResolution(textureState, textureState.data)\n    }\n\n    /**\n     * Underlying texture data.\n     *\n     * @public\n     * @type {HTMLImageElement|HTMLVideoElement|HTMLCanvasElement|TypedArray|Array|Mixed}\n     * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#textures}\n     */\n\n    this.textureData = () => {\n      return textureState.data\n    }\n\n    /**\n     * REGL texture pointer.\n     *\n     * @public\n     * @type {Function}\n     * @see {@link https://github.com/regl-project/regl/blob/gh-pages/API.md#texture-constructor}\n     */\n\n    this.texture = () => {\n      return textureState.texture\n    }\n  }\n}\n\n/**\n * TextureState class.\n *\n * @public\n * @class TextureState\n */\n\nexport class TextureState {\n\n  /**\n   * TextureState class constructor.\n   *\n   * @param {!Context} ctx Axis3D context.\n   * @param {!Object} initialState Required initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    Object.assign(this, {\n      ...kDefaultTextureState,\n      ...initialState,\n    })\n\n    /**\n     * Underlying texture pointer.\n     */\n\n    const texture = ctx.regl.texture({ ...this })\n\n    /**\n     * Texture state data stored as reference for injection\n     * into the regl conext.\n     */\n\n    let {data = null} = initialState\n\n    /**\n     * Timestamp of last known update of a video texture.\n     */\n\n    let lastVideoUpdate = 0\n\n    /**\n     * Previous raw texture data.\n     */\n\n    let previouslyUploadedData = null\n\n    // protected properties\n    Object.defineProperties(this, {\n      ctx: {\n        enumerable: false,\n        get() { return ctx },\n      },\n\n      data: {\n        enumerable: true,\n        get() { return data || null },\n        set(value) { data = value },\n      },\n\n      texture: {\n        enumerable: false,\n        get() { return texture },\n      },\n\n      lastVideoUpdate: {\n        enumerable: false,\n        set(value) { lastVideoUpdate = value },\n        get() { return lastVideoUpdate },\n      },\n\n      previouslyUploadedData: {\n        enumerable: false,\n        set(value) { previouslyUploadedData = value },\n        get() { return previouslyUploadedData },\n      },\n    })\n  }\n\n  /**\n   * Updates internal texture state. Returns true if the internal texture\n   * was updated, otherwise false.\n   *\n   * @public\n   * @method\n   * @param {Object} state\n   * @param {Object} state.data\n   * @return {Boolean}\n   * @throws TypeError\n   */\n\n  update({data = this.data} = {}) {\n    const now = this.ctx.regl.now()\n    let needsUpdate = false\n\n    if (Texture.isTextureDataReady(data)) {\n      if (isVideo(data) && data.readyState >= HAVE_CURRENT_DATA) {\n        needsUpdate = true\n        if (now - this.lastVideoUpdate >= 0.01) {\n          this.lastVideoUpdate = now\n        }\n      } else if (data != this.previouslyUploadedData) {\n        needsUpdate = true\n      }\n    }\n\n    if (needsUpdate) {\n      // computed texture data resolution\n      const resolution = Texture.getTextureDataResolution(this, data)\n      // mark for update if resolution is available and\n      // the previously uploaded texture data defers from\n      // the current input data\n      if (!(resolution[0] > 0 && resolution[1] > 0)) {\n        needsUpdate = false\n      }\n    }\n\n    // update regl rexture state and set\n    if (needsUpdate && data) {\n      this.data = data\n      this.previouslyUploadedData = data\n      // update underlying regl texture\n      if ('function' == typeof this.texture) {\n        this.texture(this)\n      } else {\n        throw new TypeError(\n        `TextureState expects .texture to be a function. `+\n        `Got ${typeof this.texture}.`)\n      }\n    }\n\n    return needsUpdate\n  }\n}\n",
    "static": true,
    "longname": "src/core/texture.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 274,
    "kind": "variable",
    "name": "HTMLVideoElement",
    "memberof": "src/core/texture.js",
    "static": true,
    "longname": "src/core/texture.js~HTMLVideoElement",
    "access": null,
    "export": false,
    "importPath": "axis3d/core/texture",
    "importStyle": null,
    "description": "",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@virtual",
        "tagValue": "{HTMLVideoElement} https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 275,
    "kind": "variable",
    "name": "HTMLCanvasElement",
    "memberof": "src/core/texture.js",
    "static": true,
    "longname": "src/core/texture.js~HTMLCanvasElement",
    "access": null,
    "export": false,
    "importPath": "axis3d/core/texture",
    "importStyle": null,
    "description": "",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@virtual",
        "tagValue": "{HTMLCanvasElement} https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 276,
    "kind": "variable",
    "name": "HTMLImageElement",
    "memberof": "src/core/texture.js",
    "static": true,
    "longname": "src/core/texture.js~HTMLImageElement",
    "access": null,
    "export": false,
    "importPath": "axis3d/core/texture",
    "importStyle": null,
    "description": "",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@virtual",
        "tagValue": "{HTMLImageElement} https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 277,
    "kind": "function",
    "name": "isCanvas",
    "memberof": "src/core/texture.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/texture.js~isCanvas",
    "access": null,
    "export": false,
    "importPath": "axis3d/core/texture",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 278,
    "kind": "function",
    "name": "isVideo",
    "memberof": "src/core/texture.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/texture.js~isVideo",
    "access": null,
    "export": false,
    "importPath": "axis3d/core/texture",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 279,
    "kind": "function",
    "name": "isImage",
    "memberof": "src/core/texture.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/texture.js~isImage",
    "access": null,
    "export": false,
    "importPath": "axis3d/core/texture",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 280,
    "kind": "variable",
    "name": "HAVE_NOTHING",
    "memberof": "src/core/texture.js",
    "static": true,
    "longname": "src/core/texture.js~HAVE_NOTHING",
    "access": null,
    "export": false,
    "importPath": "axis3d/core/texture",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 281,
    "kind": "variable",
    "name": "kDefaultTextureState",
    "memberof": "src/core/texture.js",
    "static": true,
    "longname": "src/core/texture.js~kDefaultTextureState",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/texture",
    "importStyle": "{kDefaultTextureState}",
    "description": "Default underlying texture state.",
    "see": [
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#textures}"
    ],
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 282,
    "kind": "class",
    "name": "Texture",
    "memberof": "src/core/texture.js",
    "static": true,
    "longname": "src/core/texture.js~Texture",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/texture",
    "importStyle": "{Texture}",
    "description": "A Texture class represents an interface wrapping, uploading,\ndata.\nand manipulating 2D texture data such as image, video, and canvas",
    "see": [
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#textures}"
    ],
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Texture"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 283,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/texture.js~Texture",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/texture.js~Texture#constructor",
    "access": "public",
    "description": "Texture class constructor.",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 284,
    "kind": "method",
    "name": "isTextureDataReady",
    "memberof": "src/core/texture.js~Texture",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/texture.js~Texture.isTextureDataReady",
    "access": "public",
    "description": "A predicate helper function to determine if\ngiven data is ready for upload",
    "lineNumber": 129,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Mixed"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "getTextureDataResolution",
    "memberof": "src/core/texture.js~Texture",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/texture.js~Texture.getTextureDataResolution",
    "access": "public",
    "description": "Helper function to return a 2d vector\nrepresenting the texture data resolution.",
    "lineNumber": 152,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "TextureState"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Mixed"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<Number>",
        "Vector2"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 286,
    "kind": "class",
    "name": "TextureContext",
    "memberof": "src/core/texture.js",
    "static": true,
    "longname": "src/core/texture.js~TextureContext",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/texture",
    "importStyle": "{TextureContext}",
    "description": "TextureContext class.",
    "lineNumber": 176,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TextureContext"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 287,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/texture.js~TextureContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/texture.js~TextureContext#constructor",
    "access": "public",
    "description": "TextureContext class constructor.",
    "lineNumber": 187,
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": false,
        "types": [
          "TextureState"
        ],
        "spread": false,
        "optional": false,
        "name": "textureState",
        "description": "Required texture state."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial context state."
      }
    ]
  },
  {
    "__docId__": 288,
    "kind": "member",
    "name": "textureResolution",
    "memberof": "src/core/texture.js~TextureContext",
    "static": false,
    "longname": "src/core/texture.js~TextureContext#textureResolution",
    "access": "public",
    "description": "Underlying resolution of the texture data.",
    "lineNumber": 208,
    "type": {
      "nullable": null,
      "types": [
        "Vector2",
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 289,
    "kind": "member",
    "name": "textureData",
    "memberof": "src/core/texture.js~TextureContext",
    "static": false,
    "longname": "src/core/texture.js~TextureContext#textureData",
    "access": "public",
    "description": "Underlying texture data.",
    "see": [
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#textures}"
    ],
    "lineNumber": 220,
    "type": {
      "nullable": null,
      "types": [
        "HTMLImageElement",
        "HTMLVideoElement",
        "HTMLCanvasElement",
        "TypedArray",
        "Array",
        "Mixed"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 290,
    "kind": "member",
    "name": "texture",
    "memberof": "src/core/texture.js~TextureContext",
    "static": false,
    "longname": "src/core/texture.js~TextureContext#texture",
    "access": "public",
    "description": "REGL texture pointer.",
    "see": [
      "{@link https://github.com/regl-project/regl/blob/gh-pages/API.md#texture-constructor}"
    ],
    "lineNumber": 232,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 291,
    "kind": "class",
    "name": "TextureState",
    "memberof": "src/core/texture.js",
    "static": true,
    "longname": "src/core/texture.js~TextureState",
    "access": "public",
    "export": true,
    "importPath": "axis3d/core/texture",
    "importStyle": "{TextureState}",
    "description": "TextureState class.",
    "lineNumber": 245,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TextureState"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 292,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/texture.js~TextureState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/texture.js~TextureState#constructor",
    "access": null,
    "description": "TextureState class constructor.",
    "lineNumber": 254,
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Required initial state."
      }
    ]
  },
  {
    "__docId__": 293,
    "kind": "method",
    "name": "update",
    "memberof": "src/core/texture.js~TextureState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/texture.js~TextureState#update",
    "access": "public",
    "description": "Updates internal texture state. Returns true if the internal texture\nwas updated, otherwise false.",
    "lineNumber": 329,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state.data",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "TypeError"
      }
    ]
  },
  {
    "__docId__": 294,
    "kind": "member",
    "name": "lastVideoUpdate",
    "memberof": "src/core/texture.js~TextureState",
    "static": false,
    "longname": "src/core/texture.js~TextureState#lastVideoUpdate",
    "access": null,
    "description": null,
    "lineNumber": 337,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 295,
    "kind": "member",
    "name": "data",
    "memberof": "src/core/texture.js~TextureState",
    "static": false,
    "longname": "src/core/texture.js~TextureState#data",
    "access": null,
    "description": null,
    "lineNumber": 357,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 296,
    "kind": "member",
    "name": "previouslyUploadedData",
    "memberof": "src/core/texture.js~TextureState",
    "static": false,
    "longname": "src/core/texture.js~TextureState#previouslyUploadedData",
    "access": null,
    "description": null,
    "lineNumber": 358,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 297,
    "kind": "file",
    "name": "src/geometry/box.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport PrimitiveCube from 'primitive-cube'\nimport { Geometry } from '../core/geometry'\n\n/**\n * BoxGeometry class.\n *\n * @public\n * @class BoxGeometry\n * @extends Geometry\n * @see {@link https://github.com/gregtatum/geo-3d-box}\n */\n\nexport class BoxGeometry extends Geometry {\n\n  /**\n   * BoxGeometry class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {?Object} opts Class constructor options.\n   * @param {?Number} opts.x Size along the x axis.\n   * @param {?Number} opts.y Size along the y axis.\n   * @param {?Number} opts.z Size along the z axis.\n   * @param {?Object|Number} opts.segments Number of subdivision segments.\n   * @param {?Number} opts.segments.x Number of x axis subdivision segments.\n   * @param {?Number} opts.segments.y Number of y axis subdivision segments.\n   * @param {?Number} opts.segments.z Number of z axis subdivision segments.\n   *\n   * @see {@link https://www.npmjs.com/package/primitive-cube}\n   */\n\n  constructor({x = 1, y = 1, z = 1, segments = 1} = {}) {\n    if (null == arguments[0]) {\n      x = 1, y = 1, z = 1\n      segments = 1\n    }\n\n    if ('number' == typeof segments) {\n      segments = {x: segments, y: segments, z: segments}\n    }\n\n    super({\n      complex: PrimitiveCube(x, y, z, segments.x, segments.y, segments.z)\n    })\n\n    this.size = {x, y, z}\n    this.segments = segments\n  }\n}\n",
    "static": true,
    "longname": "src/geometry/box.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 298,
    "kind": "class",
    "name": "BoxGeometry",
    "memberof": "src/geometry/box.js",
    "static": true,
    "longname": "src/geometry/box.js~BoxGeometry",
    "access": "public",
    "export": true,
    "importPath": "axis3d/geometry/box",
    "importStyle": "{BoxGeometry}",
    "description": "BoxGeometry class.",
    "see": [
      "{@link https://github.com/gregtatum/geo-3d-box}"
    ],
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "BoxGeometry"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 299,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/geometry/box.js~BoxGeometry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/box.js~BoxGeometry#constructor",
    "access": "public",
    "description": "BoxGeometry class constructor.",
    "see": [
      "{@link https://www.npmjs.com/package/primitive-cube}"
    ],
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": "Class constructor options."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.x",
        "description": "Size along the x axis."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.y",
        "description": "Size along the y axis."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.z",
        "description": "Size along the z axis."
      },
      {
        "nullable": true,
        "types": [
          "Object",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.segments",
        "description": "Number of subdivision segments."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.segments.x",
        "description": "Number of x axis subdivision segments."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.segments.y",
        "description": "Number of y axis subdivision segments."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.segments.z",
        "description": "Number of z axis subdivision segments."
      }
    ]
  },
  {
    "__docId__": 300,
    "kind": "member",
    "name": "size",
    "memberof": "src/geometry/box.js~BoxGeometry",
    "static": false,
    "longname": "src/geometry/box.js~BoxGeometry#size",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"x\": *, \"y\": *, \"z\": *}"
      ]
    }
  },
  {
    "__docId__": 301,
    "kind": "member",
    "name": "segments",
    "memberof": "src/geometry/box.js~BoxGeometry",
    "static": false,
    "longname": "src/geometry/box.js~BoxGeometry#segments",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 302,
    "kind": "file",
    "name": "src/geometry/capsule.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport PrimitiveCapsule from 'primitive-capsule'\nimport { Geometry } from '../core/geometry'\n\n/**\n * CapsuleGeometry class.\n *\n * @public\n * @class CapsuleGeometry\n * @extends Geometry\n * @see {@link https://github.com/vorg/primitive-capsule}\n */\n\nexport class CapsuleGeometry extends Geometry {\n\n  /**\n   * CapsuleGeometry class constructor.\n   *\n   * @public\n   * @constructor\n   * @see {@link https://github.com/vorg/primitive-capsule}\n   * @param {?Object} opts Class constructor options.\n   * @param {?Number} opts.radius Geometry radius. Defaults to 1.\n   * @param {?Number} opts.height Geometry height. Defaults to 0.5.\n   * @param {?Number} opts.segments A number indicating the number of geometry\n   *                                segments. Defaults to 12.\n   * @param {?Number} opts.resolution Geometry resolution. Defaults to 12.\n   */\n\n  constructor({\n    radius = 1,\n    height = 0.5,\n    segments = 12,\n    resolution = 24,\n  } = {}) {\n    super({\n      complex: PrimitiveCapsule(radius, height, resolution, segments)\n    })\n  }\n}\n",
    "static": true,
    "longname": "src/geometry/capsule.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 303,
    "kind": "class",
    "name": "CapsuleGeometry",
    "memberof": "src/geometry/capsule.js",
    "static": true,
    "longname": "src/geometry/capsule.js~CapsuleGeometry",
    "access": "public",
    "export": true,
    "importPath": "axis3d/geometry/capsule",
    "importStyle": "{CapsuleGeometry}",
    "description": "CapsuleGeometry class.",
    "see": [
      "{@link https://github.com/vorg/primitive-capsule}"
    ],
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CapsuleGeometry"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 304,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/geometry/capsule.js~CapsuleGeometry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/capsule.js~CapsuleGeometry#constructor",
    "access": "public",
    "description": "CapsuleGeometry class constructor.",
    "see": [
      "{@link https://github.com/vorg/primitive-capsule}"
    ],
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": "Class constructor options."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.radius",
        "description": "Geometry radius. Defaults to 1."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.height",
        "description": "Geometry height. Defaults to 0.5."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.segments",
        "description": "A number indicating the number of geometry\n                               segments. Defaults to 12."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.resolution",
        "description": "Geometry resolution. Defaults to 12."
      }
    ]
  },
  {
    "__docId__": 305,
    "kind": "file",
    "name": "src/geometry/cylinder.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport PrimitiveCylinder from 'primitive-cylinder'\nimport { Geometry } from '../core/geometry'\n\n/**\n * CapsuleGeometry class.\n *\n * @public\n * @class CapsuleGeometry\n * @extends Geometry\n * @see {@link https://github.com/ataber/primitive-cylinder}\n */\n\nexport class CylinderGeometry extends Geometry {\n\n  /**\n   * CapsuleGeometry class constructor.\n   *\n   * @public\n   * @constructor\n   * @see {@link https://github.com/vorg/primitive-capsule}\n   * @param {?Object} opts Class constructor options.\n   * @param {?Number} radiusTop The radius of the cylinder at the top.\n   * @param {?Number} radiusBottom The radius of the cylinder at the bottom.\n   * @param {?Number} height The height of the cylinder.\n   * @param {?Number} radialSegments The number of segments for the radial axis.\n   * @param {?Number} heightSegments The number of segments for the height axis.\n   */\n\n  constructor({\n    height = 5,\n    radiusTop = 1,\n    radiusBottom = 1,\n    radialSegments = 50,\n    heightSegments = 50,\n  } = {}) {\n    super({\n      complex: PrimitiveCylinder(\n        radiusTop,\n        radiusBottom,\n        height,\n        radialSegments,\n        heightSegments),\n    })\n    this.height = height\n    this.radiusTop = radiusTop\n    this.radiusBottom = radiusBottom\n    this.radialSegments = radialSegments\n    this.heightSegments = heightSegments\n  }\n}\n",
    "static": true,
    "longname": "src/geometry/cylinder.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 306,
    "kind": "class",
    "name": "CylinderGeometry",
    "memberof": "src/geometry/cylinder.js",
    "static": true,
    "longname": "src/geometry/cylinder.js~CylinderGeometry",
    "access": "public",
    "export": true,
    "importPath": "axis3d/geometry/cylinder",
    "importStyle": "{CylinderGeometry}",
    "description": "CapsuleGeometry class.",
    "see": [
      "{@link https://github.com/ataber/primitive-cylinder}"
    ],
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CapsuleGeometry"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 307,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/geometry/cylinder.js~CylinderGeometry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/cylinder.js~CylinderGeometry#constructor",
    "access": "public",
    "description": "CapsuleGeometry class constructor.",
    "see": [
      "{@link https://github.com/vorg/primitive-capsule}"
    ],
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": "Class constructor options."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "radiusTop",
        "description": "The radius of the cylinder at the top."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "radiusBottom",
        "description": "The radius of the cylinder at the bottom."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": "The height of the cylinder."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "radialSegments",
        "description": "The number of segments for the radial axis."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "heightSegments",
        "description": "The number of segments for the height axis."
      }
    ]
  },
  {
    "__docId__": 308,
    "kind": "member",
    "name": "height",
    "memberof": "src/geometry/cylinder.js~CylinderGeometry",
    "static": false,
    "longname": "src/geometry/cylinder.js~CylinderGeometry#height",
    "access": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 309,
    "kind": "member",
    "name": "radiusTop",
    "memberof": "src/geometry/cylinder.js~CylinderGeometry",
    "static": false,
    "longname": "src/geometry/cylinder.js~CylinderGeometry#radiusTop",
    "access": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 310,
    "kind": "member",
    "name": "radiusBottom",
    "memberof": "src/geometry/cylinder.js~CylinderGeometry",
    "static": false,
    "longname": "src/geometry/cylinder.js~CylinderGeometry#radiusBottom",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 311,
    "kind": "member",
    "name": "radialSegments",
    "memberof": "src/geometry/cylinder.js~CylinderGeometry",
    "static": false,
    "longname": "src/geometry/cylinder.js~CylinderGeometry#radialSegments",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 312,
    "kind": "member",
    "name": "heightSegments",
    "memberof": "src/geometry/cylinder.js~CylinderGeometry",
    "static": false,
    "longname": "src/geometry/cylinder.js~CylinderGeometry#heightSegments",
    "access": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 313,
    "kind": "file",
    "name": "src/geometry/index.js",
    "content": "'use strict'\n\n/**\n * Module exports.\n */\n\nexport { TriangleGeometry } from './triangle'\nexport { CylinderGeometry } from './cylinder'\nexport { CapsuleGeometry } from './capsule'\nexport { SphereGeometry } from './sphere'\nexport { PlaneGeometry } from './plane'\nexport { TorusGeometry } from './torus'\nexport { BoxGeometry } from './box'\n",
    "static": true,
    "longname": "src/geometry/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 314,
    "kind": "file",
    "name": "src/geometry/plane.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport PrimitivePlane from 'primitive-plane'\nimport { Geometry } from '../core/geometry'\n\n/**\n * PlaneGeometry class.\n *\n * @public\n * @class PlaneGeometry\n * @extends Geometry\n */\n\nexport class PlaneGeometry extends Geometry {\n\n  /**\n   * PlaneGeometry class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {?Object} opts\n   * @param {?Object|Number} opts.size\n   * @param {?Number} opts.size.x\n   * @param {?Number} opts.size.y\n   * @param {?Object|Number} opts.segments\n   * @param {?Number} opts.segments.x\n   * @param {?Number} opts.segments.y\n   * @param {?Boolean} opts.quads\n   *\n   * @see {@link https://www.npmjs.com/package/primitive-plane}\n   */\n\n  constructor({\n    size = {x: 1, y: 1},\n    segments = {x: 5, y: 5},\n    quads = false,\n  } = {}) {\n    if ('number' == typeof segments) {\n      segments = {x: segments, y: segments}\n    }\n\n    if ('number' == typeof size) {\n      size = {x: size, y: size}\n    }\n\n    super({\n      complex: PrimitivePlane(\n        size.x, size.y,\n        segments.x, segments.y,\n        {quads}\n      )\n    })\n\n    this.size = size\n    this.quads = quads\n    this.segments = segments\n  }\n}\n",
    "static": true,
    "longname": "src/geometry/plane.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 315,
    "kind": "class",
    "name": "PlaneGeometry",
    "memberof": "src/geometry/plane.js",
    "static": true,
    "longname": "src/geometry/plane.js~PlaneGeometry",
    "access": "public",
    "export": true,
    "importPath": "axis3d/geometry/plane",
    "importStyle": "{PlaneGeometry}",
    "description": "PlaneGeometry class.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PlaneGeometry"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 316,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/geometry/plane.js~PlaneGeometry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/plane.js~PlaneGeometry#constructor",
    "access": "public",
    "description": "PlaneGeometry class constructor.",
    "see": [
      "{@link https://www.npmjs.com/package/primitive-plane}"
    ],
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Object",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.size",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.size.x",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.size.y",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Object",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.segments",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.segments.x",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.segments.y",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.quads",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 317,
    "kind": "member",
    "name": "size",
    "memberof": "src/geometry/plane.js~PlaneGeometry",
    "static": false,
    "longname": "src/geometry/plane.js~PlaneGeometry#size",
    "access": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 318,
    "kind": "member",
    "name": "quads",
    "memberof": "src/geometry/plane.js~PlaneGeometry",
    "static": false,
    "longname": "src/geometry/plane.js~PlaneGeometry#quads",
    "access": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 319,
    "kind": "member",
    "name": "segments",
    "memberof": "src/geometry/plane.js~PlaneGeometry",
    "static": false,
    "longname": "src/geometry/plane.js~PlaneGeometry#segments",
    "access": null,
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 320,
    "kind": "file",
    "name": "src/geometry/sphere.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport PrimitiveSphere from 'primitive-sphere'\nimport { Geometry } from '../core/geometry'\n\n/**\n * SphereGeometry class.\n *\n * @public\n * @class SphereGeometry\n * @extends Geometry\n * @see {@link https://github.com/glo-js/primitive-sphere}\n */\n\nexport class SphereGeometry extends Geometry {\n\n  /**\n   * SphereGeometry class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {?Object} opts Class constructor options.\n   * @param {?Number} opts.radius SphereGeometry radius.\n   * @param {?Number} opts.segments SphereGeometry subdivision segments.\n   */\n\n  constructor({radius = 1, segments = 32} = {}) {\n    super({complex: PrimitiveSphere(radius, {segments})})\n    this.radius = radius\n    this.segments = segments\n  }\n}\n",
    "static": true,
    "longname": "src/geometry/sphere.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 321,
    "kind": "class",
    "name": "SphereGeometry",
    "memberof": "src/geometry/sphere.js",
    "static": true,
    "longname": "src/geometry/sphere.js~SphereGeometry",
    "access": "public",
    "export": true,
    "importPath": "axis3d/geometry/sphere",
    "importStyle": "{SphereGeometry}",
    "description": "SphereGeometry class.",
    "see": [
      "{@link https://github.com/glo-js/primitive-sphere}"
    ],
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SphereGeometry"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 322,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/geometry/sphere.js~SphereGeometry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/sphere.js~SphereGeometry#constructor",
    "access": "public",
    "description": "SphereGeometry class constructor.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": "Class constructor options."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.radius",
        "description": "SphereGeometry radius."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.segments",
        "description": "SphereGeometry subdivision segments."
      }
    ]
  },
  {
    "__docId__": 323,
    "kind": "member",
    "name": "radius",
    "memberof": "src/geometry/sphere.js~SphereGeometry",
    "static": false,
    "longname": "src/geometry/sphere.js~SphereGeometry#radius",
    "access": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 324,
    "kind": "member",
    "name": "segments",
    "memberof": "src/geometry/sphere.js~SphereGeometry",
    "static": false,
    "longname": "src/geometry/sphere.js~SphereGeometry#segments",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 325,
    "kind": "file",
    "name": "src/geometry/torus.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport PrimitiveTorus from 'primitive-torus'\nimport { Geometry } from '../core/geometry'\n\n/**\n * TorusGeometry class.\n *\n * @public\n * @class TorusGeometry\n * @extends Geometry\n * @see {@link https://github.com/glo-js/primitive-torus}\n */\n\nexport class TorusGeometry extends Geometry {\n\n  /**\n   * TorusGeometry class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {?Object} opts Class constructor options.\n   * @param {?Number} opts.majorRadius The radius of the major ring R.\n   * @param {?Number} opts.minorRadius The radius of the minor ring r.\n   * @param {?Number} opts.majorSegments The number of segments for the major ring.\n   * @param {?Number} opts.minorSegments The number of segments for the minor ring.\n   * @param {?Number} opts.arc The arc to draw.\n   */\n\n  constructor({\n    majorSegments = 32,\n    minorSegments = 64,\n    majorRadius = 1,\n    minorRadius = 0.5,\n    arc = 2*Math.PI,\n  } = {}) {\n    super({\n      complex: PrimitiveTorus({\n        majorSegments, minorSegments,\n        majorRadius, minorSegments,\n        arc,\n      }),\n    })\n\n    this.majorSegments = majorSegments\n    this.minorSegments = minorSegments\n    this.majorRadius = majorRadius\n    this.minorRadius = minorRadius\n    this.arc = arc\n  }\n}\n",
    "static": true,
    "longname": "src/geometry/torus.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 326,
    "kind": "class",
    "name": "TorusGeometry",
    "memberof": "src/geometry/torus.js",
    "static": true,
    "longname": "src/geometry/torus.js~TorusGeometry",
    "access": "public",
    "export": true,
    "importPath": "axis3d/geometry/torus",
    "importStyle": "{TorusGeometry}",
    "description": "TorusGeometry class.",
    "see": [
      "{@link https://github.com/glo-js/primitive-torus}"
    ],
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TorusGeometry"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 327,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/geometry/torus.js~TorusGeometry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/torus.js~TorusGeometry#constructor",
    "access": "public",
    "description": "TorusGeometry class constructor.",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": "Class constructor options."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.majorRadius",
        "description": "The radius of the major ring R."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.minorRadius",
        "description": "The radius of the minor ring r."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.majorSegments",
        "description": "The number of segments for the major ring."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.minorSegments",
        "description": "The number of segments for the minor ring."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.arc",
        "description": "The arc to draw."
      }
    ]
  },
  {
    "__docId__": 328,
    "kind": "member",
    "name": "majorSegments",
    "memberof": "src/geometry/torus.js~TorusGeometry",
    "static": false,
    "longname": "src/geometry/torus.js~TorusGeometry#majorSegments",
    "access": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 329,
    "kind": "member",
    "name": "minorSegments",
    "memberof": "src/geometry/torus.js~TorusGeometry",
    "static": false,
    "longname": "src/geometry/torus.js~TorusGeometry#minorSegments",
    "access": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 330,
    "kind": "member",
    "name": "majorRadius",
    "memberof": "src/geometry/torus.js~TorusGeometry",
    "static": false,
    "longname": "src/geometry/torus.js~TorusGeometry#majorRadius",
    "access": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 331,
    "kind": "member",
    "name": "minorRadius",
    "memberof": "src/geometry/torus.js~TorusGeometry",
    "static": false,
    "longname": "src/geometry/torus.js~TorusGeometry#minorRadius",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 332,
    "kind": "member",
    "name": "arc",
    "memberof": "src/geometry/torus.js~TorusGeometry",
    "static": false,
    "longname": "src/geometry/torus.js~TorusGeometry#arc",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 333,
    "kind": "file",
    "name": "src/geometry/triangle.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { Geometry } from '../core/geometry'\n\n\n/**\n * TriangleGeometry class.\n *\n * @public\n * @class TriangleGeometry\n * @extends Geometry\n */\n\nexport class TriangleGeometry extends Geometry {\n\n  /**\n   * TriangleGeometry class constructor.\n   *\n   * @public\n   * @constructor\n   */\n\n  constructor() {\n    super({\n      complex: {\n        positions: [\n          [-1.0, -0.5*Math.sqrt(3), +0.0],\n          [+1.0, -0.5*Math.sqrt(3), +0.0],\n          [+0.0, +0.5*Math.sqrt(3), +0.0],\n        ],\n\n        normals: [\n          [-1.0, -1.0, +0.0],\n          [+1.0, -1.0, +0.0],\n          [+0.0, +1.0, +0.0],\n        ],\n\n        uvs: [\n          [-1.0, -0.5*Math.sqrt(3)],\n          [+1.0, -0.5*Math.sqrt(3)],\n          [+0.0, +0.5*Math.sqrt(3)],\n        ],\n      }\n    })\n  }\n}\n",
    "static": true,
    "longname": "src/geometry/triangle.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 334,
    "kind": "class",
    "name": "TriangleGeometry",
    "memberof": "src/geometry/triangle.js",
    "static": true,
    "longname": "src/geometry/triangle.js~TriangleGeometry",
    "access": "public",
    "export": true,
    "importPath": "axis3d/geometry/triangle",
    "importStyle": "{TriangleGeometry}",
    "description": "TriangleGeometry class.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TriangleGeometry"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 335,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/geometry/triangle.js~TriangleGeometry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/triangle.js~TriangleGeometry#constructor",
    "access": "public",
    "description": "TriangleGeometry class constructor.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 336,
    "kind": "file",
    "name": "src/index.js",
    "content": "'use strict'\n\n/**\n * Module exports.\n */\n\nimport * as core from './core'\nimport * as mesh from './mesh'\nimport * as math from './math'\nimport * as input from './input'\nimport * as light from './light'\nimport * as cameras from './cameras'\nimport * as material from './material'\nimport * as geometry from './geometry'\n\n/**\n * Library API\n * @ignore\n */\n\nvoid [\n  core,\n  mesh,\n  math,\n  input,\n  light,\n  cameras,\n  material,\n  geometry,\n].forEach(makeAPI)\n\n/**\n * Converts classes into functional units, otherwise module exports\n * are just proxied.\n * @private\n */\n\nfunction makeAPI(mod) {\n  // Make every class callable as a function\n  for (const key in mod) {\n    if ('function' == typeof mod[key]) {\n      Object.defineProperty(exports, key, {\n        get: () => (...args) => new mod[key](...args)\n      })\n    } else {\n      Object.defineProperty(exports, key, {get: () => mod[key]})\n    }\n  }\n}\n",
    "static": true,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 337,
    "kind": "function",
    "name": "makeAPI",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~makeAPI",
    "access": "private",
    "export": false,
    "importPath": "axis3d/index",
    "importStyle": null,
    "description": "Converts classes into functional units, otherwise module exports\nare just proxied.",
    "lineNumber": 38,
    "params": [
      {
        "name": "mod",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 338,
    "kind": "file",
    "name": "src/input/index.js",
    "content": "'use strict'\n\n/**\n * Module exports.\n */\n\nexport { OrientationInput } from './orientation'\nexport { KeyboardInput } from './keyboard'\nexport { MouseInput } from './mouse'\nexport { TouchInput } from './touch'\n",
    "static": true,
    "longname": "src/input/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 339,
    "kind": "file",
    "name": "src/input/keyboard.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { registerStat } from '../stats'\nimport { Command } from '../core/command'\nimport keycode from 'keycode'\nimport events from 'dom-events'\n\n/**\n * The KeyboardInput class represents a stateless interface for capturing\n * keyboard state for a given context.\n *\n * @public\n * @class KeyboardInput\n * @extends Command\n * @see Command\n */\n\nexport class KeyboardInput extends Command {\n\n  /**\n   * KeyboardInput class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {Context} ctx Axis3D context object.\n   * @param {?Object} opts Constructor options.\n   */\n\n  constructor(ctx, opts = {}) {\n    registerStat('KeyboardInput')\n    super(update)\n\n    const keycodes = {}\n    const keys = {}\n\n    // update keydown states\n    events.on(document, 'keydown', onkeydown, false)\n\n    // update keyup states\n    events.on(document, 'keyup', onkeyup, false)\n\n    // reset keyboard state when context blurs\n    ctx.on('blur', oncontextblur)\n\n    // unbind event handlers when context is\n    // destroyed\n    ctx.once('destroy', () => {\n      ctx.off('blur', oncontextblur)\n      events.off(document, 'keydown', onkeydown)\n      events.off(document, 'keyup', onkeyup)\n    })\n\n    /**\n     * Handle contest blur\n     *\n     * @private\n     * @function\n     */\n\n    function oncontextblur() {\n      reset()\n    }\n\n    /**\n     * Handles keydown events.\n     *\n     * @private\n     * @function\n     * @param {Event} e\n     */\n\n    function onkeydown(e) {\n      if (ctx.hasFocus) {\n        const code = e.which || e.keyCode || e.charCode\n        if (null != code) {\n          // set key code\n          keycodes[code] = true\n          // set key name\n          keys[keycode(code)] = true\n        }\n      }\n    }\n\n    /**\n     * Handles keyup events.\n     *\n     * @private\n     * @function\n     * @param {Event} e\n     */\n\n    function onkeyup(e) {\n      const code = e.which || e.keyCode || e.charCode\n      if (ctx.hasFocus) {\n        if (null != code) {\n          // set key code\n          keycodes[code] = false\n          // set key name\n          keys[keycode(code)] = false\n        }\n      }\n    }\n\n    /**\n     * Keyboard command update function.\n     *\n     * @private\n     * @function\n     * @name update\n     * @implements Command\n     * @param {?Object} state Input state\n     * @param {?Function} block Block scope\n     * @see Command\n     */\n\n    function update(state, block) {\n      // ensure correct values\n      if ('function' == typeof state) {\n        block = state\n        state = {}\n      }\n\n      // ensure object\n      state = 'object' == typeof state && state ? state : {}\n\n      // ensure function\n      block = 'function' == typeof block ? block : function() {}\n\n      block({\n        ...state,\n        keycodes,\n        keys\n      })\n    }\n\n    /**\n     * Resets keyboard state.\n     *\n     * @private\n     * @function\n     */\n\n    function reset() {\n      for (let code in keycodes) {\n        keycodes[code] = false\n      }\n\n      for (let key in keys) {\n        keys[key] = false\n      }\n    }\n  }\n}\n",
    "static": true,
    "longname": "src/input/keyboard.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 340,
    "kind": "class",
    "name": "KeyboardInput",
    "memberof": "src/input/keyboard.js",
    "static": true,
    "longname": "src/input/keyboard.js~KeyboardInput",
    "access": "public",
    "export": true,
    "importPath": "axis3d/input/keyboard",
    "importStyle": "{KeyboardInput}",
    "description": "The KeyboardInput class represents a stateless interface for capturing\nkeyboard state for a given context.",
    "see": [
      "Command"
    ],
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "KeyboardInput"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 341,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/input/keyboard.js~KeyboardInput",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/input/keyboard.js~KeyboardInput#constructor",
    "access": "public",
    "description": "KeyboardInput class constructor.",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context object."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": "Constructor options."
      }
    ]
  },
  {
    "__docId__": 342,
    "kind": "file",
    "name": "src/input/mouse.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { registerStat } from '../stats'\nimport { Command } from '../core/command'\n\nimport onMouseChange from 'mouse-change'\nimport onMouseWheel from 'mouse-wheel'\nimport coalesce from 'defined'\nimport events from 'dom-events'\nimport raf from 'raf'\n\n/**\n * The MouseInput class represents a stateless interface for capturing\n * mouse state for a given context.\n *\n * @public\n * @class MouseInput\n * @extends Command\n * @see Command\n */\n\nexport class MouseInput extends Command {\n\n  /**\n   * MouseInput class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {Context} ctx Axis3D context object.\n   * @param {?Object} opts Constructor options.\n   * @param {?Boolean} opts.allowWheel Indicates if wheel should be ignored.\n   */\n\n  constructor(ctx, {allowWheel = true} = {}) {\n    registerStat('MouseInput')\n\n    // set update function\n    super(update)\n\n    /**\n     * Encapsulated mouse wheel state.\n     *\n     * @private\n     * @type {Object}\n     * @property {Number} currentX\n     * @property {Number} currentY\n     * @property {Number} deltaX\n     * @property {Number} deltaY\n     * @property {Number} prevX\n     * @property {Number} prevY\n     */\n\n    const wheel = {\n      currentX: 0, currentY: 0,\n      deltaX: 0, deltaY: 0,\n      prevX: 0, prevY: 0,\n    }\n\n    /**\n     * Encapsulated mouse coordinate and\n     * button state.\n     *\n     * @private\n     * @type {Object}\n     * @property {Number} buttons\n     * @property {Number} currentX\n     * @property {Number} currentY\n     * @property {Number} deltaX\n     * @property {Number} deltaY\n     * @property {Number} prevX\n     * @property {Number} prevY\n     */\n\n    const mouse = {\n      buttons: 0,\n      currentX: 0,\n      currentY: 0,\n      deltaX: 0,\n      deltaY: 0,\n      prevX: 0,\n      prevY: 0,\n    }\n\n    // unset buttons when context loses focus\n    ctx.on('blur', () => { mouse.buttons = 0 })\n\n    // update state on mouse change and reset\n    // delta values on next animation frame\n    const mouseChangeListener = onMouseChange(ctx.domElement, onmousechange)\n\n    // update mouse wheel deltas and then\n    // reset them on the next animation frame\n    const mouseWheelListener = onMouseWheel(ctx.domElement, onmousewheel)\n\n    // remove listeners when context is destroyed\n    ctx.once('destroy', () => {\n      mouseChangeListener.enabled = false\n      events.off(ctx.domElement, mouseWheelListener)\n    })\n\n    /**\n     * Handles mouse change events\n     *\n     * @private\n     * @function\n     * @see {@link https://github.com/mikolalysenko/mouse-change}\n     */\n\n    function onmousechange(b, x, y) {\n      synchronizeMouse(b, x, y)\n    }\n\n    /**\n     * Handles mouse wheel events\n     *\n     * @private\n     * @function\n     * @see {@link https://github.com/mikolalysenko/mouse-wheel}\n     */\n\n    function onmousewheel(dx, dy, dz) {\n      if (false === allowWheel) { return }\n      synchronizeMouseWheel(dx, dy, dz)\n    }\n\n    /**\n     * Mouse command update function.\n     *\n     * @private\n     * @function\n     * @name update\n     * @implements Command\n     * @param {?Object} state Input state\n     * @param {?Function} block Block scope\n     * @see Command\n     */\n\n    function update(state, block) {\n      // ensure correct values\n      if ('function' == typeof state) {\n        block = state\n        state = {}\n      }\n\n      // ensure object\n      state = 'object' == typeof state && state ? state : {}\n\n      // ensure function\n      block = 'function' == typeof block ? block : function() {}\n\n      block({\n        ...state,\n\n        wheel,\n        allowWheel: coalesce(state.allowWheel, allowWheel),\n\n        ...({\n          ...mouse,\n          currentX: coalesce(state.currentX, mouse.currentX),\n          currentY: coalesce(state.currentY, mouse.currentY),\n        }),\n      })\n    }\n\n    /**\n     * Synchronizes mouse state\n     *\n     * @private\n     * @function\n     * @param {Number} b Number of buttons pressed.\n     * @param {Number} x X coordinate value of mouse.\n     * @param {Number} y Y coordinate value of mouse.\n     */\n\n    function synchronizeMouse(b, x, y) {\n      mouse.buttons = b\n      // reset delta on next frame\n      raf(() => {\n        mouse.deltaX = 0\n        mouse.deltaY = 0\n      })\n\n      // update mouse state if x or y input coordinate values\n      // are different than the current x or y mouse coordinate\n      // values\n      if (mouse.currentX != x || mouse.currentY != y) {\n        mouse.prevX = mouse.currentX\n        mouse.prevY = mouse.currentY\n        mouse.deltaX = x - mouse.currentX\n        mouse.deltaY = y - mouse.currentY\n        mouse.currentX = x\n        mouse.currentY = y\n      }\n    }\n\n    /**\n     * Synchronizes mouse wheel state\n     *\n     * @private\n     * @function\n     * @param {Number} dx Delta X wheel position.\n     * @param {Number} dy Delta Y wheel position.\n     * @param {Number} dz Delta Z wheel position.\n     */\n\n    function synchronizeMouseWheel(dx, dy, dz) {\n      // reset deltas on next frame\n      raf(() => Object.assign(wheel, {\n        deltaX: 0,\n        deltaY: 0,\n        deltaZ: 0,\n      }))\n\n      const {\n        currentX,\n        currentY,\n        currentZ,\n      } = wheel\n\n      Object.assign(wheel, {\n        currentX: currentX + dx,\n        currentY: currentY + dy,\n        currentZ: currentZ + dz,\n        deltaX: dx,\n        deltaY: dy,\n        deltaZ: dz,\n        prevX: currentX,\n        prevY: currentY,\n        prevZ: currentZ,\n      })\n    }\n  }\n}\n",
    "static": true,
    "longname": "src/input/mouse.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 343,
    "kind": "class",
    "name": "MouseInput",
    "memberof": "src/input/mouse.js",
    "static": true,
    "longname": "src/input/mouse.js~MouseInput",
    "access": "public",
    "export": true,
    "importPath": "axis3d/input/mouse",
    "importStyle": "{MouseInput}",
    "description": "The MouseInput class represents a stateless interface for capturing\nmouse state for a given context.",
    "see": [
      "Command"
    ],
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MouseInput"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 344,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/input/mouse.js~MouseInput",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/input/mouse.js~MouseInput#constructor",
    "access": "public",
    "description": "MouseInput class constructor.",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context object."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": "Constructor options."
      },
      {
        "nullable": true,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.allowWheel",
        "description": "Indicates if wheel should be ignored."
      }
    ]
  },
  {
    "__docId__": 345,
    "kind": "file",
    "name": "src/input/orientation.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport 'webvr-polyfill'\n\nimport { getScreenOrientation, radians } from '../utils'\nimport { Quaternion, Euler } from '../math'\nimport { registerStat } from '../stats'\nimport { Command } from '../core/command'\n\nimport window from 'global/window'\nimport events from 'dom-events'\nimport quat from 'gl-quat'\nimport raf from 'raf'\n\n/**\n * Global orientation state object.\n * @private\n */\n\nexport const globalState = {\n  hasDeviceOrientation: false,\n  absolute: null,\n\n  currentAlpha: 0, // z\n  currentBeta: 90, // x\n  currentGamma: 0, // y\n\n  deltaAlpha: 0,\n  deltaBeta: 0,\n  deltaGamma: 0,\n\n  prevAlpha: 0,\n  prevBeta: 0,\n  prevGamma: 0,\n}\n\n// update global device orientation state\nevents.on(window, 'deviceorientation', (e) => {\n  // ZXY\n  const { alpha, beta, gamma, absolute } = e\n\n  if (null != alpha && null != beta && null != gamma) {\n    globalState.hasDeviceOrientation = true\n  } else {\n    globalState.hasDeviceOrientation = false\n    return\n  }\n\n  Object.assign(globalState, {\n    absolute,\n\n    currentAlpha: alpha,\n    currentBeta: beta,\n    currentGamma: gamma,\n\n    deltaAlpha: alpha - globalState.currentAlpha,\n    deltaBeta: beta - globalState.currentBeta,\n    deltaGamma: gamma - globalState.currentGamma,\n\n    prevAlpha: globalState.currentAlpha,\n    prevBeta: globalState.currentBeta,\n    prevGamma: globalState.currentGamma,\n  })\n\n  raf(() => Object.assign(globalState, {\n    deltaAlpha: 0,\n    deltaBeta: 0,\n    deltaGamma: 0,\n  }))\n})\n\n// expose device motion state\nevents.on(window, 'devicemotion', (e) => {\n  Object.assign(globalState, {\n    accelerationIncludingGravity: e.accelerationIncludingGravity,\n    acceleration: e.acceleration,\n    rotationRate: e.rotationRate,\n    interval: e.interval,\n  })\n})\n\n/**\n * The OrientationInput class represents a stateless\n * interface for capturing device orientation from WebVR\n * or using devie Euler angles.\n *\n * @public\n * @class OrientationInput\n * @extends Command\n * @see Command\n */\n\nexport class OrientationInput extends Command {\n\n  /**\n   * OrientationInput class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {Context} ctx Axis3D context object.\n   * @param {?Object} opts Constructor options.\n   */\n\n  constructor(ctx, {} = {}) {\n    registerStat('OrienationInput')\n\n    super(update)\n\n    /**\n     * Quaternion representing the current device orienation.\n     */\n\n    const deviceRotation = new Quaternion()\n\n    /**\n     * Euler angles representing the current device orienation.\n     */\n\n    const deviceEuler = new Euler()\n\n    /**\n     * VRFrameData instance representing orientation state\n     * emitted by the device (mobile, VR, etc).\n     * webvr-polyfill ensures VRFrameData exists and is readblae.\n     */\n\n    const vrFrameData = new VRFrameData()\n\n    /**\n     * An array of VRDisplay\n     */\n\n    const vrDisplays = []\n\n    /**\n     * Handles VR displays when available.\n     */\n\n    function onvrdisplays(displays) {\n      Object.assign(vrDisplays, displays)\n    }\n\n    // fetch vr displays\n    void navigator\n      .getVRDisplays()\n      .then(onvrdisplays)\n      .catch((err) => { ctx.emit('error', err) })\n\n    /**\n     * Orienation command update function.\n     */\n\n    function update(state, block) {\n      // ensure correct values\n      if ('function' == typeof state) {\n        block = state\n        state = {}\n      }\n\n      // ensure object\n      state = 'object' == typeof state && state ? state : {}\n\n      // ensure function\n      block = 'function' == typeof block ? block : function() {}\n\n      computeDeviceRotationFromVRFrameData()\n      // @TODO - computeDeviceRotationFromDeviceEuler()\n\n      block({ ...globalState, deviceRotation, deviceEuler })\n    }\n\n    /**\n     * Computes device rotation data from a vr display\n     */\n\n    function computeDeviceRotationFromVRFrameData() {\n      if (vrDisplays.length) {\n        vrDisplays[0].getFrameData(vrFrameData)\n        deviceRotation.set(\n          ...(vrFrameData.pose.orientation || [0, 0, 0, 1])\n        )\n        deviceEuler.set(...Euler.fromQuaternion(deviceRotation))\n      }\n    }\n  }\n}\n",
    "static": true,
    "longname": "src/input/orientation.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 346,
    "kind": "variable",
    "name": "globalState",
    "memberof": "src/input/orientation.js",
    "static": true,
    "longname": "src/input/orientation.js~globalState",
    "access": "private",
    "export": true,
    "importPath": "axis3d/input/orientation",
    "importStyle": "{globalState}",
    "description": "Global orientation state object.",
    "lineNumber": 24,
    "type": {
      "types": [
        "{\"hasDeviceOrientation\": *, \"absolute\": *, \"currentAlpha\": *, \"currentBeta\": number, \"currentGamma\": *, \"deltaAlpha\": *, \"deltaBeta\": *, \"deltaGamma\": *, \"prevAlpha\": *, \"prevBeta\": *, \"prevGamma\": *}"
      ]
    }
  },
  {
    "__docId__": 347,
    "kind": "class",
    "name": "OrientationInput",
    "memberof": "src/input/orientation.js",
    "static": true,
    "longname": "src/input/orientation.js~OrientationInput",
    "access": "public",
    "export": true,
    "importPath": "axis3d/input/orientation",
    "importStyle": "{OrientationInput}",
    "description": "The OrientationInput class represents a stateless\ninterface for capturing device orientation from WebVR\nor using devie Euler angles.",
    "see": [
      "Command"
    ],
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "OrientationInput"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 348,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/input/orientation.js~OrientationInput",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/input/orientation.js~OrientationInput#constructor",
    "access": "public",
    "description": "OrientationInput class constructor.",
    "lineNumber": 108,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context object."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": "Constructor options."
      }
    ]
  },
  {
    "__docId__": 349,
    "kind": "file",
    "name": "src/input/touch.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { registerStat } from '../stats'\nimport { Command } from '../core/command'\n\nimport { emitter as TouchPositionEmitter } from 'touch-position'\nimport events from 'dom-events'\nimport raf from 'raf'\n\n/**\n * The TouchInput class represents a stateless interface for capturing touch\n * state for a given context.\n *\n * @public\n * @class TouchInput\n * @extends Command\n * @see Command\n */\n\nexport class TouchInput extends Command {\n\n  /**\n   * TouchInput class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {Context} ctx Axis3D context object.\n   * @param {?Object} opts Constructor options.\n   */\n\n  constructor(ctx, {} = {}) {\n    registerStat('TouchInput')\n\n    super(update)\n\n    /**\n     * Encapsulated touch coordinate and\n     * button state.\n     *\n     * @private\n     * @type {Object}\n     * @property {Number} buttons\n     * @property {Number} currentX\n     * @property {Number} currentY\n     * @property {Number} deltaX\n     * @property {Number} deltaY\n     * @property {Number} prevX\n     * @property {Number} prevY\n     */\n\n    const touch = {\n      touches: null,\n      currentX: 0,\n      currentY: 0,\n      deltaX: 0,\n      deltaY: 0,\n      prevX: 0,\n      prevY: 0,\n    }\n\n    /**\n     * Emits touch movement coordinates.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    const touchListener = TouchPositionEmitter({element: ctx.domElement})\n\n    // bind touch listeners\n    touchListener.on('move',  ontouchmove)\n    events.on(ctx.domElement, 'touchstart', ontouchstart)\n    events.on(ctx.domElement, 'touchend', ontouchend)\n\n    // remove listeners when context is destroyed\n    ctx.once('destroy', () => {\n      touchListener.dispose()\n      events.of(ctx.domElement, 'touchstart', ontouchstart)\n      events.of(ctx.domElement, 'touchend', ontouchend)\n    })\n\n    /**\n     * Handles touch start events\n     *\n     * @private\n     * @function\n     * @param {Event} e\n     */\n\n    function ontouchstart(e) {\n      const x = e.touches[0].clientX\n      const y = e.touches[0].clientY\n      e.preventDefault()\n      touch.touches = e.targetTouches\n      touch.currentX = x\n      touch.currentY = y\n      touch.deltaX = 0\n      touch.deltaY = 0\n      touch.prevX = 0\n      touch.prevY = 0\n    }\n\n    /**\n     * Handles touch end events\n     *\n     * @private\n     * @function\n     * @param {Event} e\n     */\n\n    function ontouchend(e) {\n      e.preventDefault()\n      raf(() => {\n        touch.touches = null\n        touch.currentX = 0\n        touch.currentY = 0\n        touch.deltaX = 0\n        touch.deltaY = 0\n        touch.prevX = 0\n        touch.prevY = 0\n      })\n    }\n\n    /**\n     * Handles touch movement events\n     *\n     * @private\n     * @function\n     * @param {Event} e\n     */\n\n    function ontouchmove({clientX, clientY}) {\n      synchronizeTouch(clientX, clientY)\n    }\n\n    /**\n     * Touch command update function.\n     *\n     * @private\n     * @function\n     * @name update\n     * @implements Command\n     * @param {?Object} state Input state\n     * @param {?Function} block Block scope\n     * @see Command\n     */\n\n    function update(state, block) {\n      // ensure correct values\n      if ('function' == typeof state) {\n        block = state\n        state = {}\n      }\n\n      // ensure object\n      state = 'object' == typeof state && state ? state : {}\n\n      // ensure function\n      block = 'function' == typeof block ? block : function() {}\n\n      block({\n        ...state,\n        ...touch,\n      })\n    }\n\n    /**\n     * Synchronizes touch state\n     *\n     * @private\n     * @function\n     * @param {Number} x X coordinate value of touch.\n     * @param {Number} y Y coordinate value of touch.\n     */\n\n    function synchronizeTouch(x, y) {\n      // reset delta on next frame\n      raf(() => {\n        touch.deltaX = 0\n        touch.deltaY = 0\n      })\n\n      // update touch state if x or y input coordinate values\n      // are different than the current x or y touch coordinate\n      // values\n      if (touch.currentX != x && touch.currentY != y) {\n        touch.prevX = touch.currentX\n        touch.prevY = touch.currentY\n        touch.deltaX = x - touch.currentX\n        touch.deltaY = y - touch.currentY\n        touch.currentX = x\n        touch.currentY = y\n      }\n    }\n  }\n}\n",
    "static": true,
    "longname": "src/input/touch.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 350,
    "kind": "class",
    "name": "TouchInput",
    "memberof": "src/input/touch.js",
    "static": true,
    "longname": "src/input/touch.js~TouchInput",
    "access": "public",
    "export": true,
    "importPath": "axis3d/input/touch",
    "importStyle": "{TouchInput}",
    "description": "The TouchInput class represents a stateless interface for capturing touch\nstate for a given context.",
    "see": [
      "Command"
    ],
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TouchInput"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 351,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/input/touch.js~TouchInput",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/input/touch.js~TouchInput#constructor",
    "access": "public",
    "description": "TouchInput class constructor.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context object."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": "Constructor options."
      }
    ]
  },
  {
    "__docId__": 352,
    "kind": "file",
    "name": "src/light/ambient.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { AmbientLightType as type } from './types'\nimport { kMaxAmbientLights } from './limits'\nimport { incrementStat } from '../stats'\nimport { Light } from '../core/light'\nimport coalesce from 'defined'\n\n/**\n * Default ambient light ambient factor.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kDefaultAmbientLightAmbient = 0.01\n\n/**\n *ent The defualt light context entry object for\n * a light uniform.\n *\n * @public\n * @const\n * @type {Object}\n */\n\nexport const kDefaultAmbientLightContextEntry = {\n  identifier: 'ambient',\n  type: type,\n  max: kMaxAmbientLights,\n  defaults: {\n    color: [0, 0, 0, 0],\n    visible: false,\n  }\n}\n\n/**\n * AmbientLight class.\n *\n * @public\n * @class AmbientLight\n * @extends Light\n */\n\nexport class AmbientLight extends Light {\n\n  /**\n   * AmbientLight class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    incrementStat('AmbientLight')\n    super(ctx, {\n      ...initialState,\n      ambient: coalesce(initialState.ambient, kDefaultAmbientLightAmbient),\n      type: coalesce(initialState.type, type),\n    })\n  }\n\n  /**\n   * Returns the light context entry object for\n   * a light uniform.\n   *\n   * @public\n   * @static\n   * @method\n   * @return {Object}\n   */\n\n  static contextEntry() {\n    return kDefaultAmbientLightContextEntry\n  }\n}\n",
    "static": true,
    "longname": "src/light/ambient.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 353,
    "kind": "variable",
    "name": "kDefaultAmbientLightAmbient",
    "memberof": "src/light/ambient.js",
    "static": true,
    "longname": "src/light/ambient.js~kDefaultAmbientLightAmbient",
    "access": "public",
    "export": true,
    "importPath": "axis3d/light/ambient",
    "importStyle": "{kDefaultAmbientLightAmbient}",
    "description": "Default ambient light ambient factor.",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 354,
    "kind": "variable",
    "name": "kDefaultAmbientLightContextEntry",
    "memberof": "src/light/ambient.js",
    "static": true,
    "longname": "src/light/ambient.js~kDefaultAmbientLightContextEntry",
    "access": "public",
    "export": true,
    "importPath": "axis3d/light/ambient",
    "importStyle": "{kDefaultAmbientLightContextEntry}",
    "description": "ent The defualt light context entry object for\na light uniform.",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 355,
    "kind": "class",
    "name": "AmbientLight",
    "memberof": "src/light/ambient.js",
    "static": true,
    "longname": "src/light/ambient.js~AmbientLight",
    "access": "public",
    "export": true,
    "importPath": "axis3d/light/ambient",
    "importStyle": "{AmbientLight}",
    "description": "AmbientLight class.",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "AmbientLight"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 356,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/light/ambient.js~AmbientLight",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/light/ambient.js~AmbientLight#constructor",
    "access": "public",
    "description": "AmbientLight class constructor.",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 357,
    "kind": "method",
    "name": "contextEntry",
    "memberof": "src/light/ambient.js~AmbientLight",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/light/ambient.js~AmbientLight.contextEntry",
    "access": "public",
    "description": "Returns the light context entry object for\na light uniform.",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 358,
    "kind": "file",
    "name": "src/light/directional.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { DirectionalLightType as type } from './types'\nimport { kMaxDirectionalLights } from './limits'\nimport { incrementStat } from '../stats'\nimport { Light } from '../core/light'\n\nimport coalesce from 'defined'\nimport mat4 from 'gl-mat4'\n\n/**\n * Default directional light intensity.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kDefaultDirectionalLightIntensity = 0.5\n\n/**\n *\n * Default directional light radius.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kDefaultDirectionalLightRadius = 0.05\n\n/**\n * Default point light ambient factor.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kDefaultDirectionalLightAmbient = 0.005\n\n/**\n * The defualt light context entry object for\n * a light uniform.\n *\n * @public\n * @const\n * @type {Object}\n */\n\nexport const kDefaultDirectionalLightContextEntry = {\n  identifier: 'directional',\n  type: type,\n  max: kMaxDirectionalLights,\n  defaults: {\n    transform: mat4.identity([]),\n    position: [0, 0, 0, 0],\n    color: [0, 0, 0, 0],\n    intensity: 0,\n    visible: false,\n    ambient: 0,\n    radius: 0,\n  },\n}\n\n/**\n * DirectionalLight class.\n *\n * @public\n * @class DirectionalLight\n * @extends Light\n */\n\nexport class DirectionalLight extends Light {\n\n  /**\n   * DirectionalLight class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D Context.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    incrementStat('DirectionalLight')\n    super(ctx, {\n      type,\n      radius: kDefaultDirectionalLightRadius,\n      ambient: kDefaultDirectionalLightAmbient,\n      intensity: kDefaultDirectionalLightIntensity,\n      ...initialState,\n    })\n  }\n\n  /**\n   * Returns the light context entry object for\n   * a light uniform.\n   *\n   * @public\n   * @static\n   * @method\n   * @return {Object}\n   */\n\n  static contextEntry() {\n    return kDefaultDirectionalLightContextEntry\n  }\n}\n",
    "static": true,
    "longname": "src/light/directional.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 359,
    "kind": "variable",
    "name": "kDefaultDirectionalLightIntensity",
    "memberof": "src/light/directional.js",
    "static": true,
    "longname": "src/light/directional.js~kDefaultDirectionalLightIntensity",
    "access": "public",
    "export": true,
    "importPath": "axis3d/light/directional",
    "importStyle": "{kDefaultDirectionalLightIntensity}",
    "description": "Default directional light intensity.",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 360,
    "kind": "variable",
    "name": "kDefaultDirectionalLightRadius",
    "memberof": "src/light/directional.js",
    "static": true,
    "longname": "src/light/directional.js~kDefaultDirectionalLightRadius",
    "access": "public",
    "export": true,
    "importPath": "axis3d/light/directional",
    "importStyle": "{kDefaultDirectionalLightRadius}",
    "description": "\nDefault directional light radius.",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 361,
    "kind": "variable",
    "name": "kDefaultDirectionalLightAmbient",
    "memberof": "src/light/directional.js",
    "static": true,
    "longname": "src/light/directional.js~kDefaultDirectionalLightAmbient",
    "access": "public",
    "export": true,
    "importPath": "axis3d/light/directional",
    "importStyle": "{kDefaultDirectionalLightAmbient}",
    "description": "Default point light ambient factor.",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 362,
    "kind": "variable",
    "name": "kDefaultDirectionalLightContextEntry",
    "memberof": "src/light/directional.js",
    "static": true,
    "longname": "src/light/directional.js~kDefaultDirectionalLightContextEntry",
    "access": "public",
    "export": true,
    "importPath": "axis3d/light/directional",
    "importStyle": "{kDefaultDirectionalLightContextEntry}",
    "description": "The defualt light context entry object for\na light uniform.",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 363,
    "kind": "class",
    "name": "DirectionalLight",
    "memberof": "src/light/directional.js",
    "static": true,
    "longname": "src/light/directional.js~DirectionalLight",
    "access": "public",
    "export": true,
    "importPath": "axis3d/light/directional",
    "importStyle": "{DirectionalLight}",
    "description": "DirectionalLight class.",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DirectionalLight"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 364,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/light/directional.js~DirectionalLight",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/light/directional.js~DirectionalLight#constructor",
    "access": "public",
    "description": "DirectionalLight class constructor.",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D Context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 365,
    "kind": "method",
    "name": "contextEntry",
    "memberof": "src/light/directional.js~DirectionalLight",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/light/directional.js~DirectionalLight.contextEntry",
    "access": "public",
    "description": "Returns the light context entry object for\na light uniform.",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 366,
    "kind": "file",
    "name": "src/light/index.js",
    "content": "'use strict'\n\n/**\n * Module exports.\n */\n\nexport * from './directional'\nexport * from './ambient'\nexport * from './point'\nexport * from './types'\n",
    "static": true,
    "longname": "src/light/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 367,
    "kind": "file",
    "name": "src/light/limits.js",
    "content": "'use strict'\n\n/**\n * Max ambient lights per shader program\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kMaxAmbientLights = 16\n\n/**\n * Max directional lights per shader program\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kMaxDirectionalLights = 12\n\n/**\n * Max point lights per shader program\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kMaxPointLights = 12\n",
    "static": true,
    "longname": "src/light/limits.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 368,
    "kind": "variable",
    "name": "kMaxAmbientLights",
    "memberof": "src/light/limits.js",
    "static": true,
    "longname": "src/light/limits.js~kMaxAmbientLights",
    "access": "public",
    "export": true,
    "importPath": "axis3d/light/limits",
    "importStyle": "{kMaxAmbientLights}",
    "description": "Max ambient lights per shader program",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 369,
    "kind": "variable",
    "name": "kMaxDirectionalLights",
    "memberof": "src/light/limits.js",
    "static": true,
    "longname": "src/light/limits.js~kMaxDirectionalLights",
    "access": "public",
    "export": true,
    "importPath": "axis3d/light/limits",
    "importStyle": "{kMaxDirectionalLights}",
    "description": "Max directional lights per shader program",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 370,
    "kind": "variable",
    "name": "kMaxPointLights",
    "memberof": "src/light/limits.js",
    "static": true,
    "longname": "src/light/limits.js~kMaxPointLights",
    "access": "public",
    "export": true,
    "importPath": "axis3d/light/limits",
    "importStyle": "{kMaxPointLights}",
    "description": "Max point lights per shader program",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 371,
    "kind": "file",
    "name": "src/light/point.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { PointLightType as type } from './types'\nimport { DirectionalLight } from './directional'\nimport { kMaxPointLights } from './limits'\nimport { incrementStat } from '../stats'\n\nimport coalesce from 'defined'\nimport mat4 from 'gl-mat4'\n\n/**\n * Default point light intensity.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kDefaultPointLightIntensity = 0.4\n\n/**\n * Default point light ambient factor.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kDefaultPointLightAmbient = 0.0005\n\n/**\n * Default point light radius.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kDefaultPointLightRadius = 0.0005\n\n/**\n * The defualt light context entry object for\n * a light uniform.\n *\n * @public\n * @const\n * @type {Object}\n */\n\nexport const kDefaultPointLightContextEntry = {\n  identifier: 'point',\n  type: type,\n  max: kMaxPointLights,\n  defaults: {\n    transform: mat4.identity([]),\n    position: [0, 0, 0, 0],\n    color: [0, 0, 0, 0],\n    intensity: 0,\n    visible: false,\n    ambient: 0,\n    radius: 0,\n  }\n}\n\n/**\n * PointLight class.\n *\n * @public\n * @class PointLight\n * @extends PointLight\n */\n\nexport class PointLight extends DirectionalLight {\n\n  /**\n   * PointLight class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D Context.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    incrementStat('PointLight')\n\n    super(ctx, {\n      ...initialState,\n      intensity: coalesce(initialState.intensity, kDefaultPointLightIntensity),\n      ambient: coalesce(initialState.ambient, kDefaultPointLightAmbient),\n      radius: coalesce(initialState.radius, kDefaultPointLightRadius),\n      type: coalesce(initialState.type, type),\n    })\n  }\n\n  /**\n   * Returns the light context entry object for\n   * a light uniform.\n   *\n   * @public\n   * @static\n   * @method\n   * @return {Object}\n   */\n\n  static contextEntry() {\n    return kDefaultPointLightContextEntry\n  }\n}\n",
    "static": true,
    "longname": "src/light/point.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 372,
    "kind": "variable",
    "name": "kDefaultPointLightIntensity",
    "memberof": "src/light/point.js",
    "static": true,
    "longname": "src/light/point.js~kDefaultPointLightIntensity",
    "access": "public",
    "export": true,
    "importPath": "axis3d/light/point",
    "importStyle": "{kDefaultPointLightIntensity}",
    "description": "Default point light intensity.",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 373,
    "kind": "variable",
    "name": "kDefaultPointLightAmbient",
    "memberof": "src/light/point.js",
    "static": true,
    "longname": "src/light/point.js~kDefaultPointLightAmbient",
    "access": "public",
    "export": true,
    "importPath": "axis3d/light/point",
    "importStyle": "{kDefaultPointLightAmbient}",
    "description": "Default point light ambient factor.",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 374,
    "kind": "variable",
    "name": "kDefaultPointLightRadius",
    "memberof": "src/light/point.js",
    "static": true,
    "longname": "src/light/point.js~kDefaultPointLightRadius",
    "access": "public",
    "export": true,
    "importPath": "axis3d/light/point",
    "importStyle": "{kDefaultPointLightRadius}",
    "description": "Default point light radius.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 375,
    "kind": "variable",
    "name": "kDefaultPointLightContextEntry",
    "memberof": "src/light/point.js",
    "static": true,
    "longname": "src/light/point.js~kDefaultPointLightContextEntry",
    "access": "public",
    "export": true,
    "importPath": "axis3d/light/point",
    "importStyle": "{kDefaultPointLightContextEntry}",
    "description": "The defualt light context entry object for\na light uniform.",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 376,
    "kind": "class",
    "name": "PointLight",
    "memberof": "src/light/point.js",
    "static": true,
    "longname": "src/light/point.js~PointLight",
    "access": "public",
    "export": true,
    "importPath": "axis3d/light/point",
    "importStyle": "{PointLight}",
    "description": "PointLight class.",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PointLight"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 377,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/light/point.js~PointLight",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/light/point.js~PointLight#constructor",
    "access": "public",
    "description": "PointLight class constructor.",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D Context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 378,
    "kind": "method",
    "name": "contextEntry",
    "memberof": "src/light/point.js~PointLight",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/light/point.js~PointLight.contextEntry",
    "access": "public",
    "description": "Returns the light context entry object for\na light uniform.",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 379,
    "kind": "file",
    "name": "src/light/types.js",
    "content": "'use strict'\n\n/**\n * Built-in light types as constants. Light type values are\n * in the range of 0x6c0000 - 0x6cffff.\n *\n * @module light/types\n */\n\n/** @typedef {Number} LightType */\n\nexport const BasicLightType = 0x6c0000\nexport const PointLightType = 0x6c0001\nexport const AmbientLightType = 0x6c0002\nexport const DirectionalLightType = 0x6c0003\nexport const SpotLightType = 0x6c0004\n",
    "static": true,
    "longname": "src/light/types.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 380,
    "kind": "typedef",
    "name": "LightType",
    "memberof": "src/light/types.js",
    "static": true,
    "longname": "src/light/types.js~LightType",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "type": {
      "types": [
        "Number"
      ],
      "optional": false,
      "name": "LightType"
    }
  },
  {
    "__docId__": 381,
    "kind": "variable",
    "name": "PointLightType",
    "memberof": "src/light/types.js",
    "static": true,
    "longname": "src/light/types.js~PointLightType",
    "access": null,
    "export": true,
    "importPath": "axis3d/light/types",
    "importStyle": "{PointLightType}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 382,
    "kind": "variable",
    "name": "AmbientLightType",
    "memberof": "src/light/types.js",
    "static": true,
    "longname": "src/light/types.js~AmbientLightType",
    "access": null,
    "export": true,
    "importPath": "axis3d/light/types",
    "importStyle": "{AmbientLightType}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 383,
    "kind": "variable",
    "name": "DirectionalLightType",
    "memberof": "src/light/types.js",
    "static": true,
    "longname": "src/light/types.js~DirectionalLightType",
    "access": null,
    "export": true,
    "importPath": "axis3d/light/types",
    "importStyle": "{DirectionalLightType}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 384,
    "kind": "variable",
    "name": "SpotLightType",
    "memberof": "src/light/types.js",
    "static": true,
    "longname": "src/light/types.js~SpotLightType",
    "access": null,
    "export": true,
    "importPath": "axis3d/light/types",
    "importStyle": "{SpotLightType}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 385,
    "kind": "file",
    "name": "src/material/flat.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { FlatMaterialType as type } from './types'\nimport { Material } from '../core/material'\n\n/**\n * FlatMaterial class represents a basic material that is not affected\n * by light.\n *\n * @public\n * @class FlatMaterial\n * @extends Material\n */\n\nexport class FlatMaterial extends Material {\n\n  /**\n   * FlatMaterial class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    super(ctx, { type, ...initialState })\n  }\n}\n",
    "static": true,
    "longname": "src/material/flat.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 386,
    "kind": "class",
    "name": "FlatMaterial",
    "memberof": "src/material/flat.js",
    "static": true,
    "longname": "src/material/flat.js~FlatMaterial",
    "access": "public",
    "export": true,
    "importPath": "axis3d/material/flat",
    "importStyle": "{FlatMaterial}",
    "description": "FlatMaterial class represents a basic material that is not affected\nby light.",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "FlatMaterial"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 387,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/material/flat.js~FlatMaterial",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/material/flat.js~FlatMaterial#constructor",
    "access": "public",
    "description": "FlatMaterial class constructor.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 388,
    "kind": "file",
    "name": "src/material/index.js",
    "content": "'use strict'\n\n/**\n * Module exports.\n */\n\nexport * from './lambert'\nexport * from './phong'\nexport * from './types'\nexport * from './flat'\n",
    "static": true,
    "longname": "src/material/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 389,
    "kind": "file",
    "name": "src/material/lambert.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { LambertMaterialType as type } from './types'\nimport { kMaxDirectionalLights } from '../light/directional'\nimport { kMaxAmbientLights } from '../light/ambient'\nimport { kMaxPointLights } from '../light/point'\nimport { isArrayLike } from '../utils'\nimport * as lightTypes from '../light/types'\nimport { Vector } from '../math/vector'\nimport { Color } from '../core/color'\n\nimport { DirectionalLight } from '../light/directional'\nimport { AmbientLight } from '../light/ambient'\nimport { PointLight } from '../light/point'\n\nimport {\n  MaterialUniforms,\n  MaterialContext,\n  MaterialState,\n  Material,\n} from '../core/material'\n\nimport coalesce from 'defined'\n\n/**\n * Default material albedo.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kDefaultLambertMaterialAlbedo = 0.8\n\n/**\n * Default material roughness.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kDefaultLambertMaterialRoughness = 0.8\n\n/**\n * Default material emissive color.\n *\n * @public\n * @const\n * @type {Color}\n */\n\nexport const kDefaultLambertMaterialEmissiveColor =\n  new Color('black')\n\n/**\n * Default material ambient color.\n *\n * @public\n * @const\n * @type {Color}\n */\n\nexport const kDefaultLambertMaterialAmbientColor =\n  new Color(0.2*255, 0.2*255, 0.2*255)\n\n/**\n * LambertMaterial class\n *\n * @public\n * @class LambertMaterial\n * @extends Material\n */\n\nexport class LambertMaterial extends Material {\n\n  /**\n   * LambertMaterial class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n  */\n\n  constructor(ctx, initialState = {}) {\n    const {\n      uniforms = new LambertMaterialUniforms(ctx, initialState)\n    } = initialState\n    super(ctx, { type, ...initialState, uniforms })\n  }\n}\n\n/**\n * LambertMaterialContext class.\n *\n * @public\n * @class LambertMaterialContext\n * @extends MaterialContext\n */\n\nexport class LambertMaterialContext extends MaterialContext {\n\n  /**\n   * LambertMaterialContext class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    super(ctx, initialState)\n  }\n}\n\n/**\n * LambertMaterialUniforms class.\n *\n * @public\n * @class LambertMaterialUniforms\n * @extends MaterialUniforms\n */\n\nexport class LambertMaterialUniforms extends MaterialUniforms {\n\n  /**\n   * LambertMaterialUniforms class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    super(ctx, initialState)\n\n    /**\n     * Lights that affect a lambert matertial.\n     *\n     * @private\n     */\n\n    const lightContext = [\n      DirectionalLight.contextEntry(),\n      AmbientLight.contextEntry(),\n      PointLight.contextEntry(),\n\n      ...(initialState.lightContext || [])\n    ]\n\n    for (let light of lightContext) {\n      this.setLightsInContext(light)\n    }\n\n    /**\n     * Material roughness.\n     *\n     * @public\n     * @type {Number}\n     */\n\n    this['material.roughness'] = ({}, {roughness} = {}) => {\n      return coalesce(\n        roughness,\n        initialState.roughness,\n        kDefaultLambertMaterialRoughness)\n    }\n\n    /**\n     * Material emissive color.\n     *\n     * @public\n     * @type {Color|Array<Number>}\n     */\n\n    this['material.emissive'] = ({}, {emissive} = {}) => {\n      return [\n        ...coalesce(\n          emissive,\n          initialState.emissive,\n          kDefaultLambertMaterialEmissiveColor)\n      ]\n    }\n\n    /**\n     * Material albedo.\n     *\n     * @public\n     * @type {Number}\n     */\n\n    this['material.albedo'] = ({}, {albedo} = {}) => {\n      return coalesce(\n        albedo,\n        initialState.albedo,\n        kDefaultLambertMaterialAlbedo)\n    }\n\n    /**\n     * Material ambient color.\n     *\n     * @public\n     * @type {Color|Array<Number>}\n     */\n\n    this['material.ambient'] = ({}, {ambient} = {}) => {\n      return [\n        ...coalesce(\n          ambient,\n          initialState.ambient,\n          kDefaultLambertMaterialAmbientColor)\n      ]\n    }\n\n    /**\n     * Total ambient light count.\n     *\n     * @public\n     * @type {Number}\n     */\n\n    this['lightContext.ambient.count'] = ({lights}) => {\n      const {AmbientLightType} = lightTypes\n      const count = lights\n        .filter(Boolean)\n        .filter((l) => l.type == AmbientLightType)\n        .length\n      return count\n    }\n\n    /**\n     * Total directional light count.\n     *\n     * @public\n     * @type {Number}\n     */\n\n    this['lightContext.directional.count'] = ({lights}) => {\n      const {DirectionalLightType} = lightTypes\n      const count = lights\n        .filter(Boolean)\n        .filter((l) => l.type == DirectionalLightType)\n        .length\n      return count\n    }\n\n    /**\n     * Total point light count.\n     *\n     * @public\n     * @type {Number}\n     */\n\n    this['lightContext.point.count'] = ({lights}) => {\n      const {PointLightType} = lightTypes\n      const count = lights\n        .filter(Boolean)\n        .filter((l) => l.type == PointLightType)\n        .length\n      return count\n    }\n  }\n\n  /**\n   * Sets a lights in shader light context uniform at\n   * identifier with a type and defaults.\n   *\n   * @protected\n   */\n\n  setLightsInContext({identifier, type, max, defaults}) {\n    for (let i = 0; i < max; ++i) {\n      const key = `lightContext.${identifier}.lights[${i}]`\n      const set = (property, fallback) => {\n        Object.assign(this, {\n          [`${key}.${property}`]({lights}, args = {}) {\n            const light = lights.filter((l) => type == l.type)[i]\n            let value =\n              light\n              ? coalesce(light[property], args[property], fallback)\n              : fallback\n            if (value instanceof Vector) { value = [ ...value ] }\n            else if (isArrayLike(value)) { value = [ ...value ] }\n            return value\n          }\n        })\n      }\n\n      for (let key in defaults) {\n        set(key, defaults[key])\n      }\n    }\n  }\n}\n",
    "static": true,
    "longname": "src/material/lambert.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 390,
    "kind": "variable",
    "name": "kDefaultLambertMaterialAlbedo",
    "memberof": "src/material/lambert.js",
    "static": true,
    "longname": "src/material/lambert.js~kDefaultLambertMaterialAlbedo",
    "access": "public",
    "export": true,
    "importPath": "axis3d/material/lambert",
    "importStyle": "{kDefaultLambertMaterialAlbedo}",
    "description": "Default material albedo.",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 391,
    "kind": "variable",
    "name": "kDefaultLambertMaterialRoughness",
    "memberof": "src/material/lambert.js",
    "static": true,
    "longname": "src/material/lambert.js~kDefaultLambertMaterialRoughness",
    "access": "public",
    "export": true,
    "importPath": "axis3d/material/lambert",
    "importStyle": "{kDefaultLambertMaterialRoughness}",
    "description": "Default material roughness.",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 392,
    "kind": "variable",
    "name": "kDefaultLambertMaterialEmissiveColor",
    "memberof": "src/material/lambert.js",
    "static": true,
    "longname": "src/material/lambert.js~kDefaultLambertMaterialEmissiveColor",
    "access": "public",
    "export": true,
    "importPath": "axis3d/material/lambert",
    "importStyle": "{kDefaultLambertMaterialEmissiveColor}",
    "description": "Default material emissive color.",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Color"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 393,
    "kind": "variable",
    "name": "kDefaultLambertMaterialAmbientColor",
    "memberof": "src/material/lambert.js",
    "static": true,
    "longname": "src/material/lambert.js~kDefaultLambertMaterialAmbientColor",
    "access": "public",
    "export": true,
    "importPath": "axis3d/material/lambert",
    "importStyle": "{kDefaultLambertMaterialAmbientColor}",
    "description": "Default material ambient color.",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Color"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 394,
    "kind": "class",
    "name": "LambertMaterial",
    "memberof": "src/material/lambert.js",
    "static": true,
    "longname": "src/material/lambert.js~LambertMaterial",
    "access": "public",
    "export": true,
    "importPath": "axis3d/material/lambert",
    "importStyle": "{LambertMaterial}",
    "description": "LambertMaterial class",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "LambertMaterial"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 395,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/material/lambert.js~LambertMaterial",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/material/lambert.js~LambertMaterial#constructor",
    "access": "public",
    "description": "LambertMaterial class constructor.",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 396,
    "kind": "class",
    "name": "LambertMaterialContext",
    "memberof": "src/material/lambert.js",
    "static": true,
    "longname": "src/material/lambert.js~LambertMaterialContext",
    "access": "public",
    "export": true,
    "importPath": "axis3d/material/lambert",
    "importStyle": "{LambertMaterialContext}",
    "description": "LambertMaterialContext class.",
    "lineNumber": 106,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "LambertMaterialContext"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 397,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/material/lambert.js~LambertMaterialContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/material/lambert.js~LambertMaterialContext#constructor",
    "access": "public",
    "description": "LambertMaterialContext class constructor.",
    "lineNumber": 117,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 398,
    "kind": "class",
    "name": "LambertMaterialUniforms",
    "memberof": "src/material/lambert.js",
    "static": true,
    "longname": "src/material/lambert.js~LambertMaterialUniforms",
    "access": "public",
    "export": true,
    "importPath": "axis3d/material/lambert",
    "importStyle": "{LambertMaterialUniforms}",
    "description": "LambertMaterialUniforms class.",
    "lineNumber": 130,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "LambertMaterialUniforms"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 399,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/material/lambert.js~LambertMaterialUniforms",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/material/lambert.js~LambertMaterialUniforms#constructor",
    "access": "public",
    "description": "LambertMaterialUniforms class constructor.",
    "lineNumber": 141,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 400,
    "kind": "member",
    "name": "['material.roughness']",
    "memberof": "src/material/lambert.js~LambertMaterialUniforms",
    "static": false,
    "longname": "src/material/lambert.js~LambertMaterialUniforms#['material.roughness']",
    "access": "public",
    "description": "Material roughness.",
    "lineNumber": 169,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 401,
    "kind": "member",
    "name": "['material.emissive']",
    "memberof": "src/material/lambert.js~LambertMaterialUniforms",
    "static": false,
    "longname": "src/material/lambert.js~LambertMaterialUniforms#['material.emissive']",
    "access": "public",
    "description": "Material emissive color.",
    "lineNumber": 183,
    "type": {
      "nullable": null,
      "types": [
        "Color",
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 402,
    "kind": "member",
    "name": "['material.albedo']",
    "memberof": "src/material/lambert.js~LambertMaterialUniforms",
    "static": false,
    "longname": "src/material/lambert.js~LambertMaterialUniforms#['material.albedo']",
    "access": "public",
    "description": "Material albedo.",
    "lineNumber": 199,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 403,
    "kind": "member",
    "name": "['material.ambient']",
    "memberof": "src/material/lambert.js~LambertMaterialUniforms",
    "static": false,
    "longname": "src/material/lambert.js~LambertMaterialUniforms#['material.ambient']",
    "access": "public",
    "description": "Material ambient color.",
    "lineNumber": 213,
    "type": {
      "nullable": null,
      "types": [
        "Color",
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 404,
    "kind": "member",
    "name": "['lightContext.ambient.count']",
    "memberof": "src/material/lambert.js~LambertMaterialUniforms",
    "static": false,
    "longname": "src/material/lambert.js~LambertMaterialUniforms#['lightContext.ambient.count']",
    "access": "public",
    "description": "Total ambient light count.",
    "lineNumber": 229,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 405,
    "kind": "member",
    "name": "['lightContext.directional.count']",
    "memberof": "src/material/lambert.js~LambertMaterialUniforms",
    "static": false,
    "longname": "src/material/lambert.js~LambertMaterialUniforms#['lightContext.directional.count']",
    "access": "public",
    "description": "Total directional light count.",
    "lineNumber": 245,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 406,
    "kind": "member",
    "name": "['lightContext.point.count']",
    "memberof": "src/material/lambert.js~LambertMaterialUniforms",
    "static": false,
    "longname": "src/material/lambert.js~LambertMaterialUniforms#['lightContext.point.count']",
    "access": "public",
    "description": "Total point light count.",
    "lineNumber": 261,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 407,
    "kind": "method",
    "name": "setLightsInContext",
    "memberof": "src/material/lambert.js~LambertMaterialUniforms",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/material/lambert.js~LambertMaterialUniforms#setLightsInContext",
    "access": "protected",
    "description": "Sets a lights in shader light context uniform at\nidentifier with a type and defaults.",
    "lineNumber": 278,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"identifier\": *, \"type\": *, \"max\": *, \"defaults\": *}"
        ],
        "defaultRaw": {
          "identifier": null,
          "type": null,
          "max": null,
          "defaults": null
        },
        "defaultValue": "{\"identifier\":null,\"type\":null,\"max\":null,\"defaults\":null}"
      }
    ]
  },
  {
    "__docId__": 408,
    "kind": "file",
    "name": "src/material/phong.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { LambertMaterial, LambertMaterialUniforms } from './lambert'\nimport { PhongMaterialType as type } from './types'\nimport { Color } from '../core/color'\n\nimport coalesce from 'defined'\n\n/**\n * Default PhongMaterial specular color.\n *\n * @public\n * @const\n * @type {Color}\n */\n\nexport const kDefaultPhongMaterialSpecularColor =\n  new Color(0x111111)\n\n/**\n * Default PhongMaterial shininess.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const kDefaultPhongMaterialShininess = 40\n\n/**\n * PhongMaterial class.\n *\n * @public\n * @class PhongMaterial\n * @extends LambertMaterial\n * @see Material\n */\n\nexport class PhongMaterial extends LambertMaterial {\n  constructor(ctx, initialState = {}) {\n    const {\n      uniforms = new PhongMaterialUniforms(ctx, initialState)\n    } = initialState\n    super(ctx, { type, ...initialState, uniforms })\n  }\n}\n\n/**\n * PhongMaterialUniforms class.\n *\n * @public\n * @class PhongMaterialUniforms\n * @extends LambertMaterialUniforms\n */\n\nexport class PhongMaterialUniforms extends LambertMaterialUniforms {\n\n  /**\n   * PhongMaterialUniforms class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D context.\n   * @param {?Object} initialState Optional initial state.\n   */\n\n  constructor(ctx, initialState = {}) {\n    super(ctx, initialState)\n\n    /**\n     * Material shininess.\n     *\n     * @public\n     * @type {Number}\n     */\n\n    this['material.shininess'] = ({}, {shininess} = {}) => {\n      return coalesce(\n        shininess,\n        initialState.shininess,\n        kDefaultPhongMaterialShininess)\n    }\n\n    /**\n     * Material specularity.\n     *\n     * @public\n     * @type {Color|Array<Number>}\n     */\n\n    this['material.specular'] = ({}, {specular} = {}) => {\n      return [\n        ...coalesce(\n          specular,\n          initialState.specular,\n          kDefaultPhongMaterialSpecularColor)\n      ]\n    }\n  }\n}\n",
    "static": true,
    "longname": "src/material/phong.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 409,
    "kind": "variable",
    "name": "kDefaultPhongMaterialSpecularColor",
    "memberof": "src/material/phong.js",
    "static": true,
    "longname": "src/material/phong.js~kDefaultPhongMaterialSpecularColor",
    "access": "public",
    "export": true,
    "importPath": "axis3d/material/phong",
    "importStyle": "{kDefaultPhongMaterialSpecularColor}",
    "description": "Default PhongMaterial specular color.",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Color"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 410,
    "kind": "variable",
    "name": "kDefaultPhongMaterialShininess",
    "memberof": "src/material/phong.js",
    "static": true,
    "longname": "src/material/phong.js~kDefaultPhongMaterialShininess",
    "access": "public",
    "export": true,
    "importPath": "axis3d/material/phong",
    "importStyle": "{kDefaultPhongMaterialShininess}",
    "description": "Default PhongMaterial shininess.",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 411,
    "kind": "class",
    "name": "PhongMaterial",
    "memberof": "src/material/phong.js",
    "static": true,
    "longname": "src/material/phong.js~PhongMaterial",
    "access": "public",
    "export": true,
    "importPath": "axis3d/material/phong",
    "importStyle": "{PhongMaterial}",
    "description": "PhongMaterial class.",
    "see": [
      "Material"
    ],
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PhongMaterial"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 412,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/material/phong.js~PhongMaterial",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/material/phong.js~PhongMaterial#constructor",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "initialState",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 413,
    "kind": "class",
    "name": "PhongMaterialUniforms",
    "memberof": "src/material/phong.js",
    "static": true,
    "longname": "src/material/phong.js~PhongMaterialUniforms",
    "access": "public",
    "export": true,
    "importPath": "axis3d/material/phong",
    "importStyle": "{PhongMaterialUniforms}",
    "description": "PhongMaterialUniforms class.",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PhongMaterialUniforms"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 414,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/material/phong.js~PhongMaterialUniforms",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/material/phong.js~PhongMaterialUniforms#constructor",
    "access": "public",
    "description": "PhongMaterialUniforms class constructor.",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D context."
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": "Optional initial state."
      }
    ]
  },
  {
    "__docId__": 415,
    "kind": "member",
    "name": "['material.shininess']",
    "memberof": "src/material/phong.js~PhongMaterialUniforms",
    "static": false,
    "longname": "src/material/phong.js~PhongMaterialUniforms#['material.shininess']",
    "access": "public",
    "description": "Material shininess.",
    "lineNumber": 81,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 416,
    "kind": "member",
    "name": "['material.specular']",
    "memberof": "src/material/phong.js~PhongMaterialUniforms",
    "static": false,
    "longname": "src/material/phong.js~PhongMaterialUniforms#['material.specular']",
    "access": "public",
    "description": "Material specularity.",
    "lineNumber": 95,
    "type": {
      "nullable": null,
      "types": [
        "Color",
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 417,
    "kind": "file",
    "name": "src/material/types.js",
    "content": "'use strict'\n\n/**\n * Known light types as constants. Light type values are\n * in the range of 0x6d0000 - 0x6dffff.\n *\n * @module material/types\n */\n\n/** @typedef {Number} MaterialType */\n\nexport const BasicMaterialType = 0x6d0000\nexport const FlatMaterialType = 0x6d0001\nexport const PhongMaterialType = 0x6d0002\nexport const LambertMaterialType = 0x6d0003\n",
    "static": true,
    "longname": "src/material/types.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 418,
    "kind": "typedef",
    "name": "MaterialType",
    "memberof": "src/material/types.js",
    "static": true,
    "longname": "src/material/types.js~MaterialType",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "type": {
      "types": [
        "Number"
      ],
      "optional": false,
      "name": "MaterialType"
    }
  },
  {
    "__docId__": 419,
    "kind": "variable",
    "name": "FlatMaterialType",
    "memberof": "src/material/types.js",
    "static": true,
    "longname": "src/material/types.js~FlatMaterialType",
    "access": null,
    "export": true,
    "importPath": "axis3d/material/types",
    "importStyle": "{FlatMaterialType}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 420,
    "kind": "variable",
    "name": "PhongMaterialType",
    "memberof": "src/material/types.js",
    "static": true,
    "longname": "src/material/types.js~PhongMaterialType",
    "access": null,
    "export": true,
    "importPath": "axis3d/material/types",
    "importStyle": "{PhongMaterialType}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 421,
    "kind": "variable",
    "name": "LambertMaterialType",
    "memberof": "src/material/types.js",
    "static": true,
    "longname": "src/material/types.js~LambertMaterialType",
    "access": null,
    "export": true,
    "importPath": "axis3d/material/types",
    "importStyle": "{LambertMaterialType}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 422,
    "kind": "file",
    "name": "src/math/euler.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport * as VectorSwizzleMap from './vector_swizzle_map'\nimport { Vector } from './vector'\n\nimport ThreeEuler from 'math-euler'\nimport coalesce from 'defined'\nimport mat4 from 'gl-mat4'\n\nconst scratchMat4 = mat4.identity([])\n\n/**\n * The Euler class represents an abstraction around Euler angles.\n *\n * @public\n * @class Euler\n * @implements Vector\n * @extends Vector\n * @see {@link https://en.wikipedia.org/wiki/Euler_angles}\n * @see {@link http://mathworld.wolfram.com/EulerAngles.html}\n * @see {@link http://www.chrobotics.com/library/understanding-euler-angles}\n */\n\nexport class Euler extends Vector {\n\n  /**\n   * Euler class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {?Number} x Rotation angle about the X axis.\n   * @param {?Number} y Rotation angle about the Y axis.\n   * @param {?Number} z Rotation angle about the Z axis.\n   * @param {?String} order Euler angle rotation order.\n   * @throws TypeError\n   */\n\n  constructor(x, y, z, order = 'xyz') {\n    super(coalesce(x, 0), coalesce(y, 0), coalesce(z, 0))\n    if ('string' != typeof order) {\n      throw new TypeError(\n        `Expecting euler order to be a string. Got ${typeof order}.`)\n    }\n\n    /**\n     * Euler angle rotation order.\n     *\n     * @public\n     * @type {String}\n     */\n\n    this.order = order\n  }\n\n  /**\n   * Euler swizzles.\n   *\n   * @public\n   * @static\n   * @method\n   * @return {Array<Array<String>>}\n   */\n\n  static swizzles() {\n    return VectorSwizzleMap.Euler\n  }\n\n  /**\n   * Helper function to compute euler angles from\n   * a given quaternion.\n   *\n   * @public\n   * @function\n   * @param {Quaternion|Array<Nunber>} q Input quaternion.\n   * @param {?String} order Rotation order.\n   * @return {Vector}\n   * @throws TypeError\n   */\n\n  static fromQuaternion(q, order = 'xyz') {\n    if ('string' != typeof order) {\n      throw new TypeError(\n        `Expecting euler order to be a string. Got ${typeof order}.`)\n    }\n    order = order.toUpperCase()\n    const euler = new ThreeEuler()\n    const elements = mat4.fromQuat(scratchMat4, q)\n    euler.setFromRotationMatrix({elements}, order)\n    return new Euler(euler.x, euler.y, euler.z, order)\n  }\n\n  get x() { return this[0] }\n  set x(x) { return this[0] = x }\n\n  get y() { return this[1] }\n  set y(y) { return this[1] = y }\n\n  get z() { return this[2] }\n  set z(z) { return this[2] = z }\n\n  get roll() { return this[0] }\n  set roll(roll) { return this[0] = roll }\n\n  get pitch() { return this[1] }\n  set pitch(pitch) { return this[1] = pitch }\n\n  get yaw() { return this[2] }\n  set yaw(yaw) { return this[2] = yaw }\n}\n",
    "static": true,
    "longname": "src/math/euler.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 423,
    "kind": "variable",
    "name": "scratchMat4",
    "memberof": "src/math/euler.js",
    "static": true,
    "longname": "src/math/euler.js~scratchMat4",
    "access": null,
    "export": false,
    "importPath": "axis3d/math/euler",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 424,
    "kind": "class",
    "name": "Euler",
    "memberof": "src/math/euler.js",
    "static": true,
    "longname": "src/math/euler.js~Euler",
    "access": "public",
    "export": true,
    "importPath": "axis3d/math/euler",
    "importStyle": "{Euler}",
    "description": "The Euler class represents an abstraction around Euler angles.",
    "see": [
      "{@link https://en.wikipedia.org/wiki/Euler_angles}",
      "{@link http://mathworld.wolfram.com/EulerAngles.html}",
      "{@link http://www.chrobotics.com/library/understanding-euler-angles}"
    ],
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Euler"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ],
    "implements": [
      "*"
    ]
  },
  {
    "__docId__": 425,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/math/euler.js~Euler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/euler.js~Euler#constructor",
    "access": "public",
    "description": "Euler class constructor.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Rotation angle about the X axis."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Rotation angle about the Y axis."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "z",
        "description": "Rotation angle about the Z axis."
      },
      {
        "nullable": true,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "order",
        "description": "Euler angle rotation order."
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "TypeError"
      }
    ]
  },
  {
    "__docId__": 426,
    "kind": "member",
    "name": "order",
    "memberof": "src/math/euler.js~Euler",
    "static": false,
    "longname": "src/math/euler.js~Euler#order",
    "access": "public",
    "description": "Euler angle rotation order.",
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 427,
    "kind": "method",
    "name": "swizzles",
    "memberof": "src/math/euler.js~Euler",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/euler.js~Euler.swizzles",
    "access": "public",
    "description": "Euler swizzles.",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array<Array<String>>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 428,
    "kind": "method",
    "name": "fromQuaternion",
    "memberof": "src/math/euler.js~Euler",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/euler.js~Euler.fromQuaternion",
    "access": "public",
    "description": "Helper function to compute euler angles from\na given quaternion.",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Quaternion",
          "Array<Nunber>"
        ],
        "spread": false,
        "optional": false,
        "name": "q",
        "description": "Input quaternion."
      },
      {
        "nullable": true,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "order",
        "description": "Rotation order."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "TypeError"
      }
    ]
  },
  {
    "__docId__": 429,
    "kind": "get",
    "name": "x",
    "memberof": "src/math/euler.js~Euler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/euler.js~Euler#x",
    "access": null,
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 430,
    "kind": "set",
    "name": "x",
    "memberof": "src/math/euler.js~Euler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/euler.js~Euler#x",
    "access": null,
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 431,
    "kind": "get",
    "name": "y",
    "memberof": "src/math/euler.js~Euler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/euler.js~Euler#y",
    "access": null,
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 432,
    "kind": "set",
    "name": "y",
    "memberof": "src/math/euler.js~Euler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/euler.js~Euler#y",
    "access": null,
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 433,
    "kind": "get",
    "name": "z",
    "memberof": "src/math/euler.js~Euler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/euler.js~Euler#z",
    "access": null,
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 434,
    "kind": "set",
    "name": "z",
    "memberof": "src/math/euler.js~Euler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/euler.js~Euler#z",
    "access": null,
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 435,
    "kind": "get",
    "name": "roll",
    "memberof": "src/math/euler.js~Euler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/euler.js~Euler#roll",
    "access": null,
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 436,
    "kind": "set",
    "name": "roll",
    "memberof": "src/math/euler.js~Euler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/euler.js~Euler#roll",
    "access": null,
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 437,
    "kind": "get",
    "name": "pitch",
    "memberof": "src/math/euler.js~Euler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/euler.js~Euler#pitch",
    "access": null,
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 438,
    "kind": "set",
    "name": "pitch",
    "memberof": "src/math/euler.js~Euler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/euler.js~Euler#pitch",
    "access": null,
    "description": null,
    "lineNumber": 109,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 439,
    "kind": "get",
    "name": "yaw",
    "memberof": "src/math/euler.js~Euler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/euler.js~Euler#yaw",
    "access": null,
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 440,
    "kind": "set",
    "name": "yaw",
    "memberof": "src/math/euler.js~Euler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/euler.js~Euler#yaw",
    "access": null,
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 441,
    "kind": "file",
    "name": "src/math/index.js",
    "content": "'use strict'\n\n/**\n * Module exports.\n */\n\nexport * from './quaternion'\nexport * from './matrix'\nexport * from './vector'\nexport * from './euler'\n",
    "static": true,
    "longname": "src/math/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 442,
    "kind": "file",
    "name": "src/math/matrix.js",
    "content": "'use strict'\n\n/** @TODO - implement me */\n\nexport class Matrix { }\nexport class Matrix2 extends Matrix {}\nexport class Matrix3 extends Matrix {}\nexport class Matrix4 extends Matrix {}\n",
    "static": true,
    "longname": "src/math/matrix.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 443,
    "kind": "class",
    "name": "Matrix",
    "memberof": "src/math/matrix.js",
    "static": true,
    "longname": "src/math/matrix.js~Matrix",
    "access": null,
    "export": true,
    "importPath": "axis3d/math/matrix",
    "importStyle": "{Matrix}",
    "description": null,
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@TODO",
        "tagValue": "- implement me"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 444,
    "kind": "class",
    "name": "Matrix2",
    "memberof": "src/math/matrix.js",
    "static": true,
    "longname": "src/math/matrix.js~Matrix2",
    "access": null,
    "export": true,
    "importPath": "axis3d/math/matrix",
    "importStyle": "{Matrix2}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "Matrix"
    ]
  },
  {
    "__docId__": 445,
    "kind": "class",
    "name": "Matrix3",
    "memberof": "src/math/matrix.js",
    "static": true,
    "longname": "src/math/matrix.js~Matrix3",
    "access": null,
    "export": true,
    "importPath": "axis3d/math/matrix",
    "importStyle": "{Matrix3}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "Matrix"
    ]
  },
  {
    "__docId__": 446,
    "kind": "class",
    "name": "Matrix4",
    "memberof": "src/math/matrix.js",
    "static": true,
    "longname": "src/math/matrix.js~Matrix4",
    "access": null,
    "export": true,
    "importPath": "axis3d/math/matrix",
    "importStyle": "{Matrix4}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "Matrix"
    ]
  },
  {
    "__docId__": 447,
    "kind": "file",
    "name": "src/math/quaternion.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport * as VectorSwizzleMap from './vector_swizzle_map'\nimport { Vector } from './vector'\nimport { Euler } from './euler'\n\nimport coalesce from 'defined'\n\n/**\n * The Quaternion class represents an abstraction around a Vector\n * of 4 components that deals with numbers in a complex plane. Quaternions\n * are usefull for representing spatial rotations in 3D.\n *\n * @public\n * @class Quaternion\n * @implements Vector\n * @extends Vector\n * @see {@link http://mathworld.wolfram.com/Quaternion.html}\n * @see {@link https://en.wikipedia.org/wiki/Quaternion}\n * @see {@link https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation}\n */\n\nexport class Quaternion extends Vector {\n\n  /**\n   * Quaternion class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {?Number} x x component of a Quaternion.\n   * @param {?Number} y y component of a Quaternion.\n   * @param {?Number} z z component of a Quaternion.\n   * @param {?Number} w w component of a Quaternion.\n   */\n\n  constructor(x = 0, y = 0, z = 0, w = 1) {\n    super(coalesce(x, 0), coalesce(y, 0), coalesce(z, 0), coalesce(w, 1))\n  }\n\n  /**\n   * Quaternion swizzles.\n   *\n   * @public\n   * @static\n   * @method\n   * @return {Array<Array<String>>}\n   */\n\n  static swizzles() {\n    return VectorSwizzleMap.Quaternion\n  }\n\n  /**\n   * Returns a quaternion set from an input\n   * axis and angle in radians.\n   *\n   * @public\n   * @static\n   * @method\n   * @param {Vector|Array<Number>} angle Axis of rotation.\n   * @param {Number} radians Angle in radians.\n   * @return {Quaternion}\n   */\n\n  static fromAxisAngle(angle, radians) {\n    return quat.setAxisAngle(new Quaternion(), angle, radians)\n  }\n\n  /**\n   * Computes a quaternion from given vector of Euler angles.\n   *\n   * @public\n   * @static\n   * @method\n   * @param {Euler|Array<Number>} euler Euler angles in radians\n   * @param {String} order Rotation order\n   * @return {Quaternion}\n   * @see {@link from http://www.euclideanspace.com/maths/geometry/rotations/conversions/eulerToQuaternion/}\n   * @throws TypeError\n   */\n\n  static fromEuler(euler, order = 'xyz') {\n    if (null == euler || ![...euler].every((x) => x == x && 'number' == typeof x)) {\n      throw new TypeError(\"Expecting euler to have numbers.\")\n    }\n\n    order = order || euler.order || null\n\n    if ('string' != typeof order) {\n      throw new TypeError(\n        `Expecting euler order to be a string. Got ${typeof order}.`)\n    }\n\n    const cx = Math.cos(0.5*euler[0])\n    const cy = Math.cos(0.5*euler[1])\n    const cz = Math.cos(0.5*euler[2])\n    const sx = Math.sin(0.5*euler[0])\n    const sy = Math.sin(0.5*euler[1])\n    const sz = Math.sin(0.5*euler[2])\n\n    let x = 0\n    let y = 0\n    let z = 0\n    let w = 1\n\n    if (order == 'xyz') {\n      x = sx * cy * cz + cx * sy * sz\n      y = cx * sy * cz - sx * cy * sz\n      z = cx * cy * sz + sx * sy * cz\n      w = cx * cy * cz - sx * sy * sz\n    } else if (order == 'yxz') {\n      x = sx * cy * cz + cx * sy * sz\n      y = cx * sy * cz - sx * cy * sz\n      z = cx * cy * sz - sx * sy * cz\n      w = cx * cy * cz + sx * sy * sz\n    } else if (order == 'zxy') {\n      x = sx * cy * cz - cx * sy * sz\n      y = cx * sy * cz + sx * cy * sz\n      z = cx * cy * sz + sx * sy * cz\n      w = cx * cy * cz - sx * sy * sz\n    } else if (order == 'zyx') {\n      x = sx * cy * cz - cx * sy * sz\n      y = cx * sy * cz + sx * cy * sz\n      z = cx * cy * sz - sx * sy * cz\n      w = cx * cy * cz + sx * sy * sz\n    } else if (order == 'yzx') {\n      x = sx * cy * cz + cx * sy * sz\n      y = cx * sy * cz + sx * cy * sz\n      z = cx * cy * sz - sx * sy * cz\n      w = cx * cy * cz - sx * sy * sz\n    } else if (order == 'xzy') {\n      x = sx * cy * cz - cx * sy * sz\n      y = cx * sy * cz - sx * cy * sz\n      z = cx * cy * sz + sx * sy * cz\n      w = cx * cy * cz + sx * sy * sz\n    } else {\n      throw new TypeError(`Unhandled Euler angle order. Got ${order}.`)\n    }\n\n    return new Quaternion(x, y, z, w)\n  }\n\n  get x() { return this[0] }\n  set x(x) { return this[0] = x }\n\n  get y() { return this[1] }\n  set y(y) { return this[1] = y }\n\n  get z() { return this[2] }\n  set z(z) { return this[2] = z }\n\n  get w() { return this[3] }\n  set w(w) { return this[3] = w }\n}\n",
    "static": true,
    "longname": "src/math/quaternion.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 448,
    "kind": "class",
    "name": "Quaternion",
    "memberof": "src/math/quaternion.js",
    "static": true,
    "longname": "src/math/quaternion.js~Quaternion",
    "access": "public",
    "export": true,
    "importPath": "axis3d/math/quaternion",
    "importStyle": "{Quaternion}",
    "description": "The Quaternion class represents an abstraction around a Vector\nof 4 components that deals with numbers in a complex plane. Quaternions\nare usefull for representing spatial rotations in 3D.",
    "see": [
      "{@link http://mathworld.wolfram.com/Quaternion.html}",
      "{@link https://en.wikipedia.org/wiki/Quaternion}",
      "{@link https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation}"
    ],
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Quaternion"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ],
    "implements": [
      "*"
    ]
  },
  {
    "__docId__": 449,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/math/quaternion.js~Quaternion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/quaternion.js~Quaternion#constructor",
    "access": "public",
    "description": "Quaternion class constructor.",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x component of a Quaternion."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y component of a Quaternion."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "z",
        "description": "z component of a Quaternion."
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": "w component of a Quaternion."
      }
    ]
  },
  {
    "__docId__": 450,
    "kind": "method",
    "name": "swizzles",
    "memberof": "src/math/quaternion.js~Quaternion",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/quaternion.js~Quaternion.swizzles",
    "access": "public",
    "description": "Quaternion swizzles.",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array<Array<String>>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 451,
    "kind": "method",
    "name": "fromAxisAngle",
    "memberof": "src/math/quaternion.js~Quaternion",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/quaternion.js~Quaternion.fromAxisAngle",
    "access": "public",
    "description": "Returns a quaternion set from an input\naxis and angle in radians.",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector",
          "Array<Number>"
        ],
        "spread": false,
        "optional": false,
        "name": "angle",
        "description": "Axis of rotation."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "radians",
        "description": "Angle in radians."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Quaternion"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 452,
    "kind": "method",
    "name": "fromEuler",
    "memberof": "src/math/quaternion.js~Quaternion",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/quaternion.js~Quaternion.fromEuler",
    "access": "public",
    "description": "Computes a quaternion from given vector of Euler angles.",
    "see": [
      "{@link from http://www.euclideanspace.com/maths/geometry/rotations/conversions/eulerToQuaternion/}"
    ],
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Euler",
          "Array<Number>"
        ],
        "spread": false,
        "optional": false,
        "name": "euler",
        "description": "Euler angles in radians"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "order",
        "description": "Rotation order"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Quaternion"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "TypeError"
      }
    ]
  },
  {
    "__docId__": 453,
    "kind": "get",
    "name": "x",
    "memberof": "src/math/quaternion.js~Quaternion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/quaternion.js~Quaternion#x",
    "access": null,
    "description": null,
    "lineNumber": 147,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 454,
    "kind": "set",
    "name": "x",
    "memberof": "src/math/quaternion.js~Quaternion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/quaternion.js~Quaternion#x",
    "access": null,
    "description": null,
    "lineNumber": 148,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 455,
    "kind": "get",
    "name": "y",
    "memberof": "src/math/quaternion.js~Quaternion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/quaternion.js~Quaternion#y",
    "access": null,
    "description": null,
    "lineNumber": 150,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 456,
    "kind": "set",
    "name": "y",
    "memberof": "src/math/quaternion.js~Quaternion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/quaternion.js~Quaternion#y",
    "access": null,
    "description": null,
    "lineNumber": 151,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 457,
    "kind": "get",
    "name": "z",
    "memberof": "src/math/quaternion.js~Quaternion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/quaternion.js~Quaternion#z",
    "access": null,
    "description": null,
    "lineNumber": 153,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 458,
    "kind": "set",
    "name": "z",
    "memberof": "src/math/quaternion.js~Quaternion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/quaternion.js~Quaternion#z",
    "access": null,
    "description": null,
    "lineNumber": 154,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 459,
    "kind": "get",
    "name": "w",
    "memberof": "src/math/quaternion.js~Quaternion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/quaternion.js~Quaternion#w",
    "access": null,
    "description": null,
    "lineNumber": 156,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 460,
    "kind": "set",
    "name": "w",
    "memberof": "src/math/quaternion.js~Quaternion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/quaternion.js~Quaternion#w",
    "access": null,
    "description": null,
    "lineNumber": 157,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 461,
    "kind": "file",
    "name": "src/math/vector.js",
    "content": "'use strict'\n/**\n\n * Module dependencies.\n */\n\nimport { define, isArrayLike } from '../utils'\nimport * as VectorSwizzleMap from './vector_swizzle_map'\n\nimport getPermutations from 'get-unique-permutations'\nimport coalesce from 'defined'\nimport window from 'global/window'\n\n/** @virtual {TypedArray} https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray */\n\nconst TypedArray = Object.getPrototypeOf(Float32Array.prototype).constructor\n\n/**\n * Predicate boolean to help determine if localStorage\n * is available on the client.\n */\n\nconst hasLocalStorage = Boolean(\n  'object' == window.localStorage &&\n  'function' == typeof window.localStorage.getItem &&\n  'function' == typeof window.localStorage.setItem\n)\n\n/**\n * Vector swizzle component permutations cache local storage string name.\n * @private\n */\n\nconst kPermutationsCacheStringName = 'axis3d:vector:permutations:cache'\n\n/**\n * Cached computed vector component permutations.\n * @private\n */\n\nconst permutationsCache = false == hasLocalStorage ? {} : JSON.parse(\n  window.localStorage.getItem(kPermutationsCacheStringName) ||\n  '{}'\n)\n\n/**\n * The Vector class represents the base class for various vector\n * types.\n *\n * @public\n * @abstract\n * @class Vector\n * @extends Array\n */\n\nexport class Vector {\n\n  /**\n   * Vector class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {...Mixed} input\n   */\n\n  constructor(...input) {\n    if (\n      isArrayLike(input[0]) ||\n      input[0] instanceof Vector ||\n      input[0] instanceof TypedArray\n    ) {\n      input = input[0]\n    }\n\n    let elements = null\n\n    if (input.every((i) => i instanceof TypedArray)) {\n      elements = new Float32Array([\n        ...input.reduce((x, y) => x.concat([...y]), [])\n      ])\n    } else if (input instanceof TypedArray) {\n      elements = input\n    } else {\n      elements = new Float32Array([...input])\n    }\n\n    define(this, 'elements', { get: () => elements })\n\n    for (let i = 0; i < elements.length; ++i) {\n      define(this, i, {\n        enumerable: true,\n        get: () => elements[i],\n        set: (v) => {\n          elements[i] = v\n          this.onchange(i, v)\n        },\n      })\n    }\n\n    if ('function' == typeof this.constructor.swizzles) {\n      let permutations = []\n      if (permutationsCache[this.constructor.name]) {\n        permutations = permutationsCache[this.constructor.name]\n      } else {\n        for (const swizzle of this.constructor.swizzles()) {\n          permutations.push(...getPermutations(swizzle))\n        }\n      }\n\n      // update cache with permutations\n      permutationsCache[this.constructor.name] = Object.assign(\n        permutationsCache[this.constructor.name] || [],\n        permutations)\n\n      // cache permutations locally if possible\n      if (hasLocalStorage) {\n        window.localStorage.setItem(\n          kPermutationsCacheStringName,\n          JSON.stringify(permutationsCache))\n      }\n\n      for (const permutation of permutations) {\n        const identifier = permutation.join('')\n\n        if (this.hasOwnProperty(identifier)) {\n          continue\n        }\n\n        define(this, identifier, {\n          get: () => {\n            const values = []\n            for (const component of permutation) {\n              values.push(this[component])\n            }\n\n            if (/Vector/.test(this.constructor.name)) {\n              switch (values.length) {\n                case 4: return new Vector4(...values)\n                case 3: return new Vector3(...values)\n                case 2: return new Vector2(...values)\n                case 1: return new Vector1(...values)\n              }\n            } else {\n              return new this.constructor(...values)\n            }\n          }\n        })\n      }\n    }\n  }\n\n  /**\n   * Abstract onchange callback\n   *\n   * @public\n   * @abstract\n   * @method\n   * @param {Number} index\n   * @param {Mixed} value\n   */\n\n  onchange(index, value) {}\n\n\n  /**\n   * Vector length getter.\n   *\n   * @public\n   * @accessor\n   * @type {Number}\n   */\n\n  get length() { return this.elements.length }\n\n  /**\n   * Set components-wise values\n   *\n   * @public\n   * @method\n   * @param {...Mixed|Vector} args\n   * @return {Vector}\n   */\n\n  set(...args) {\n    if (\n      isArrayLike(args[0]) ||\n      args[0] instanceof Vector ||\n      args[0] instanceof TypedArray\n    ) {\n      return this.set(...args[0])\n    }\n    for (let i = 0 ; i < args.length; ++i) {\n      this[i] = coalesce(args[i], this[i])\n    }\n    return this\n  }\n\n  /**\n   * Get value from internal elements array at\n   * a specified offset.\n   *\n   * @public\n   * @method\n   * @param {Number} offset\n   * @return {Mixed|null}\n   */\n\n  get(offset) {\n    return this.elements[offset || 0] || 0\n  }\n\n  /**\n   * Converts the vector into\n   * a normal Array.\n   *\n   * @public\n   * @method\n   * @return {Array}\n   */\n\n  toArray() {\n    return [...this.elements]\n  }\n\n  /**\n   * Returns a JSON serializable value.\n   *\n   * @public\n   * @method\n   * @return {Array}\n   */\n\n  toJSON() {\n    return this.toArray()\n  }\n\n  /**\n   * Returns the underlying vector\n   * array value.\n   *\n   * @public\n   * @method\n   * @return {Float64Array}\n   */\n\n  valueOf() {\n    return this.elements\n  }\n\n  /**\n   * Iterator protocol implementation.\n   *\n   * @public\n   * @method\n   * @implements Symbol.iterator\n   * @return {Object}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}\n   */\n\n  [Symbol.iterator]() {\n    return this.toArray()[Symbol.iterator]()\n  }\n}\n\n// given a Vector some array functionality\nObject.setPrototypeOf(Vector.prototype, Array.prototype)\n\n/**\n * The Vector2 class represents a vector with one components.\n *\n * @public\n * @class Vector1\n * @implements Vector\n * @extends Vector\n */\n\nexport class Vector1 extends Vector {\n\n  /**\n   * Vector1 class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {Mixed} x\n   */\n\n  constructor(x = 0) {\n    super(x)\n  }\n\n  static swizzles() {\n    return VectorSwizzleMap.Vector\n  }\n}\n\n/**\n * The Vector2 class represents a vector with two components.\n *\n * @public\n * @class Vector2\n * @implements Vector\n * @extends Vector\n */\n\nexport class Vector2 extends Vector {\n\n  /**\n   * Vector2 class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {Mixed} x\n   * @param {Mixed} y\n   */\n\n  constructor(x = 0, y = 0) {\n    super(x, y)\n  }\n\n  static swizzles() {\n    return VectorSwizzleMap.Vector\n  }\n\n  get x() { return this[0] }\n  set x(x) { return this[0] = x }\n\n  get y() { return this[1] }\n  set y(y) { return this[1] = y }\n\n}\n\n/**\n * The Vector3 class represents a vector with two components.\n *\n * @public\n * @class Vector3\n * @implements Vector\n * @extends Vector2\n */\n\nexport class Vector3 extends Vector {\n\n  /**\n   * Vector3 class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {Mixed} x\n   * @param {Mixed} y\n   * @param {Mixed} z\n   */\n\n  constructor(x = 0, y = 0, z = 0) {\n    super(x, y, z)\n  }\n\n  static swizzles() {\n    return VectorSwizzleMap.Vector\n  }\n\n  get x() { return this[0] }\n  set x(x) { return this[0] = x }\n\n  get y() { return this[1] }\n  set y(y) { return this[1] = y }\n\n  get z() { return this[2] }\n  set z(z) { return this[2] = z }\n\n  get r() { return this[0] }\n  set r(r) { return this[0] = r }\n\n  get g() { return this[1] }\n  set g(g) { return this[1] = g }\n\n  get b() { return this[2] }\n  set b(b) { return this[2] = b }\n}\n\n/**\n * The Vector4 class represents a vector with two components.\n *\n * @public\n * @class Vector4\n * @implements Vector\n * @extends Vector\n */\n\nexport class Vector4 extends Vector {\n\n  /**\n   * Vector4 class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} z\n   * @param {Number} w\n   */\n\n  constructor(x = 0, y = 0, z = 0, w = 0) {\n    super(x, y, z, w)\n  }\n\n  static swizzles() {\n    return VectorSwizzleMap.Vector\n  }\n\n  get x() { return this[0] }\n  set x(x) { return this[0] = x }\n\n  get y() { return this[1] }\n  set y(y) { return this[1] = y }\n\n  get z() { return this[2] }\n  set z(z) { return this[2] = z }\n\n  get w() { return this[3] }\n  set w(w) { return this[3] = w }\n\n  get r() { return this[0] }\n  set r(r) { return this[0] = r }\n\n  get g() { return this[1] }\n  set g(g) { return this[1] = g }\n\n  get b() { return this[2] }\n  set b(b) { return this[2] = b }\n\n  get a() { return this[3] }\n  set a(a) { return this[3] = a }\n}\n",
    "static": true,
    "longname": "src/math/vector.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 462,
    "kind": "variable",
    "name": "TypedArray",
    "memberof": "src/math/vector.js",
    "static": true,
    "longname": "src/math/vector.js~TypedArray",
    "access": null,
    "export": false,
    "importPath": "axis3d/math/vector",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@virtual",
        "tagValue": "{TypedArray} https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 463,
    "kind": "variable",
    "name": "hasLocalStorage",
    "memberof": "src/math/vector.js",
    "static": true,
    "longname": "src/math/vector.js~hasLocalStorage",
    "access": null,
    "export": false,
    "importPath": "axis3d/math/vector",
    "importStyle": null,
    "description": "Predicate boolean to help determine if localStorage\nis available on the client.",
    "lineNumber": 23,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 464,
    "kind": "variable",
    "name": "kPermutationsCacheStringName",
    "memberof": "src/math/vector.js",
    "static": true,
    "longname": "src/math/vector.js~kPermutationsCacheStringName",
    "access": "private",
    "export": false,
    "importPath": "axis3d/math/vector",
    "importStyle": null,
    "description": "Vector swizzle component permutations cache local storage string name.",
    "lineNumber": 34,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 465,
    "kind": "variable",
    "name": "permutationsCache",
    "memberof": "src/math/vector.js",
    "static": true,
    "longname": "src/math/vector.js~permutationsCache",
    "access": "private",
    "export": false,
    "importPath": "axis3d/math/vector",
    "importStyle": null,
    "description": "Cached computed vector component permutations.",
    "lineNumber": 41,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 466,
    "kind": "class",
    "name": "Vector",
    "memberof": "src/math/vector.js",
    "static": true,
    "longname": "src/math/vector.js~Vector",
    "access": "public",
    "export": true,
    "importPath": "axis3d/math/vector",
    "importStyle": "{Vector}",
    "description": "The Vector class represents the base class for various vector\ntypes.",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Vector"
      }
    ],
    "abstract": true,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 467,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/math/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector#constructor",
    "access": "public",
    "description": "Vector class constructor.",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "...Mixed"
        ],
        "spread": true,
        "optional": false,
        "name": "input",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 468,
    "kind": "method",
    "name": "onchange",
    "memberof": "src/math/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector#onchange",
    "access": "public",
    "description": "Abstract onchange callback",
    "lineNumber": 162,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Mixed"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "abstract": true
  },
  {
    "__docId__": 469,
    "kind": "get",
    "name": "length",
    "memberof": "src/math/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector#length",
    "access": "public",
    "description": "Vector length getter.",
    "lineNumber": 173,
    "unknown": [
      {
        "tagName": "@accessor",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 470,
    "kind": "method",
    "name": "set",
    "memberof": "src/math/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector#set",
    "access": "public",
    "description": "Set components-wise values",
    "lineNumber": 184,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "...Mixed",
          "Vector"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 471,
    "kind": "member",
    "name": "[i]",
    "memberof": "src/math/vector.js~Vector",
    "static": false,
    "longname": "src/math/vector.js~Vector#[i]",
    "access": null,
    "description": null,
    "lineNumber": 193,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 472,
    "kind": "method",
    "name": "get",
    "memberof": "src/math/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector#get",
    "access": "public",
    "description": "Get value from internal elements array at\na specified offset.",
    "lineNumber": 208,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "offset",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Mixed",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 473,
    "kind": "method",
    "name": "toArray",
    "memberof": "src/math/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector#toArray",
    "access": "public",
    "description": "Converts the vector into\na normal Array.",
    "lineNumber": 221,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 474,
    "kind": "method",
    "name": "toJSON",
    "memberof": "src/math/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector#toJSON",
    "access": "public",
    "description": "Returns a JSON serializable value.",
    "lineNumber": 233,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 475,
    "kind": "method",
    "name": "valueOf",
    "memberof": "src/math/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector#valueOf",
    "access": "public",
    "description": "Returns the underlying vector\narray value.",
    "lineNumber": 246,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Float64Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 476,
    "kind": "method",
    "name": "[Symbol.iterator]",
    "memberof": "src/math/vector.js~Vector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector#[Symbol.iterator]",
    "access": "public",
    "description": "Iterator protocol implementation.",
    "see": [
      "{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}"
    ],
    "lineNumber": 260,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": ""
      },
      {
        "tagName": "@implements",
        "tagValue": "Symbol.iterator"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 477,
    "kind": "class",
    "name": "Vector1",
    "memberof": "src/math/vector.js",
    "static": true,
    "longname": "src/math/vector.js~Vector1",
    "access": "public",
    "export": true,
    "importPath": "axis3d/math/vector",
    "importStyle": "{Vector1}",
    "description": "The Vector2 class represents a vector with one components.",
    "lineNumber": 277,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Vector1"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ],
    "implements": [
      "*"
    ]
  },
  {
    "__docId__": 478,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/math/vector.js~Vector1",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector1#constructor",
    "access": "public",
    "description": "Vector1 class constructor.",
    "lineNumber": 287,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Mixed"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 479,
    "kind": "method",
    "name": "swizzles",
    "memberof": "src/math/vector.js~Vector1",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector.js~Vector1.swizzles",
    "access": null,
    "description": null,
    "lineNumber": 291,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 480,
    "kind": "class",
    "name": "Vector2",
    "memberof": "src/math/vector.js",
    "static": true,
    "longname": "src/math/vector.js~Vector2",
    "access": "public",
    "export": true,
    "importPath": "axis3d/math/vector",
    "importStyle": "{Vector2}",
    "description": "The Vector2 class represents a vector with two components.",
    "lineNumber": 305,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Vector2"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ],
    "implements": [
      "*"
    ]
  },
  {
    "__docId__": 481,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/math/vector.js~Vector2",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector2#constructor",
    "access": "public",
    "description": "Vector2 class constructor.",
    "lineNumber": 316,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Mixed"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Mixed"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 482,
    "kind": "method",
    "name": "swizzles",
    "memberof": "src/math/vector.js~Vector2",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector.js~Vector2.swizzles",
    "access": null,
    "description": null,
    "lineNumber": 320,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 483,
    "kind": "get",
    "name": "x",
    "memberof": "src/math/vector.js~Vector2",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector2#x",
    "access": null,
    "description": null,
    "lineNumber": 324,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 484,
    "kind": "set",
    "name": "x",
    "memberof": "src/math/vector.js~Vector2",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector2#x",
    "access": null,
    "description": null,
    "lineNumber": 325,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 485,
    "kind": "get",
    "name": "y",
    "memberof": "src/math/vector.js~Vector2",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector2#y",
    "access": null,
    "description": null,
    "lineNumber": 327,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 486,
    "kind": "set",
    "name": "y",
    "memberof": "src/math/vector.js~Vector2",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector2#y",
    "access": null,
    "description": null,
    "lineNumber": 328,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 487,
    "kind": "class",
    "name": "Vector3",
    "memberof": "src/math/vector.js",
    "static": true,
    "longname": "src/math/vector.js~Vector3",
    "access": "public",
    "export": true,
    "importPath": "axis3d/math/vector",
    "importStyle": "{Vector3}",
    "description": "The Vector3 class represents a vector with two components.",
    "lineNumber": 341,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Vector3"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ],
    "implements": [
      "*"
    ]
  },
  {
    "__docId__": 488,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/math/vector.js~Vector3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector3#constructor",
    "access": "public",
    "description": "Vector3 class constructor.",
    "lineNumber": 353,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Mixed"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Mixed"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Mixed"
        ],
        "spread": false,
        "optional": false,
        "name": "z",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 489,
    "kind": "method",
    "name": "swizzles",
    "memberof": "src/math/vector.js~Vector3",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector.js~Vector3.swizzles",
    "access": null,
    "description": null,
    "lineNumber": 357,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 490,
    "kind": "get",
    "name": "x",
    "memberof": "src/math/vector.js~Vector3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector3#x",
    "access": null,
    "description": null,
    "lineNumber": 361,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 491,
    "kind": "set",
    "name": "x",
    "memberof": "src/math/vector.js~Vector3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector3#x",
    "access": null,
    "description": null,
    "lineNumber": 362,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 492,
    "kind": "get",
    "name": "y",
    "memberof": "src/math/vector.js~Vector3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector3#y",
    "access": null,
    "description": null,
    "lineNumber": 364,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 493,
    "kind": "set",
    "name": "y",
    "memberof": "src/math/vector.js~Vector3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector3#y",
    "access": null,
    "description": null,
    "lineNumber": 365,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 494,
    "kind": "get",
    "name": "z",
    "memberof": "src/math/vector.js~Vector3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector3#z",
    "access": null,
    "description": null,
    "lineNumber": 367,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 495,
    "kind": "set",
    "name": "z",
    "memberof": "src/math/vector.js~Vector3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector3#z",
    "access": null,
    "description": null,
    "lineNumber": 368,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 496,
    "kind": "get",
    "name": "r",
    "memberof": "src/math/vector.js~Vector3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector3#r",
    "access": null,
    "description": null,
    "lineNumber": 370,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 497,
    "kind": "set",
    "name": "r",
    "memberof": "src/math/vector.js~Vector3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector3#r",
    "access": null,
    "description": null,
    "lineNumber": 371,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 498,
    "kind": "get",
    "name": "g",
    "memberof": "src/math/vector.js~Vector3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector3#g",
    "access": null,
    "description": null,
    "lineNumber": 373,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 499,
    "kind": "set",
    "name": "g",
    "memberof": "src/math/vector.js~Vector3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector3#g",
    "access": null,
    "description": null,
    "lineNumber": 374,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 500,
    "kind": "get",
    "name": "b",
    "memberof": "src/math/vector.js~Vector3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector3#b",
    "access": null,
    "description": null,
    "lineNumber": 376,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 501,
    "kind": "set",
    "name": "b",
    "memberof": "src/math/vector.js~Vector3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector3#b",
    "access": null,
    "description": null,
    "lineNumber": 377,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 502,
    "kind": "class",
    "name": "Vector4",
    "memberof": "src/math/vector.js",
    "static": true,
    "longname": "src/math/vector.js~Vector4",
    "access": "public",
    "export": true,
    "importPath": "axis3d/math/vector",
    "importStyle": "{Vector4}",
    "description": "The Vector4 class represents a vector with two components.",
    "lineNumber": 389,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Vector4"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ],
    "implements": [
      "*"
    ]
  },
  {
    "__docId__": 503,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/math/vector.js~Vector4",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector4#constructor",
    "access": "public",
    "description": "Vector4 class constructor.",
    "lineNumber": 402,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "z",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 504,
    "kind": "method",
    "name": "swizzles",
    "memberof": "src/math/vector.js~Vector4",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector.js~Vector4.swizzles",
    "access": null,
    "description": null,
    "lineNumber": 406,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 505,
    "kind": "get",
    "name": "x",
    "memberof": "src/math/vector.js~Vector4",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector4#x",
    "access": null,
    "description": null,
    "lineNumber": 410,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 506,
    "kind": "set",
    "name": "x",
    "memberof": "src/math/vector.js~Vector4",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector4#x",
    "access": null,
    "description": null,
    "lineNumber": 411,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 507,
    "kind": "get",
    "name": "y",
    "memberof": "src/math/vector.js~Vector4",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector4#y",
    "access": null,
    "description": null,
    "lineNumber": 413,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 508,
    "kind": "set",
    "name": "y",
    "memberof": "src/math/vector.js~Vector4",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector4#y",
    "access": null,
    "description": null,
    "lineNumber": 414,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 509,
    "kind": "get",
    "name": "z",
    "memberof": "src/math/vector.js~Vector4",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector4#z",
    "access": null,
    "description": null,
    "lineNumber": 416,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 510,
    "kind": "set",
    "name": "z",
    "memberof": "src/math/vector.js~Vector4",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector4#z",
    "access": null,
    "description": null,
    "lineNumber": 417,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 511,
    "kind": "get",
    "name": "w",
    "memberof": "src/math/vector.js~Vector4",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector4#w",
    "access": null,
    "description": null,
    "lineNumber": 419,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 512,
    "kind": "set",
    "name": "w",
    "memberof": "src/math/vector.js~Vector4",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector4#w",
    "access": null,
    "description": null,
    "lineNumber": 420,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 513,
    "kind": "get",
    "name": "r",
    "memberof": "src/math/vector.js~Vector4",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector4#r",
    "access": null,
    "description": null,
    "lineNumber": 422,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 514,
    "kind": "set",
    "name": "r",
    "memberof": "src/math/vector.js~Vector4",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector4#r",
    "access": null,
    "description": null,
    "lineNumber": 423,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 515,
    "kind": "get",
    "name": "g",
    "memberof": "src/math/vector.js~Vector4",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector4#g",
    "access": null,
    "description": null,
    "lineNumber": 425,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 516,
    "kind": "set",
    "name": "g",
    "memberof": "src/math/vector.js~Vector4",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector4#g",
    "access": null,
    "description": null,
    "lineNumber": 426,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 517,
    "kind": "get",
    "name": "b",
    "memberof": "src/math/vector.js~Vector4",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector4#b",
    "access": null,
    "description": null,
    "lineNumber": 428,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 518,
    "kind": "set",
    "name": "b",
    "memberof": "src/math/vector.js~Vector4",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector4#b",
    "access": null,
    "description": null,
    "lineNumber": 429,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 519,
    "kind": "get",
    "name": "a",
    "memberof": "src/math/vector.js~Vector4",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector4#a",
    "access": null,
    "description": null,
    "lineNumber": 431,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 520,
    "kind": "set",
    "name": "a",
    "memberof": "src/math/vector.js~Vector4",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/vector.js~Vector4#a",
    "access": null,
    "description": null,
    "lineNumber": 432,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 521,
    "kind": "file",
    "name": "src/math/vector_swizzle_map.js",
    "content": "'use strict'\n\n/**\n * Helper function to filter out rgba cute components on\n * a given vector swizzle map.\n *\n * @private\n */\n\nconst filterRgba = (vector) => vector\n  .map((v) => v.filter((x) => !/[rgba]/.test(x)))\n  .filter((v) => v.length)\n\n/**\n * Helper function to filter out xyzw cute components on\n * a given vector swizzle map.\n *\n * @private\n */\n\nconst filterXyzw = (vector) => vector\n  .map((v) => v.filter((x) => !/[xyzw]/.test(x)))\n  .filter((v) => v.length)\n\n/**\n * Returns the ordinal offset of a given\n * swizzle identifier.\n *\n * @public\n * @function\n * @param {String} identifier Swizzle identifier.\n * @return {Number}\n */\n\nexport const offsetOf = (identifier) => {\n  for (let i = 0; i < offsets.length; ++i) {\n    if (offsets[i].indexOf(identifier) > -1) {\n      return i\n    }\n  }\n  return -1\n}\n\n/**\n * Swizzle identifier ordinal offsets.\n *\n * @public\n * @const\n * @type {Array<Array<String>>}\n */\n\nexport const offsets = [\n  ['x', 'r'],\n  ['y', 'g'],\n  ['z', 'b'],\n  ['w', 'a'],\n]\n\n/**\n * Vector1 class swizzle mapping.\n *\n * @public\n * @const\n * @type {Array<Array<String>>}\n */\n\nexport const Vector1 = [ ]\n\n/**\n * Vector2 class swizzle mapping.\n *\n * @public\n * @const\n * @type {Array<Array<String>>}\n */\n\nexport const Vector2 = [\n  ['x', 'y'],\n\n  ['x', 'x'],\n  ['x', 'y'],\n\n  ['y', 'x'],\n  ['y', 'y'],\n\n  ['z', 'x'],\n  ['z', 'y'],\n\n  ['w', 'x'],\n  ['w', 'y'],\n]\n\n/**\n * Vector3 class swizzle mapping.\n *\n * @public\n * @const\n * @type {Array<Array<String>>}\n */\n\nexport const Vector3 = [\n  ['x', 'y', 'z'],\n\n  ['x', 'x', 'x'],\n  ['x', 'x', 'y'],\n  ['x', 'x', 'z'],\n\n  ['y', 'y', 'x'],\n  ['y', 'y', 'y'],\n  ['y', 'y', 'z'],\n\n  ['z', 'z', 'x'],\n  ['z', 'z', 'y'],\n  ['z', 'z', 'z'],\n\n  ['w', 'w', 'x'],\n  ['w', 'w', 'y'],\n  ['w', 'w', 'z'],\n\n  ['r', 'g', 'b'],\n\n  ['r', 'r', 'r'],\n  ['r', 'r', 'g'],\n  ['r', 'r', 'b'],\n\n  ['g', 'g', 'r'],\n  ['g', 'g', 'g'],\n  ['g', 'g', 'b'],\n\n  ['b', 'b', 'r'],\n  ['b', 'b', 'g'],\n  ['b', 'b', 'b'],\n\n  ['a', 'a', 'r'],\n  ['a', 'a', 'g'],\n  ['a', 'a', 'b'],\n]\n\n/**\n * Vector4 class swizzle mapping.\n *\n * @public\n * @const\n * @type {Array<Array<String>>}\n */\n\nexport const Vector4 = [\n  ['x', 'y', 'z', 'w'],\n\n  ['x', 'x', 'x', 'x'],\n  ['x', 'x', 'x', 'y'],\n  ['x', 'x', 'x', 'z'],\n  ['x', 'x', 'x', 'w'],\n\n  ['y', 'y', 'y', 'x'],\n  ['y', 'y', 'y', 'y'],\n  ['y', 'y', 'y', 'z'],\n  ['y', 'y', 'y', 'w'],\n\n  ['z', 'z', 'z', 'x'],\n  ['z', 'z', 'z', 'y'],\n  ['z', 'z', 'z', 'z'],\n  ['z', 'z', 'z', 'w'],\n\n  ['w', 'w', 'w', 'x'],\n  ['w', 'w', 'w', 'y'],\n  ['w', 'w', 'w', 'z'],\n  ['w', 'w', 'w', 'w'],\n\n  ['r', 'g', 'b', 'a'],\n\n  ['r', 'r', 'r', 'r'],\n  ['r', 'r', 'r', 'g'],\n  ['r', 'r', 'r', 'b'],\n  ['r', 'r', 'r', 'a'],\n\n  ['g', 'g', 'g', 'r'],\n  ['g', 'g', 'g', 'g'],\n  ['g', 'g', 'g', 'b'],\n  ['g', 'g', 'g', 'a'],\n\n  ['b', 'b', 'b', 'r'],\n  ['b', 'b', 'b', 'g'],\n  ['b', 'b', 'b', 'b'],\n  ['b', 'b', 'b', 'a'],\n\n  ['a', 'a', 'a', 'r'],\n  ['a', 'a', 'a', 'g'],\n  ['a', 'a', 'a', 'b'],\n  ['a', 'a', 'a', 'a'],\n]\n\n/**\n * A combination of all vector swizzles.\n *\n * @public\n * @const\n * @type {Array<Array<String>>}\n */\n\nexport const Vector = []\n  .concat(Vector1)\n  .concat(Vector2)\n  .concat(Vector3)\n  .concat(Vector4)\n\n/**\n * Euler class swizzle mapping. This map\n * extend Vector3 swizzle mapping and removes\n * rgb swizzles.\n *\n * @public\n * @const\n * @type {Array<Array<String>>}\n */\n\nexport const Euler = filterRgba(Vector3)\n\n/**\n * Quaternion class swizzle mapping. This map\n * extends Vector swizzle mapping and removes\n * rgba swizzles.\n *\n * @public\n * @const\n * @type {Array<Array<String>>}\n */\n\nexport const Quaternion = filterRgba(Vector)\n\n/**\n * Color class swizzle mapping. This map filters xyzw\n * vector component swizzles.\n *\n * @public\n * @const\n * @type {Array<Array<String>>}\n */\n\nexport const Color = filterXyzw(Vector)\n",
    "static": true,
    "longname": "src/math/vector_swizzle_map.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 522,
    "kind": "function",
    "name": "filterRgba",
    "memberof": "src/math/vector_swizzle_map.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector_swizzle_map.js~filterRgba",
    "access": "private",
    "export": false,
    "importPath": "axis3d/math/vector_swizzle_map",
    "importStyle": null,
    "description": "Helper function to filter out rgba cute components on\na given vector swizzle map.",
    "lineNumber": 10,
    "params": [
      {
        "name": "vector",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 523,
    "kind": "function",
    "name": "filterXyzw",
    "memberof": "src/math/vector_swizzle_map.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector_swizzle_map.js~filterXyzw",
    "access": "private",
    "export": false,
    "importPath": "axis3d/math/vector_swizzle_map",
    "importStyle": null,
    "description": "Helper function to filter out xyzw cute components on\na given vector swizzle map.",
    "lineNumber": 21,
    "params": [
      {
        "name": "vector",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 524,
    "kind": "function",
    "name": "offsetOf",
    "memberof": "src/math/vector_swizzle_map.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector_swizzle_map.js~offsetOf",
    "access": "public",
    "export": true,
    "importPath": "axis3d/math/vector_swizzle_map",
    "importStyle": "{offsetOf}",
    "description": "Returns the ordinal offset of a given\nswizzle identifier.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "identifier",
        "description": "Swizzle identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 525,
    "kind": "variable",
    "name": "offsets",
    "memberof": "src/math/vector_swizzle_map.js",
    "static": true,
    "longname": "src/math/vector_swizzle_map.js~offsets",
    "access": "public",
    "export": true,
    "importPath": "axis3d/math/vector_swizzle_map",
    "importStyle": "{offsets}",
    "description": "Swizzle identifier ordinal offsets.",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<Array<String>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 526,
    "kind": "variable",
    "name": "Vector1",
    "memberof": "src/math/vector_swizzle_map.js",
    "static": true,
    "longname": "src/math/vector_swizzle_map.js~Vector1",
    "access": "public",
    "export": true,
    "importPath": "axis3d/math/vector_swizzle_map",
    "importStyle": "{Vector1}",
    "description": "Vector1 class swizzle mapping.",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<Array<String>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 527,
    "kind": "variable",
    "name": "Vector2",
    "memberof": "src/math/vector_swizzle_map.js",
    "static": true,
    "longname": "src/math/vector_swizzle_map.js~Vector2",
    "access": "public",
    "export": true,
    "importPath": "axis3d/math/vector_swizzle_map",
    "importStyle": "{Vector2}",
    "description": "Vector2 class swizzle mapping.",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<Array<String>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 528,
    "kind": "variable",
    "name": "Vector3",
    "memberof": "src/math/vector_swizzle_map.js",
    "static": true,
    "longname": "src/math/vector_swizzle_map.js~Vector3",
    "access": "public",
    "export": true,
    "importPath": "axis3d/math/vector_swizzle_map",
    "importStyle": "{Vector3}",
    "description": "Vector3 class swizzle mapping.",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<Array<String>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 529,
    "kind": "variable",
    "name": "Vector4",
    "memberof": "src/math/vector_swizzle_map.js",
    "static": true,
    "longname": "src/math/vector_swizzle_map.js~Vector4",
    "access": "public",
    "export": true,
    "importPath": "axis3d/math/vector_swizzle_map",
    "importStyle": "{Vector4}",
    "description": "Vector4 class swizzle mapping.",
    "lineNumber": 147,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<Array<String>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 530,
    "kind": "variable",
    "name": "Vector",
    "memberof": "src/math/vector_swizzle_map.js",
    "static": true,
    "longname": "src/math/vector_swizzle_map.js~Vector",
    "access": "public",
    "export": true,
    "importPath": "axis3d/math/vector_swizzle_map",
    "importStyle": "{Vector}",
    "description": "A combination of all vector swizzles.",
    "lineNumber": 201,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<Array<String>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 531,
    "kind": "variable",
    "name": "Euler",
    "memberof": "src/math/vector_swizzle_map.js",
    "static": true,
    "longname": "src/math/vector_swizzle_map.js~Euler",
    "access": "public",
    "export": true,
    "importPath": "axis3d/math/vector_swizzle_map",
    "importStyle": "{Euler}",
    "description": "Euler class swizzle mapping. This map\nextend Vector3 swizzle mapping and removes\nrgb swizzles.",
    "lineNumber": 217,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<Array<String>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 532,
    "kind": "variable",
    "name": "Quaternion",
    "memberof": "src/math/vector_swizzle_map.js",
    "static": true,
    "longname": "src/math/vector_swizzle_map.js~Quaternion",
    "access": "public",
    "export": true,
    "importPath": "axis3d/math/vector_swizzle_map",
    "importStyle": "{Quaternion}",
    "description": "Quaternion class swizzle mapping. This map\nextends Vector swizzle mapping and removes\nrgba swizzles.",
    "lineNumber": 229,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<Array<String>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 533,
    "kind": "variable",
    "name": "Color",
    "memberof": "src/math/vector_swizzle_map.js",
    "static": true,
    "longname": "src/math/vector_swizzle_map.js~Color",
    "access": "public",
    "export": true,
    "importPath": "axis3d/math/vector_swizzle_map",
    "importStyle": "{Color}",
    "description": "Color class swizzle mapping. This map filters xyzw\nvector component swizzles.",
    "lineNumber": 240,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<Array<String>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 534,
    "kind": "file",
    "name": "src/mesh/index.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nexport * from './lines'\n",
    "static": true,
    "longname": "src/mesh/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 535,
    "kind": "file",
    "name": "src/mesh/lines.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { incrementStat } from '../stats'\nimport { Geometry } from '../core/geometry'\n\nimport {\n  MeshAttributes,\n  MeshUniforms,\n  Mesh,\n} from '../core/mesh'\n\nimport ProjectedLines from 'screen-projected-lines'\nimport reindex from 'mesh-reindex'\nimport unindex from 'unindex-mesh'\nimport glslify from 'glslify'\nimport normals from 'normals'\n\n/**\n * The default LinesMesh vertex shader.\n *\n * @public\n * @const\n * @type {String}\n */\n\nexport const kDefaultLinesMeshVertexShader =\n  glslify(__dirname + '/../glsl/mesh/lines/vert.glsl')\n\n/**\n * TBA\n *\n * @public\n * @class LinesMesh\n * @extends Mesh\n */\n\nexport class LinesMesh extends Mesh {\n\n  /**\n   * LinesMesh class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!Context} ctx Axis3D render context.\n   * @param {Object} initialState\n   */\n\n  constructor(ctx, initialState = {}) {\n    incrementStat('LinesMesh')\n    const vert = kDefaultLinesMeshVertexShader\n\n    let {\n      geometry,\n      thickness: initialThickness = 0.005,\n    } = initialState\n\n    let {complex = geometry} = geometry\n\n    const cells = complex.cells.map((cell) => cell.slice())\n    const flattened = reindex(unindex(complex.positions, cells))\n    complex.normals = normals.vertexNormals(flattened.cells, flattened.positions)\n    Object.assign({}, complex, cells)\n\n    const lines = ProjectedLines(complex, {\n      attributes: {normals: complex.normals}\n    })\n\n    lines.normals = lines.attributes.normals\n    geometry = new Geometry({complex: lines, flatten: false})\n    geometry.complex.normals = lines.normals\n    initialState.geometry = geometry\n    super(ctx, {\n      ...initialState,\n      primitive: 'triangles',\n      geometry,\n      vert,\n\n      uniforms: Object.assign(new MeshUniforms(ctx, initialState), {\n        thickness: ({}, {thickness = initialThickness}) => thickness,\n      }),\n\n      attributes: Object.assign(new MeshAttributes(ctx, initialState), {\n        nextPosition: lines.nextPositions,\n        direction: lines.directions,\n      })\n    })\n  }\n}\n",
    "static": true,
    "longname": "src/mesh/lines.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 536,
    "kind": "variable",
    "name": "kDefaultLinesMeshVertexShader",
    "memberof": "src/mesh/lines.js",
    "static": true,
    "longname": "src/mesh/lines.js~kDefaultLinesMeshVertexShader",
    "access": "public",
    "export": true,
    "importPath": "axis3d/mesh/lines",
    "importStyle": "{kDefaultLinesMeshVertexShader}",
    "description": "The default LinesMesh vertex shader.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 537,
    "kind": "class",
    "name": "LinesMesh",
    "memberof": "src/mesh/lines.js",
    "static": true,
    "longname": "src/mesh/lines.js~LinesMesh",
    "access": "public",
    "export": true,
    "importPath": "axis3d/mesh/lines",
    "importStyle": "{LinesMesh}",
    "description": "TBA",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "LinesMesh"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 538,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/mesh/lines.js~LinesMesh",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mesh/lines.js~LinesMesh#constructor",
    "access": "public",
    "description": "LinesMesh class constructor.",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": "Axis3D render context."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialState",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 539,
    "kind": "file",
    "name": "src/stats.js",
    "content": "'use strict'\n\n/**\n * Internal stats object.\n *\n * @type {Object<String, Array<Stat>>}\n * @private\n */\n\nconst stats = {}\n\n/**\n * Creates a named stats list, if it does not exists.\n *\n * @public\n * @function\n * @param {!String} name\n * @return {Array}\n * @throws StatNameError\n */\n\nexport function createStatList(name) {\n  if ('string' != typeof name) {\n    throw new StatNameError(name)\n  } else if (null == stats[name]) {\n    stats[name] = []\n  }\n  return stats[name]\n}\n\n/**\n * Registers a named state with optional information.\n *\n * @public\n * @function\n * @param {!String} name\n * @param {?Mixed} info\n * @return {Stat}\n * @throws StatNameError\n */\n\nexport function registerStat(name, info) {\n  createStatList(name)\n  const stat = new Stat(name, info)\n  stats[name].push(stat)\n  return stat\n}\n\n/**\n * Fetches tail of a named stat and registers a new stat\n * with the tail info incremented if available.\n *\n * @public\n * @function\n * @param {!String} name\n * @param {?Number} inc\n * @return {Number}\n * @throws StatNameError\n */\n\nexport function incrementStat(name, inc = 1) {\n  createStatList(name)\n  const tail = tailStat(name)\n  let value = inc\n  if (tail) {\n    value = (tail.info || 0) + inc\n  }\n  registerStat(name, value)\n  return value\n}\n\n/**\n * Fetches tail of a named stat and registers a new stat\n * with the tail info decremented if available.\n *\n * @public\n * @function\n * @param {!String} name\n * @param {?Number} dec\n * @return {Number}\n * @throws StatNameError\n */\n\nexport function decrementStat(name, dec = 1) {\n  createStatList(name)\n  const tail = tailStat(name)\n  let value = 0\n  if (tail) {\n    value = tail.info - dec\n  }\n  registerStat(name, value)\n  return value\n}\n\n/**\n * Removes all named stats.\n *\n * @public\n * @function\n * @param {!String} name\n * @throws StatNameError\n */\n\nexport function clearStats(name) {\n  if ('string' != typeof name) {\n    throw new StatNameError(name)\n  } else if (stats[name] && Array.isArray(stats[name])) {\n    stats[name].splice(stats[name.length])\n  } else {\n    stats[name] = []\n  }\n}\n\n/**\n * Returns the first stat by name.\n *\n * @public\n * @function\n * @param {!String} name\n * @return {Mixed}\n * @throws StatNameError\n */\n\nexport function headStat(name) {\n  if ('string' != typeof name) {\n    throw new StatNameError(name)\n  } else if (stats[name]) {\n    return stats[name][0] || null\n  }\n  return null\n}\n\n/**\n * Returns the first stat by name.\n *\n * @public\n * @function\n * @param {!String} name\n * @return {Mixed}\n * @throws StatNameError\n */\n\nexport function tailStat(name) {\n  if (stats[name]) {\n    const len = stats[name].length || 0\n    return stats[name][len - 1] || null\n  }\n  return null\n}\n\n/**\n * Returns an array of stats by name.\n *\n * @public\n * @function\n * @param {!String} name\n * @return {Array|null}\n * @throws StatNameError\n */\n\nexport function getStats(name) {\n  if ('string' != typeof name) {\n    throw new StatNameError(name)\n  }\n  return stats[name] || null\n}\n\n/**\n * The Stat class represents an encapsulation of optional information\n * with a given name and a recorded timstmap.\n *\n * @public\n * @class Stat\n */\n\nexport class Stat {\n\n  /**\n   * Stat class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {!String} name\n   * @param {?Mixed} info\n   * @throws StatNameError\n   */\n\n  constructor(name, info = null) {\n    if ('string' != typeof name) {\n      throw new StatNameError(name)\n    }\n\n    /**\n     * The name of the stat.\n     *\n     * @public\n     * @type {String}\n     */\n\n    this.name = name\n\n    /**\n     * Optional information associated with the stat.\n     *\n     * @public\n     * @type {Mixed}\n     */\n\n    this.info = info\n\n    /**\n     * Timestamp in milliseconds when the stat was created.\n     *\n     * @public\n     * @type {Number}\n     */\n\n    this.timestamp = Date.now()\n  }\n}\n\n/**\n * StatNameError class.\n *\n * @public\n * @class StatNameError\n * @extends TypeError\n */\n\nexport class StatNameError extends TypeError {\n\n  /**\n   * StatNameError class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {Mixed} name\n   */\n\n  constructor(name) {\n    super(`Expecting stat name to be a string. Got ${typeof name}`)\n  }\n}\n",
    "static": true,
    "longname": "src/stats.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 540,
    "kind": "variable",
    "name": "stats",
    "memberof": "src/stats.js",
    "static": true,
    "longname": "src/stats.js~stats",
    "access": "private",
    "export": false,
    "importPath": "axis3d/stats",
    "importStyle": null,
    "description": "Internal stats object.",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "Object<String, Array<Stat>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 541,
    "kind": "function",
    "name": "createStatList",
    "memberof": "src/stats.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/stats.js~createStatList",
    "access": "public",
    "export": true,
    "importPath": "axis3d/stats",
    "importStyle": "{createStatList}",
    "description": "Creates a named stats list, if it does not exists.",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "StatNameError"
      }
    ]
  },
  {
    "__docId__": 542,
    "kind": "function",
    "name": "registerStat",
    "memberof": "src/stats.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/stats.js~registerStat",
    "access": "public",
    "export": true,
    "importPath": "axis3d/stats",
    "importStyle": "{registerStat}",
    "description": "Registers a named state with optional information.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Mixed"
        ],
        "spread": false,
        "optional": false,
        "name": "info",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Stat"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "StatNameError"
      }
    ]
  },
  {
    "__docId__": 543,
    "kind": "function",
    "name": "incrementStat",
    "memberof": "src/stats.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/stats.js~incrementStat",
    "access": "public",
    "export": true,
    "importPath": "axis3d/stats",
    "importStyle": "{incrementStat}",
    "description": "Fetches tail of a named stat and registers a new stat\nwith the tail info incremented if available.",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "inc",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "StatNameError"
      }
    ]
  },
  {
    "__docId__": 544,
    "kind": "function",
    "name": "decrementStat",
    "memberof": "src/stats.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/stats.js~decrementStat",
    "access": "public",
    "export": true,
    "importPath": "axis3d/stats",
    "importStyle": "{decrementStat}",
    "description": "Fetches tail of a named stat and registers a new stat\nwith the tail info decremented if available.",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dec",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "StatNameError"
      }
    ]
  },
  {
    "__docId__": 545,
    "kind": "function",
    "name": "clearStats",
    "memberof": "src/stats.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/stats.js~clearStats",
    "access": "public",
    "export": true,
    "importPath": "axis3d/stats",
    "importStyle": "{clearStats}",
    "description": "Removes all named stats.",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "StatNameError"
      }
    ]
  },
  {
    "__docId__": 546,
    "kind": "function",
    "name": "headStat",
    "memberof": "src/stats.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/stats.js~headStat",
    "access": "public",
    "export": true,
    "importPath": "axis3d/stats",
    "importStyle": "{headStat}",
    "description": "Returns the first stat by name.",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Mixed"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "StatNameError"
      }
    ]
  },
  {
    "__docId__": 547,
    "kind": "function",
    "name": "tailStat",
    "memberof": "src/stats.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/stats.js~tailStat",
    "access": "public",
    "export": true,
    "importPath": "axis3d/stats",
    "importStyle": "{tailStat}",
    "description": "Returns the first stat by name.",
    "lineNumber": 143,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Mixed"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "StatNameError"
      }
    ]
  },
  {
    "__docId__": 548,
    "kind": "function",
    "name": "getStats",
    "memberof": "src/stats.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/stats.js~getStats",
    "access": "public",
    "export": true,
    "importPath": "axis3d/stats",
    "importStyle": "{getStats}",
    "description": "Returns an array of stats by name.",
    "lineNumber": 161,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array",
        "null"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "StatNameError"
      }
    ]
  },
  {
    "__docId__": 549,
    "kind": "class",
    "name": "Stat",
    "memberof": "src/stats.js",
    "static": true,
    "longname": "src/stats.js~Stat",
    "access": "public",
    "export": true,
    "importPath": "axis3d/stats",
    "importStyle": "{Stat}",
    "description": "The Stat class represents an encapsulation of optional information\nwith a given name and a recorded timstmap.",
    "lineNumber": 176,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Stat"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 550,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/stats.js~Stat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stats.js~Stat#constructor",
    "access": "public",
    "description": "Stat class constructor.",
    "lineNumber": 188,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Mixed"
        ],
        "spread": false,
        "optional": false,
        "name": "info",
        "description": ""
      }
    ],
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "StatNameError"
      }
    ]
  },
  {
    "__docId__": 551,
    "kind": "member",
    "name": "name",
    "memberof": "src/stats.js~Stat",
    "static": false,
    "longname": "src/stats.js~Stat#name",
    "access": "public",
    "description": "The name of the stat.",
    "lineNumber": 200,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 552,
    "kind": "member",
    "name": "info",
    "memberof": "src/stats.js~Stat",
    "static": false,
    "longname": "src/stats.js~Stat#info",
    "access": "public",
    "description": "Optional information associated with the stat.",
    "lineNumber": 209,
    "type": {
      "nullable": null,
      "types": [
        "Mixed"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 553,
    "kind": "member",
    "name": "timestamp",
    "memberof": "src/stats.js~Stat",
    "static": false,
    "longname": "src/stats.js~Stat#timestamp",
    "access": "public",
    "description": "Timestamp in milliseconds when the stat was created.",
    "lineNumber": 218,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 554,
    "kind": "class",
    "name": "StatNameError",
    "memberof": "src/stats.js",
    "static": true,
    "longname": "src/stats.js~StatNameError",
    "access": "public",
    "export": true,
    "importPath": "axis3d/stats",
    "importStyle": "{StatNameError}",
    "description": "StatNameError class.",
    "lineNumber": 230,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "StatNameError"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 555,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/stats.js~StatNameError",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stats.js~StatNameError#constructor",
    "access": "public",
    "description": "StatNameError class constructor.",
    "lineNumber": 240,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Mixed"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 556,
    "kind": "file",
    "name": "src/utils.js",
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport createDebug from 'debug'\nimport window from 'global/window'\nimport clamp from 'clamp'\n\n/** @virtual {HTMLCanvasElement} https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement */\n/** @virtual {HTMLImageElement} https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement */\n\nconst TypedArray = Object.getPrototypeOf(Float32Array.prototype).constructor\n\nconst kLibraryVersion = __AXIS3D_VERSION__\n\n/**\n * Math dependencies.\n *\n * @private\n */\n\nconst {\n  round,\n  floor,\n  pow,\n} = Math\n\n/**\n * Define property helper.\n *\n * @private\n * @function\n * @param {Object} a\n * @param {String} b\n * @param {Object} c\n */\n\nexport const define = (a, b, c) => Object.defineProperty(a, b, { ...c })\n\n/**\n * Converts input degrees to radians\n *\n * @private\n * @function\n * @param {Number} n\n * @return {Number}\n */\n\nexport const radians = (n) => n == n ? (n*Math.PI/180.0) : 0\n\n/**\n * Utility debug output\n *\n * @private\n * @function\n * @param {String} fmt\n * @param {...Mixed} args\n */\n\nexport const debug = createDebug(`[axis@${kLibraryVersion}]`)\n\n/**\n * Simple linear inerpolation function.\n *\n * @private\n * @function\n * @param {Number} v0\n * @param {Number} v1\n * @param {Number} t\n * @return {Number}\n */\n\nexport const lerp = (v0, v1, t) => v0*(1 - t) + v1*t\n\n/**\n * Returns the screen orientation angle.\n * Borrowed from https://github.com/hawksley/eleVR-Web-Player/blob/master/lib/util.js\n *\n * @private\n * @function\n * @return {Number}\n */\n\nexport const getScreenOrientation = () => {\n  switch (window.screen.orientation || window.screen.mozOrientation) {\n    case 'landscape-primary': return 90\n    case 'landscape-secondary': return -90\n    case 'portrait-secondary': return 180\n    case 'portrait-primary': return 0\n  }\n\n  return window.orientation || 0\n}\n\n/**\n * Finds the nearest power of two for a\n * given number value.\n *\n * @private\n * @function\n * @param {Number} value\n * @return {Number}\n */\n\nexport const nearestPowerOfTwo = (value) => pow(2, round(Math.log(value) / Math.LN2))\n\n/**\n * Convert an image or canvas to the nearest power\n * of two.\n * Borrowed from https://github.com/mrdoob/three.js/blob/dev/src/renderers/webgl/WebGLTextures.js\n *\n * @private\n * @function\n * @param {HTMLImageElement|HTMLCanvasElement} image\n * @return {HTMLImageElement|HTMLCanvasElement}\n */\n\nexport const makePowerOfTwo = (image) => {\n\tif (image instanceof HTMLImageElement || image instanceof HTMLCanvasElement) {\n\t\tconst canvas = createCanvas()\n\t\tconst context = canvas.getContext('2d')\n\t\tcanvas.width = nearestPowerOfTwo(image.width)\n\t\tcanvas.height = nearestPowerOfTwo(image.height)\n\t\tcontext.drawImage(image, 0, 0, canvas.width, canvas.height)\n\t\treturn canvas\n\t}\n\n\treturn image\n}\n\n/**\n * Creates a canvas DOM element.\n *\n * @private\n * @function\n * @return {HTMLCanvasElement}\n */\n\nexport const createCanvas = () =>\n  document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas')\n\n/**\n * Scale image using a canvas.\n * Warning: Scaling through the canvas will only work with\n * images that use premultiplied alpha.\n *\n * Borrowed from https://github.com/mrdoob/three.js/blob/dev/src/renderers/webgl/WebGLTextures.js\n *\n * @private\n * @function\n * @param {HTMLImageElement|HTMLCanvasElement} image\n * @param {Number} scale\n * @param {Boolean} scaleNearestPowerOfTwo\n * @return {HTMLImageElement|HTMLCanvasElement}\n */\n\nexport const scaleWithCanvas = (image, scale, scaleNearestPowerOfTwo = false) => {\n  const canvas = createCanvas()\n  const context = canvas.getContext('2d')\n  let {width, height} = image\n\n  if (scaleNearestPowerOfTwo) {\n    width = nearestPowerOfTwo(width)\n    height = nearestPowerOfTwo(height)\n  }\n\n  canvas.width = Math.floor(image.width * scale)\n  canvas.height = Math.floor(image.height * scale)\n  context.drawImage(image, 0, 0, width, height,\n                    0, 0, canvas.width, canvas.height)\n  return canvas\n}\n\n/**\n * Clamp an image to a max size.\n *\n * @private\n * @function\n * @param {HTMLImageElement|HTMLCanvasElement} image\n * @param {Number} maxSize\n * @param {Boolean} scaleNearestPowerOfTwo\n * @return {HTMLImageElement|HTMLCanvasElement}\n */\n\nexport const clampToMaxSize = (image, maxSize, scaleNearestPowerOfTwo = false) => {\n\tif (image.width > maxSize || image.height > maxSize) {\n    const scale = maxSize/Math.max(image.width, image.height)\n    return scaleWithCanvas(image, scale, scaleNearestPowerOfTwo)\n  } else {\n    return scaleNearestPowerOfTwo ? makePowerOfTwo(image) : image\n  }\n}\n\n/**\n * Ensures input color has RGBA values in the interval of [0, 1].\n *\n * @private\n * @function\n * @param {Array<Number>} color\n * @return {Array<Number>}\n */\n\nexport const ensureRGBA = (color) => {\n  color = [...(color || [])]\n  for (let i = 0; i < 3; ++i) {\n    if ('number' != typeof color[i]) {\n      color[i] = 0\n    } else {\n      color[i] = clamp(color[i], 0, 1)\n    }\n  }\n\n  if ('number' != typeof color[3]) {\n    color[3] = 1\n  } else {\n    color[3] = clamp(color[3], 0, 1)\n  }\n\n  return [...color].slice(0, 4)\n}\n\n/**\n * Predicate function to determine if input is \"array like\".\n *\n * @public\n * @function\n * @param {Mixed} array\n * @return {Boolean}\n */\n\nexport const isArrayLike = (array) => {\n  return Boolean(array && (\n    Array.isArray(array)\n    || array instanceof TypedArray\n    || ('number' == array.length &&\n        'function' == typeof array[Symbol.iterator])\n  ))\n}\n",
    "static": true,
    "longname": "src/utils.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 557,
    "kind": "variable",
    "name": "TypedArray",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~TypedArray",
    "access": null,
    "export": false,
    "importPath": "axis3d/utils",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@virtual",
        "tagValue": "{HTMLImageElement} https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 558,
    "kind": "variable",
    "name": "kLibraryVersion",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~kLibraryVersion",
    "access": null,
    "export": false,
    "importPath": "axis3d/utils",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 559,
    "kind": "variable",
    "name": "round",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~round",
    "access": "private",
    "export": false,
    "importPath": "axis3d/utils",
    "importStyle": null,
    "description": "Math dependencies.",
    "lineNumber": 24,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 560,
    "kind": "function",
    "name": "define",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~define",
    "access": "private",
    "export": true,
    "importPath": "axis3d/utils",
    "importStyle": "{define}",
    "description": "Define property helper.",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 561,
    "kind": "function",
    "name": "radians",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~radians",
    "access": "private",
    "export": true,
    "importPath": "axis3d/utils",
    "importStyle": "{radians}",
    "description": "Converts input degrees to radians",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 562,
    "kind": "variable",
    "name": "debug",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~debug",
    "access": "private",
    "export": true,
    "importPath": "axis3d/utils",
    "importStyle": "{debug}",
    "description": "Utility debug output",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fmt",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "...Mixed"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 563,
    "kind": "function",
    "name": "lerp",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~lerp",
    "access": "private",
    "export": true,
    "importPath": "axis3d/utils",
    "importStyle": "{lerp}",
    "description": "Simple linear inerpolation function.",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "v0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "v1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 564,
    "kind": "function",
    "name": "getScreenOrientation",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~getScreenOrientation",
    "access": "private",
    "export": true,
    "importPath": "axis3d/utils",
    "importStyle": "{getScreenOrientation}",
    "description": "Returns the screen orientation angle.\nBorrowed from https://github.com/hawksley/eleVR-Web-Player/blob/master/lib/util.js",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 565,
    "kind": "function",
    "name": "nearestPowerOfTwo",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~nearestPowerOfTwo",
    "access": "private",
    "export": true,
    "importPath": "axis3d/utils",
    "importStyle": "{nearestPowerOfTwo}",
    "description": "Finds the nearest power of two for a\ngiven number value.",
    "lineNumber": 107,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 566,
    "kind": "function",
    "name": "makePowerOfTwo",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~makePowerOfTwo",
    "access": "private",
    "export": true,
    "importPath": "axis3d/utils",
    "importStyle": "{makePowerOfTwo}",
    "description": "Convert an image or canvas to the nearest power\nof two.\nBorrowed from https://github.com/mrdoob/three.js/blob/dev/src/renderers/webgl/WebGLTextures.js",
    "lineNumber": 120,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLImageElement",
          "HTMLCanvasElement"
        ],
        "spread": false,
        "optional": false,
        "name": "image",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLImageElement",
        "HTMLCanvasElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 567,
    "kind": "function",
    "name": "createCanvas",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~createCanvas",
    "access": "private",
    "export": true,
    "importPath": "axis3d/utils",
    "importStyle": "{createCanvas}",
    "description": "Creates a canvas DOM element.",
    "lineNumber": 141,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "HTMLCanvasElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 568,
    "kind": "function",
    "name": "scaleWithCanvas",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~scaleWithCanvas",
    "access": "private",
    "export": true,
    "importPath": "axis3d/utils",
    "importStyle": "{scaleWithCanvas}",
    "description": "Scale image using a canvas.\nWarning: Scaling through the canvas will only work with\nimages that use premultiplied alpha.\n\nBorrowed from https://github.com/mrdoob/three.js/blob/dev/src/renderers/webgl/WebGLTextures.js",
    "lineNumber": 159,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLImageElement",
          "HTMLCanvasElement"
        ],
        "spread": false,
        "optional": false,
        "name": "image",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "scale",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "scaleNearestPowerOfTwo",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLImageElement",
        "HTMLCanvasElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 569,
    "kind": "function",
    "name": "clampToMaxSize",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~clampToMaxSize",
    "access": "private",
    "export": true,
    "importPath": "axis3d/utils",
    "importStyle": "{clampToMaxSize}",
    "description": "Clamp an image to a max size.",
    "lineNumber": 187,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLImageElement",
          "HTMLCanvasElement"
        ],
        "spread": false,
        "optional": false,
        "name": "image",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxSize",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "scaleNearestPowerOfTwo",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLImageElement",
        "HTMLCanvasElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 570,
    "kind": "function",
    "name": "ensureRGBA",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~ensureRGBA",
    "access": "private",
    "export": true,
    "importPath": "axis3d/utils",
    "importStyle": "{ensureRGBA}",
    "description": "Ensures input color has RGBA values in the interval of [0, 1].",
    "lineNumber": 205,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Number>"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<Number>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 571,
    "kind": "function",
    "name": "isArrayLike",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~isArrayLike",
    "access": "public",
    "export": true,
    "importPath": "axis3d/utils",
    "importStyle": "{isArrayLike}",
    "description": "Predicate function to determine if input is \"array like\".",
    "lineNumber": 233,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Mixed"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 573,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 574,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 575,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 576,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 577,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 578,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 579,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 580,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 581,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 582,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 583,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 584,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 585,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 586,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 587,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 588,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 589,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 590,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 591,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 592,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 593,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 594,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 595,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 596,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 597,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 598,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 599,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 600,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 601,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 602,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 603,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 604,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 605,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 606,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 607,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 608,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 609,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 610,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 611,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 612,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 613,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 614,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 615,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 616,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 617,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 618,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 619,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 621,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 622,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 623,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 624,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 625,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 626,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 627,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 628,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  }
]